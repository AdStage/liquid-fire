define("liquid-fire/app",["ember","ember/resolver","ember/load-initializers","exports"],function(e,t,n,i){"use strict";var s=e["default"],o=t["default"],a=n["default"];s.MODEL_FACTORY_INJECTIONS=!0;var r=s.Application.extend({modulePrefix:"liquid-fire",Resolver:o});a(r,"liquid-fire"),i["default"]=r}),define("liquid-fire/components/code-snippet",["ember","liquid-fire/snippets","exports"],function(e,t,n){"use strict";var i=e["default"],s=t["default"],o=require("highlight.js");n["default"]=i.Component.extend({tagName:"pre",classNameBindings:["language"],unindent:!0,_unindent:function(e){if(!this.get("unindent"))return e;for(var t,n,i=e.split("\n"),s=0;s<i.length;s++)t=/^\s*/.exec(i[s]),t&&("undefined"==typeof n||n>t[0].length)&&(n=t[0].length);return"undefined"!=typeof n&&n>0&&(e=e.replace(new RegExp("(\\n|^)\\s{"+n+"}","g"),"$1")),e},source:function(){return this._unindent((s[this.get("name")]||"").replace(/^(\s*\n)*/,"").replace(/\s*$/,""))}.property("name"),didInsertElement:function(){o.highlightBlock(this.get("element"))},language:function(){var e=/\.(\w+)$/i.exec(this.get("name"));if(e)switch(e[1].toLowerCase()){case"js":return"javascript";case"hbs":return"handlebars"}}.property("name")})}),define("liquid-fire/snippets",["exports"],function(e){"use strict";e["default"]={"bind-demo-transition.js":"  this.transition(\n    this.childOf('#liquid-bind-demo'),\n    this.use('toUp')\n  );","bind-demo-style.css":"#liquid-bind-demo {\n    font-size: 48px;\n    line-height: 66px;\n    text-align: center;\n    .liquid-outlet {\n	display: inline-block;\n	vertical-align: top;\n    }\n    .liquid-child {\n        /* This prevents a slight horizontal wobble in firefox. */\n        width: 1.5em;\n    }\n}\n","child-of-example.hbs":'<div id="main-container">\n  {{liquid-outlet}}\n</div>\n',"child-of-example.js":"this.transition(\n  this.childOf('#main-container'),\n  this.use('toUp')\n);\n","cross-fade-definition.js":'import { animate, stop, Promise } from "vendor/liquid-fire";\nexport default function crossFade(oldView, insertNewView, opts) {\n  stop(oldView);\n  return insertNewView().then(function(newView) {\n    return Promise.all([\n      animate(oldView, {opacity: 0}, opts),\n      animate(newView, {opacity: [1, 0]}, opts)\n    ]);\n  });\n}',"curried-transition.js":"/* app/transitions/blue-animation.js */\nimport { curryTransition } from \"vendor/liquid-fire\";\nexport default curryTransition('myAnimation', 'blue', { duration: 300 });\n\n/* within app/transitions.js */\nthis.transition(\n  this.withinRoute('home'),\n  this.use('blueAnimation')\n);\n","fade-definition.js":"import { isAnimating, finish, timeSpent, animate, stop } from \"vendor/liquid-fire\";\nexport default function fade(oldView, insertNewView, opts) {\n  var firstStep,\n      outOpts = opts;\n\n  if (isAnimating(oldView, 'fade-out')) {\n    // if the old view is already fading out, let it finish.\n    firstStep = finish(oldView, 'fade-out');\n  } else {\n    if (isAnimating(oldView, 'fade-in')) {\n      // if the old view is partially faded in, scale its fade-out\n      // duration appropriately.\n      outOpts = { duration: timeSpent(oldView, 'fade-in') };\n    }\n    stop(oldView);\n    firstStep = animate(oldView, {opacity: 0}, outOpts, 'fade-out');\n  }\n\n  return firstStep.then(insertNewView).then(function(newView){\n    return animate(newView, {opacity: [1, 0]}, opts, 'fade-in');\n  });\n}","has-class-example-dom.hbs":'<div class="ember-view liquid-child magical">\n  It\'s a unicorn!\n</div>\n',"has-class-example.hbs":"{{#liquid-if isUnicorn class=\"magical\"}}\n  It's a unicorn!\n{{else}}\n  It's something else!\n{{/liquid-if}}\n","has-class-example.js":"this.transition(\n  this.hasClass('magical'),\n  this.use('crossFade')\n);\n","liquid-bind-demo.hbs":'<div id="liquid-bind-demo">\n  {{liquid-bind hours}}:{{liquid-bind minutes}}:{{liquid-bind seconds}}\n</div>',"liquid-box-demo-transition.js":"  this.transition(\n    // hasClass('vehicles') is true even during the first render, so\n    // we also require fromNonEmptyModel to prevent an animation when\n    // the page first loads.\n    this.fromNonEmptyModel(),\n    this.hasClass('vehicles'),\n\n    // this makes our rule apply when the liquid-if transitions to the\n    // true state.\n    this.toModel(true),\n    this.use('crossFade', {duration: 1000}),\n\n    // which means we can also apply a reverse rule for transitions to\n    // the false state.\n    this.reverse('toLeft', {duration: 1000})\n  );","liquid-box-demo.hbs":'<div id="liquid-box-demo">\n  <label>I\'m renting a </label>\n  {{view "select" value=vehicle content=vehicles}}\n\n  {{#liquid-if isBike class="vehicles"}}\n    <label>\n      Would you like a helmet? {{input type="checkbox" value="helmet"}}\n    </label>\n  {{else}}\n    <label>License Number</label>\n    {{input type="text" value=license}}\n    <label>License State</label>\n    {{view "select" value=state content=states}}\n  {{/liquid-if}}\n\n  <button type="button" class="btn btn-success">Yay, let\'s go!</button>\n</div>',"model-match-examples.js":"// Matches any transition that ends up with a model that's a Person.\nthis.transition(\n  this.toModel(function(){ this instanceof Person }),\n  this.use('toLeft')\n);\n\n// Instance checks are common so there's a shorthand. This is\n// equivalent to the previous example.\nthis.transition(\n  this.toModel({instanceOf: Person}),\n  this.use('toLeft')\n);\n\n// You can list multiple constraints and they will be tested in order\n// and all must pass.\nthis.transition(\n  this.toModel({instanceOf: Person}),\n  this.toModel(function(){ return this.get('age') > 21 }),\n  this.use('toLeft')\n);\n\n// You can constrain the from-model too.\nthis.transition(\n  this.fromModel({instanceOf: Person}),\n  this.toModel({instanceOf: Pet}),\n  this.use('toLeft')\n);\n\n// When they're both the same, you can use shorthand:\nthis.transition(\n  this.betweenModels({instanceOf: Person}),\n  this.use('toLeft')\n);\n\n// `null` matches an undefined model. The from-model will be undefined\n// during the initial render.\nthis.transition(\n  this.fromModel(null),\n  this.toModel({instanceOf: Person}),\n  this.use('fade')\n);\n\n// `true` is essentially shorthand for function(){ return this; }. And\n// `false` works too. These are useful when you're writing a rule that\n// targets a liquid-if and you want to animate differently for the two\n// different logical transitions.\nthis.transition(\n  this.hasClass('fancy-choice'),\n  this.toModel(true),\n  this.use('toUp'),\n  this.reverse('toDown')\n);\n\n// Your test functions also receive an argument containing the \"other\"\n// model, so you can do direct comparisons between them:\nthis.transition(\n  // compare them by id and only run this animation if we're moving to\n  // a model with a higher id.\n  this.toModel(function(fromModel) {\n    return this && fromModel && this.get('id') > fromModel.get('id');\n  }),\n\n  this.use('toLeft')\n);\n\n// The above pattern of testing for non-undefined models is common, so\n// there's are shorthand methods fromNonEmptyModel, toNonEmptyModel,\n// and betweenNonEmptyModels:\nthis.transition(\n  this.betweenNonEmptyModels(),\n  this.toModel(function(fromModel) {\n    return this.get('id') > fromModel.get('id');\n  }),\n  this.use('toLeft')\n);\n","outlet.hbs":'{{liquid-outlet class="demo-container"}}',"rotate-below.js":"import { stop, animate, Promise } from \"vendor/liquid-fire\";\n\nexport default function rotateBelow(oldView, insertNewView, opts) {\n  var direction = 1;\n  if (opts && opts.direction === 'cw') {\n    direction = -1;\n  }\n  stop(oldView);\n  return insertNewView().then(function(newView) {\n    if (oldView) {\n      oldView.$().css('transform-origin', '50% 150%');\n    }\n    if (newView) {\n      newView.$().css('transform-origin', '50% 150%');\n    }\n    return Promise.all([\n      animate(oldView, { rotateZ: -90*direction + 'deg' }, opts),\n      animate(newView, { rotateZ: ['0deg', 90*direction+'deg'] }, opts),\n    ]);\n  });\n}","route-match-examples.js":"// Matches any transition that ends up in the route named 'foo', no\n// matter where it came from.\nthis.transition(\n  this.toRoute('foo'),\n  this.use('toLeft')\n);\n\n// This is equivalent to the previous example, but showing a more\n// generic form that lets you provide an arbitrary test.\nthis.transition(\n  this.toRoute(function(){ return this === 'foo'; }),\n  this.use('toLeft')\n);\n\n// You can list multiple routes, and the constraint will be satisfied\n// by any of them. This wil match any transition that ends up in 'foo'\n// or 'bar'.\nthis.transition(\n  this.toRoute('foo', 'bar'),\n  this.use('toLeft')\n);\n\n// You can mix and match strings and functions. This is equivalent to\n// the previous example.\nthis.transition(\n  this.toRoute('foo', function(){ return this === 'bar'; }),\n  this.use('toLeft')\n);\n\n// All of these examples apply to fromRoute too. This will match any\n// transition from 'foo' to 'bar', or from 'foo' to any route name\n// starting with 'q'.\nthis.transition(\n  this.fromRoute('foo'),\n  this.toRoute('bar', function(){ return /^q/.test(this); }),\n  this.use('toLeft')\n);\n\n// withinRoute is just a shorthand. Instead of saying this:\nthis.transition(\n  this.fromRoute('foo'),\n  this.toRoute('foo'),\n  this.use('toLeft')\n);\n// you can say this:\nthis.transition(\n  this.withinRoute('foo'),\n  this.use('toLeft')\n);\n\n// All of the route constraints also accept null to match the empty\n// route. The empty route is the initial route the very first time an\n// outlet is rendered.  So this example causes the 'foo' route to fade\n// in during the initial render:\nthis.transition(\n  this.fromRoute(null),\n  this.toRoute('foo'),\n  this.use('fade')\n);\n","simple-transition-map.js":"export default function(){\n  this.transition(\n    this.fromRoute('people.index'),\n    this.toRoute('people.detail'),\n    this.use('toLeft'),\n    this.reverse('toRight')\n  );\n};\n","transition-arguments.js":"/* app/transitions/my-animation.js */\nexport default function(oldView, insertNewView, color, opts) {\n  //...\n});\n\n/* within app/transitions.js */\nthis.transition(\n  this.withinRoute('home'),\n  this.use('myAnimation', 'red', { duration: 100 })\n);\n","transition-definitions.js":'import { animate, stop } from "vendor/liquid-fire";\n\nexport default function fade(oldView, insertNewView) {\n  stop(oldView);\n  return animate(oldView, {opacity: 0})\n    .then(insertNewView)\n    .then(function(newView){\n      return animate(newView, {opacity: [1, 0]});\n    });\n}\n',"transition-demo.js":"  this.transition(\n    this.fromRoute('helpers-documentation.liquid-outlet.index'),\n    this.toRoute('helpers-documentation.liquid-outlet.other'),\n    this.use('toLeft'),\n    this.reverse('toRight')\n  );","transition-skeleton.js":"export default function(oldView, insertNewView) {\n  return ... // A promise that resolves when the transition is finished.\n});\n","use-examples.js":"// The simplest 'use' just calls a named transition.\nthis.transition(\n  this.withinRoute('foo'),\n  this.use('fade')\n);\n\n// Named transitions may take arguments. For example, the predefined\n// 'fade' transition accepts an `opts` hash that's passed through to\n// Velocity, so you can say:\nthis.transition(\n  this.withinRoute('foo'),\n  this.use('fade', { duration: 3000 })\n);\n\n// This declares two symmetric rules: \"from foo to bar use toLeft\" and\n// \"from bar to foo use toRight\".\nthis.transition(\n  this.fromRoute('foo'),\n  this.toRoute('bar'),\n  this.use('toLeft'),\n  this.reverse('toRight')\n);\n\n// You can also provide an implementation instead of a name, though\n// it's probably better to keep implementations in separate files. We\n// talk more about transition implementations in the next section.\nimport { animate, stop } from \"vendor/liquid-fire\";\nthis.transition(\n  this.withinRoute('foo'),\n  this.use(function(oldView, insertNewView, opts) {\n    stop(oldView);\n    return animate(oldView, {opacity: 0}, opts)\n      .then(insertNewView)\n      .then(function(newView){\n        return animate(newView, {opacity: [1, 0]}, opts);\n      });\n  })\n);\n","with-demo.hbs":'\n{{#liquid-with model controller="demo" use="rotateBelow" class="demo-container"}}\n  {{id}}\n  <button {{action "higher"}}>Go</button>\n{{/liquid-with}}\n'}}),define("liquid-fire/components/nav-link",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Component.extend({classNames:["nav-link"],classNameBindings:["direction"],preGlyphicon:function(){return this.get("topic")&&"back"===this.get("direction")?"glyphicon-chevron-left":void 0}.property("direction","topic"),postGlyphicon:function(){return this.get("topic")&&"forward"===this.get("direction")?"glyphicon-chevron-right":void 0}.property("direction","topic")})}),define("liquid-fire/config/environment",["exports"],function(e){"use strict";e["default"]={environment:"production",baseURL:"/",locationType:"hash",EmberENV:{EXTEND_PROTOTYPES:!0,FEATURES:{}},APP:{}}}),define("liquid-fire/controllers/application",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Controller.extend({tableOfContents:function(){return[{route:"index",title:"Introduction"},{route:"helpers-documentation",title:"Template Helpers",children:[{route:"helpers-documentation.liquid-outlet",title:"liquid-outlet"},{route:"helpers-documentation.liquid-with",title:"liquid-with"},{route:"helpers-documentation.liquid-bind",title:"liquid-bind"},{route:"helpers-documentation.liquid-if",title:"liquid-if"}]},{route:"transition-map",title:"Transition Map",children:[{route:"transition-map.route-constraints",title:"Matching by route"},{route:"transition-map.model-constraints",title:"Matching by model"},{route:"transition-map.dom-constraints",title:"Matching by DOM context"},{route:"transition-map.choosing-transitions",title:"Choosing transition animations"}]},{route:"transitions",title:"Transitions",children:[{route:"transitions.predefined",title:"Predefined transitions"},{route:"transitions.defining",title:"Defining custom transitions"},{route:"transitions.primitives",title:"Animation Primitives"}]}]}.property(),flatContents:function(){var e=[];return this.get("tableOfContents").forEach(function(t){e.push(t),t.children&&(e=e.concat(t.children))}),e}.property("tableOfContents"),currentIndex:function(){for(var e,t,n=this.get("flatContents"),i=this.get("currentRouteName"),s=0;s<n.length;s++)t=n[s],t.route&&new RegExp("^"+t.route.replace(/\./g,"\\.")).test(i)&&("undefined"==typeof e||n[e].route.length<t.route.length)&&(e=s);return e}.property("currentRouteName","flatContents"),nextTopic:function(){var e=this.get("flatContents"),t=this.get("currentIndex");return"undefined"!=typeof t?e[t+1]:void 0}.property("currentIndex","flatContents"),prevTopic:function(){var e=this.get("flatContents"),t=this.get("currentIndex");return"undefined"!=typeof t?e[t-1]:void 0}.property("currentIndex","flatContents")})}),define("liquid-fire/controllers/demo",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.ObjectController.extend({actions:{higher:function(){var e=this.get("model");this.transitionToRoute("helpers-documentation.liquid-with.page",e.get("id")+1)}}})}),define("liquid-fire/controllers/helpers-documentation/liquid-bind",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Controller.extend({start:n.on("init",function(){var e=this;this.interval=setInterval(function(){n.run(e,"tick")},1e3),this.tick()}),willDestroy:function(){clearInterval(this.interval),this._super()},tick:function(e){e||(e=moment()),this.setProperties({now:e,hours:e.format("hh"),minutes:e.format("mm"),seconds:e.format("ss")})},actions:{forceTick:function(){clearInterval(this.interval),this.tick(this.get("now").add({hours:1,minutes:1,seconds:1}))}}})}),define("liquid-fire/controllers/helpers-documentation/liquid-if",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Controller.extend({vehicle:"bike",vehicles:["bike","car"],states:["","AL","AK","AZ","AR","CA","CO","CT"],isBike:n.computed.equal("vehicle","bike")})}),define("liquid-fire/controllers/sample",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.ObjectController.extend({usingSampleController:!0})}),define("liquid-fire/controllers/test-bind",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Controller.extend({counter:0,init:function(){var e=this;this.interval=setInterval(function(){e.tick()},1e3),this.tick()},willDestroy:function(){clearInterval(this.interval)},tick:function(){this.set("counter",this.get("counter")+1)}})}),define("liquid-fire/controllers/test-if",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Controller.extend({message:"Hello"})}),define("liquid-fire/controllers/test-with",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.ObjectController.extend({actions:{increment:function(){this.transitionToRoute("test-with",parseInt(this.get("model.id"))+1)},decrement:function(){this.transitionToRoute("test-with",parseInt(this.get("model.id"))-1)}}})}),define("liquid-fire/helpers/liquid-bind",["exports"],function(e){"use strict";e["default"]=function(){var e=arguments[arguments.length-1],t=e.data.view.container,n=t.lookupFactory("helper:liquid-with");return e.fn=t.lookup("template:liquid-with-self"),n.apply(this,arguments)}}),define("liquid-fire/helpers/liquid-box",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=function(){n.assert("liquid-box is deprecated, see CHANGELOG.md",!1)}}),define("liquid-fire/helpers/liquid-if",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=function(e,t){var i=t.data.view.container.lookupFactory("view:liquid-if");return t.hash.firstTemplate=t.fn,delete t.fn,t.hash.secondTemplate=t.inverse,delete t.inverse,t.hash.showFirstBinding=e,n.Handlebars.helpers.view.call(this,i,t)}}),define("liquid-fire/helpers/liquid-measure",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=function(){n.assert("liquid-measure is deprecated, see CHANGELOG.md",!1)}}),define("liquid-fire/helpers/liquid-outlet",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=function(e,t){return e&&e.data&&e.data.isRenderData&&(t=e,e="main"),t.hash.view="liquid-outlet",n.Handlebars.helpers.outlet.call(this,e,t)}}),define("liquid-fire/helpers/liquid-with",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=function(){var e=arguments[0],t=arguments[arguments.length-1],i=t.data.view.container.lookupFactory("view:liquid-with"),s={data:t.data,hash:{},hashTypes:{}};return i=i.extend({originalArgs:Array.prototype.slice.apply(arguments,[0,-1]),originalHash:t.hash,originalHashTypes:t.hashTypes,innerTemplate:t.fn}),s.hash.boundContextBinding=e,["class","classNames","classNameBindings","use","id"].forEach(function(e){t.hash[e]&&(s.hash[e]=t.hash[e],s.hashTypes[e]=t.hashTypes[e])}),n.Handlebars.helpers.view.call(this,i,s)}}),define("liquid-fire/helpers/with-apply",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=function(e){var t=e.data.view,i=t.get("liquidWithParent"),s=i.get("originalArgs").slice();return s[0]="lwith-view.boundContext",e=n.copy(e),e.data.keywords["lwith-view"]=t,e.fn=i.get("innerTemplate"),e.hash=i.get("originalHash"),e.hashTypes=i.get("originalHashTypes"),s.push(e),n.Handlebars.helpers["with"].apply(this,s)}}),define("liquid-fire/initializers/compat",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]={name:"liquid-fire-docs",initialize:function(e){e.lookupFactory("view:select")||e.register("view:select",n.Select)}}}),define("liquid-fire/initializers/liquid-fire",["vendor/liquid-fire","ember","exports"],function(e,t,n){"use strict";var i=e.initialize,s=t["default"];n["default"]={name:"liquid-fire",initialize:function(e){if(s.$.Velocity){var t=s.$.Velocity.version,n=[0,11,8];1===s.compare(n,[t.major,t.minor,t.patch])&&s.warn("You should probably upgrade Velocity.js, recommended minimum is "+n.join("."))}else s.warn("Velocity.js is missing");i(e,e.lookupFactory("transitions:main")),s.testing&&s.Test.registerWaiter(function(){return 0===e.lookup("transitions:map").runningTransitions()})}}}),define("vendor/liquid-fire",["vendor/liquid-fire/transitions","vendor/liquid-fire/animate","vendor/liquid-fire/promise","vendor/liquid-fire/initialize","vendor/liquid-fire/mutation-observer","vendor/liquid-fire/curry","exports"],function(e,t,n,i,s,o,a){"use strict";var r=e["default"],l=t.animate,u=t.stop,h=t.isAnimating,d=t.timeSpent,p=t.timeRemaining,c=t.finish,f=n["default"],m=i["default"],b=s["default"],v=o["default"];a.Transitions=r,a.animate=l,a.stop=u,a.isAnimating=h,a.timeSpent=d,a.timeRemaining=p,a.finish=c,a.Promise=f,a.initialize=m,a.MutationObserver=b,a.curryTransition=v}),define("vendor/liquid-fire/transitions",["vendor/liquid-fire/transition","vendor/liquid-fire/dsl","exports"],function(e,t,n){"use strict";function i(){this._map={},this.map(function(){this.setDefault({duration:250})})}var s=e["default"],o=t["default"];i.prototype={activeCount:0,runningTransitions:function(){return this.activeCount},lookup:function(e){var t=this.container.lookupFactory("transition:"+e);if(!t)throw new Error("unknown transition name: "+e);return t},transitionFor:function(e,t,n,i){var o,a;if(i&&t)o=this.lookup(i);else{var r=this.match(e,t,n);r&&(a=r.args,o="function"==typeof r.method?r.method:this.lookup(r.method))}return new s(e,t,n,o,a,this)},map:function(e){return e&&e.apply(new o(this)),this},register:function(e,t,n,i){this._register(this._map,[e.from,e.to,n,t.from,t.to],i)},_register:function(e,t,n){for(var i=t[0],s=0;s<i.length;s++){var o=i[s];if("function"==typeof o)if(e.__functions||(e.__functions=[]),1===t.length)e.__functions.push([o,n]);else{var a={};this._register(a,t.slice(1),n),e.__functions.push([o,a])}else 1===t.length?e[o]=n:(e[o]||(e[o]={}),this._register(e[o],t.slice(1),n))}},_viewProperties:function(e,t){return e&&t&&(e=e.get(t)),e?{route:e.get("renderedName"),context:e.get("liquidContext")}:{}},_ancestorsRenderedName:function(e){for(;e&&!e.get("renderedName");)e=e.get("_parentView");return e?e.get("renderedName"):void 0},match:function(e,t,n){var i={leaving:this._viewProperties(t,"currentView"),entering:this._viewProperties(n),parentView:e};return t&&!i.leaving.route&&(i.leaving.route=this._ancestorsRenderedName(e)),n&&!i.entering.route&&(i.entering.route=i.leaving.route||this._ancestorsRenderedName(e)),this._match(i,this._map,[i.leaving.route,i.entering.route,e,i.leaving.context,i.entering.context])},_match:function(e,t,n){var i,s,a,r=0,l=n[0],u=n.slice(1),h=[l||o.EMPTY].concat(t.__functions).concat(o.ANY);for(r=0;r<h.length;r++)if(i=h[r],i&&(s="function"==typeof i[0]?i[0].apply(l,this._predicateArgs(e,n.length))?i[1]:null:t[i])){if(0===u.length)return s;if(a=this._match(e,s,u))return a}},_predicateArgs:function(e,t){var n=5-t;switch(n){case 0:return[e.entering.route];case 1:return[e.leaving.route];case 2:return[];case 3:return[e.entering.context];case 4:return[e.leaving.context]}}},i.map=function(e){var t=new i;return t.map(e),t},n["default"]=i}),define("vendor/liquid-fire/transition",["vendor/liquid-fire/promise","exports"],function(e,t){"use strict";function n(e,t,n,i,s,o){this.parentView=e,this.oldView=t,this.newContent=n,this.animation=i,this.animationArgs=s,this.transitionMap=o}function i(e){var t;e&&(t=e.$())&&t.show().css({visibility:""})}function s(e){var t;return e&&(t=e.$())?{width:t.width(),height:t.height()}:void 0}function o(e,t){var n;e&&(n=e.$())&&(t||(t=s(e)),n.width(t.width),n.height(t.height),n.css({position:"absolute"}))}function a(e){var t;e&&(t=e.$())&&t.css({width:"",height:"",position:""})}var r=e["default"];n.prototype={run:function(){if(!this.animation)return this.maybeDestroyOldView(),this._insertNewView().then(i);var e=this;return e.transitionMap.activeCount+=1,this._invokeAnimation().then(function(){e.maybeDestroyOldView()},function(t){return e.cleanupAfterError().then(function(){throw t})}).finally(function(){e.transitionMap.activeCount-=1})},_insertNewView:function(){return this.inserted?this.inserted:this.inserted=this.parentView._pushNewView(this.newContent)},_invokeAnimation:function(){this.parentView.cacheSize();var e=this,t=this.animation,n=function(){return o(e.oldView),e._insertNewView().then(function(t){if(t){t.$().show();var n=s(t);return e.parentView.adaptSize(),o(t,n),e.newView=t}})},i=[this.oldView,n].concat(this.animationArgs);return new r(function(n,s){t.apply(e,i).then(n,s)}).then(function(){e.interruptedLate||(a(e.newView),e.parentView.unlockSize())})},maybeDestroyOldView:function(){!this.interruptedEarly&&this.oldView&&this.oldView.destroy()},cleanupAfterError:function(){return this.maybeDestroyOldView(),this._insertNewView().then(i)},interrupt:function(){this.inserted?this.interruptedLate=!0:(this.inserted=r.cast(null),this.interruptedEarly=!0)},lookup:function(e){return this.transitionMap.lookup(e)}},t["default"]=n}),define("vendor/liquid-fire/promise",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.RSVP.Promise}),define("vendor/liquid-fire/dsl",["ember","vendor/liquid-fire/animate","exports"],function(e,t,n){"use strict";function i(e){this.map=e}function s(e){if(!e)return i.EMPTY;if("function"==typeof e)return e;if(e.instanceOf)return function(){return this instanceof e.instanceOf||this&&this.get&&this.get("model")&&this.get("model")instanceof e.instanceOf};if("boolean"==typeof e)return function(){return e?!!this:!this};throw new Error("unknown context matcher: "+JSON.stringify(e))}var o=e["default"],a=t.setDefaults;i.prototype={setDefault:function(e){a(e)},define:function(){throw new Error("calling 'define' from within the transition map is deprecated")},_withEmpty:function(e){return e||i.EMPTY},_combineMatchers:function(e){return[e.reduce(function(e,t){if("function"!=typeof e||"function"!=typeof t)throw new Error("cannot combine empty model matcher with any other constraints");return function(){return e.apply(this,arguments)&&t.apply(this,arguments)}})]},transition:function(){for(var e,t,n=[],s={},o={},a=Array.prototype.slice.apply(arguments).reduce(function(e,t){return e.concat(t)},[]),r=0;r<a.length;r++){var l=a[r];if("action"===l.type){if(e)throw new Error("each transition definition must contain exactly one 'use' statement");e={method:l.payload,args:l.args}}else if("reverseAction"===l.type){if(t)throw new Error("each transition defintiion may contain at most one 'reverse' statement");t={method:l.payload,args:l.args}}else if("route"===l.type){if(s[l.side])throw new Error("A transition definition contains multiple constraints on "+l.side+"Route");s[l.side]=l.payload.map(this._withEmpty)}else"parent"===l.type?n.push(l.payload):(o[l.side]||(o[l.side]=[]),o[l.side].push(l.payload))}if(!e)throw new Error("a transition definition contains no 'use' statement");s.from||(s.from=[i.ANY]),s.to||(s.to=[i.ANY]),0===n.length&&n.push(i.ANY),o.from||(o.from=[i.ANY]),o.to||(o.to=[i.ANY]),n=this._combineMatchers(n),o.from=this._combineMatchers(o.from),o.to=this._combineMatchers(o.to),this.map.register(s,o,n,e),t&&(s={from:s.to,to:s.from},o={from:o.to,to:o.from},this.map.register(s,o,n,t))},fromRoute:function(){return{side:"from",type:"route",payload:Array.prototype.slice.apply(arguments)}},toRoute:function(){return{side:"to",type:"route",payload:Array.prototype.slice.apply(arguments)}},withinRoute:function(){return[this.fromRoute.apply(this,arguments),this.toRoute.apply(this,arguments)]},fromModel:function(e){return{side:"from",type:"context",payload:s(e)}},toModel:function(e){return{side:"to",type:"context",payload:s(e)}},betweenModels:function(e){return[this.fromModel(e),this.toModel(e)]},hasClass:function(e){return{type:"parent",payload:function(){return this&&-1!==this.get("classNames").indexOf(e)}}},childOf:function(e){return{type:"parent",payload:function(){var t;return this&&this._morph&&o.$(this._morph.start.parentElement).is(e)||this.morph&&o.$("#"+this.morph.start).parent().is(e)||(t=this.$())&&t.parent().is(e)}}},fromNonEmptyModel:function(){return this.fromModel(function(){return"undefined"!=typeof this})},toNonEmptyModel:function(){return this.toModel(function(){return"undefined"!=typeof this})},betweenNonEmptyModels:function(){return this.betweenModels(function(){return"undefined"!=typeof this})},use:function(e){return{type:"action",payload:e,args:Array.prototype.slice.apply(arguments,[1])}},reverse:function(e){return{type:"reverseAction",payload:e,args:Array.prototype.slice.apply(arguments,[1])}}},i.ANY="__liquid-fire-ANY",i.EMPTY="__liquid-fire-EMPTY",n["default"]=i}),define("vendor/liquid-fire/animate",["vendor/liquid-fire/promise","ember","exports"],function(e,t,n){"use strict";function i(e,t,n,i){var s,o={percentComplete:0,timeRemaining:100,timeSpent:0};if(!e||!(s=e.$())||!s[0])return c.cast();if(n=n?f.copy(n):{},"undefined"==typeof n.display&&(n.display=""),"undefined"==typeof n.visibility&&(n.visibility="visible"),n.progress)throw new Error("liquid-fire's 'animate' function reserves the use of Velocity's 'progress' option for its own nefarious purposes.");return n.progress=function(){o.percentComplete=arguments[1],o.timeRemaining=arguments[2],o.timeSpent=o.timeRemaining/(1/o.percentComplete-1)},o.promise=c.cast(m.animate(s[0],t,n)),i&&(o.promise=o.promise.then(function(){p(e,i)},function(t){throw p(e,i),t}),d(e,i,o)),o.promise}function s(e){var t;e&&(t=e.$())&&t.velocity("stop",!0)}function o(e){for(var t in e)if(e.hasOwnProperty(t)){if("progress"===t)throw new Error("liquid-fire's 'animate' function reserves the use of Velocity's '"+t+"' option for its own nefarious purposes.");m.defaults[t]=e[t]}}function a(e,t){return e&&e._lfTags&&e._lfTags[t]}function r(e,t){return h(e,t).promise}function l(e,t){return h(e,t).timeSpent}function u(e,t){return h(e,t).timeRemaining}function h(e,t){var n=a(e,t);if(!n)throw new Error("no animation labeled "+t+" is in progress");return n}function d(e,t,n){e&&(e._lfTags||(e._lfTags={}),e._lfTags[t]=n)}function p(e,t){e&&e._lfTags&&delete e._lfTags[t]}var c=e["default"],f=t["default"],m=f.$.Velocity;m.Promise||(m.Promise=c),n.animate=i,n.stop=s,n.setDefaults=o,n.isAnimating=a,n.finish=r,n.timeSpent=l,n.timeRemaining=u}),define("vendor/liquid-fire/initialize",["vendor/liquid-fire/transitions","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=function(e,t){var i=n.map(t);i.container=e,e.register("transitions:map",i,{instantiate:!1}),["outlet","with","if"].forEach(function(t){e.injection("view:liquid-"+t,"transitions","transitions:map")})}}),define("vendor/liquid-fire/mutation-observer",["exports"],function(e){"use strict";function t(e){this.callback=e}t.prototype={observe:function(){this.interval=setInterval(this.callback,100)},disconnect:function(){clearInterval(this.interval)}};var n=window.MutationObserver||window.WebkitMutationObserver||t;e["default"]=n}),define("vendor/liquid-fire/curry",["exports"],function(e){"use strict";e["default"]=function(e){var t=Array.prototype.slice.apply(arguments,[1]);return function(){var n=this.lookup(e),i=Array.prototype.slice.apply(arguments);return i.splice.apply(i,[2,0].concat(t)),n.apply(this,i)}}}),define("liquid-fire/mixins/reset-scroll",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Mixin.create({activate:function(){this._super(),window.scrollTo(0,0)}})}),define("liquid-fire/router",["ember","exports"],function(e,t){"use strict";var n=e["default"],i=n.Router.extend({location:LiquidFireENV.locationType});i.map(function(){this.resource("helpers-documentation",{path:"helpers"},function(){this.route("liquid-outlet",function(){this.route("other")}),this.route("liquid-with",function(){this.route("page",{path:"/:id"})
}),this.route("liquid-bind"),this.route("liquid-if")}),this.resource("transition-map",function(){this.route("route-constraints"),this.route("model-constraints"),this.route("dom-constraints"),this.route("choosing-transitions")}),this.resource("transitions",function(){this.route("predefined"),this.route("defining"),this.route("primitives",function(){this.route("two"),this.route("three")})}),this.resource("scenarios",function(){this.route("inline"),this.route("inline-serial"),this.route("empty-if")})}),t["default"]=i}),define("liquid-fire/routes/helpers-documentation",["ember","liquid-fire/mixins/reset-scroll","exports"],function(e,t,n){"use strict";var i=e["default"],s=t["default"];n["default"]=i.Route.extend(s)}),define("liquid-fire/routes/helpers-documentation/liquid-bind",["ember","liquid-fire/mixins/reset-scroll","exports"],function(e,t,n){"use strict";var i=e["default"],s=t["default"];n["default"]=i.Route.extend(s)}),define("liquid-fire/routes/helpers-documentation/liquid-if",["ember","liquid-fire/mixins/reset-scroll","exports"],function(e,t,n){"use strict";var i=e["default"],s=t["default"];n["default"]=i.Route.extend(s)}),define("liquid-fire/routes/helpers-documentation/liquid-outlet",["ember","liquid-fire/mixins/reset-scroll","exports"],function(e,t,n){"use strict";var i=e["default"],s=t["default"];n["default"]=i.Route.extend(s)}),define("liquid-fire/routes/helpers-documentation/liquid-with",["ember","liquid-fire/mixins/reset-scroll","exports"],function(e,t,n){"use strict";var i=e["default"],s=t["default"];n["default"]=i.Route.extend(s)}),define("liquid-fire/routes/helpers-documentation/liquid-with/index",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Route.extend({beforeModel:function(){this.transitionTo("helpers-documentation.liquid-with.page",1)}})}),define("liquid-fire/routes/helpers-documentation/liquid-with/page",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Route.extend({model:function(e){return n.Object.create({id:parseInt(e.id)})}})}),define("liquid-fire/routes/index",["ember","liquid-fire/mixins/reset-scroll","exports"],function(e,t,n){"use strict";var i=e["default"],s=t["default"];n["default"]=i.Route.extend(s)}),define("liquid-fire/routes/transition-map/dom-constraints",["ember","liquid-fire/mixins/reset-scroll","exports"],function(e,t,n){"use strict";var i=e["default"],s=t["default"];n["default"]=i.Route.extend(s)}),define("liquid-fire/routes/transition-map/model-constraints",["ember","liquid-fire/mixins/reset-scroll","exports"],function(e,t,n){"use strict";var i=e["default"],s=t["default"];n["default"]=i.Route.extend(s)}),define("liquid-fire/routes/transition-map/route-constraints",["ember","liquid-fire/mixins/reset-scroll","exports"],function(e,t,n){"use strict";var i=e["default"],s=t["default"];n["default"]=i.Route.extend(s)}),define("liquid-fire/templates/application",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,o){function a(e,t){var n,s="";return t.buffer.push("\n      <li>\n        "),n=i["if"].call(e,"route",{hash:{},hashTypes:{},hashContexts:{},inverse:g.program(5,u,t),fn:g.program(2,r,t),contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n\n        "),n=i["if"].call(e,"children",{hash:{},hashTypes:{},hashContexts:{},inverse:g.noop,fn:g.program(7,h,t),contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n      </li>\n      "),s}function r(e,t){var n,s,o,a="";return t.buffer.push("\n          "),s=i["link-to"]||e&&e["link-to"],o={hash:{},hashTypes:{},hashContexts:{},inverse:g.noop,fn:g.program(3,l,t),contexts:[e],types:["ID"],data:t},n=s?s.call(e,"route",o):w.call(e,"link-to","route",o),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n        "),a}function l(e,t){var n;n=i._triageMustache.call(e,"title",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),t.buffer.push(n||0===n?n:"")}function u(e,t){var n,s="";return t.buffer.push("\n          "),n=i._triageMustache.call(e,"title",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n        "),s}function h(e,t){var n,s="";return t.buffer.push("\n          <ul>\n          "),n=i.each.call(e,"child","in","children",{hash:{},hashTypes:{},hashContexts:{},inverse:g.noop,fn:g.program(8,d,t),contexts:[e,e,e],types:["ID","ID","ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n          </ul>\n        "),s}function d(e,t){var n,s="";return t.buffer.push("\n            <li>\n              "),n=i["if"].call(e,"child.route",{hash:{},hashTypes:{},hashContexts:{},inverse:g.program(12,f,t),fn:g.program(9,p,t),contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n            </li>\n          "),s}function p(e,t){var n,s,o,a="";return t.buffer.push("\n                "),s=i["link-to"]||e&&e["link-to"],o={hash:{},hashTypes:{},hashContexts:{},inverse:g.noop,fn:g.program(10,c,t),contexts:[e],types:["ID"],data:t},n=s?s.call(e,"child.route",o):w.call(e,"link-to","child.route",o),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n              "),a}function c(e,t){var n;n=i._triageMustache.call(e,"child.title",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),t.buffer.push(n||0===n?n:"")}function f(e,t){var n,s="";return t.buffer.push("\n                "),n=i._triageMustache.call(e,"child",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n              "),s}this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),o=o||{};var m,b,v,y="",g=this,w=i.helperMissing,x=this.escapeExpression;return o.buffer.push('<div class="header">\n  <div class="container">\n    <div class="row">\n      <div class="col-xs-6">Liquid Fire</div>\n      <div class="col-xs-6" style="text-align: right">\n        <a href="https://github.com/ef4/liquid-fire">\n          <img src="GitHub-Mark-Light-32px-aa8455ab6817de2b70a085b6d7e407f6.png">\n        </a>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class="container main">\n  <div>\n    <div class="content">\n      <div class="clearfix">\n        '),o.buffer.push(x((b=i["nav-link"]||t&&t["nav-link"],v={hash:{topic:"prevTopic",direction:"back"},hashTypes:{topic:"ID",direction:"STRING"},hashContexts:{topic:t,direction:t},contexts:[],types:[],data:o},b?b.call(t,v):w.call(t,"nav-link",v)))),o.buffer.push("\n        "),o.buffer.push(x((b=i["nav-link"]||t&&t["nav-link"],v={hash:{topic:"nextTopic",direction:"forward"},hashTypes:{topic:"ID",direction:"STRING"},hashContexts:{topic:t,direction:t},contexts:[],types:[],data:o},b?b.call(t,v):w.call(t,"nav-link",v)))),o.buffer.push("\n      </div>\n      "),m=i._triageMustache.call(t,"outlet",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:o}),(m||0===m)&&o.buffer.push(m),o.buffer.push('\n      <div class="clearfix">\n        '),o.buffer.push(x((b=i["nav-link"]||t&&t["nav-link"],v={hash:{topic:"prevTopic",direction:"back"},hashTypes:{topic:"ID",direction:"STRING"},hashContexts:{topic:t,direction:t},contexts:[],types:[],data:o},b?b.call(t,v):w.call(t,"nav-link",v)))),o.buffer.push("\n        "),o.buffer.push(x((b=i["nav-link"]||t&&t["nav-link"],v={hash:{topic:"nextTopic",direction:"forward"},hashTypes:{topic:"ID",direction:"STRING"},hashContexts:{topic:t,direction:t},contexts:[],types:[],data:o},b?b.call(t,v):w.call(t,"nav-link",v)))),o.buffer.push("\n      </div>\n    </div>\n\n    <ul>\n      "),m=i.each.call(t,"tableOfContents",{hash:{},hashTypes:{},hashContexts:{},inverse:g.noop,fn:g.program(1,a,o),contexts:[t],types:["ID"],data:o}),(m||0===m)&&o.buffer.push(m),o.buffer.push("\n    </ul>\n  </div>\n</div>\n\n\n"),y})}),define("liquid-fire/templates/components/code-snippet",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,o){this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),o=o||{};var a,r="";return a=i._triageMustache.call(t,"source",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:o}),(a||0===a)&&o.buffer.push(a),o.buffer.push("\n"),r})}),define("liquid-fire/templates/components/nav-link",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,o){function a(e,t){var n,s="";return t.buffer.push("\n  "),n=i["if"].call(e,"topic.route",{hash:{},hashTypes:{},hashContexts:{},inverse:g.program(8,d,t),fn:g.program(2,r,t),contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n"),s}function r(e,t){var n,s,o,a="";return t.buffer.push("\n    "),s=i["link-to"]||e&&e["link-to"],o={hash:{},hashTypes:{},hashContexts:{},inverse:g.noop,fn:g.program(3,l,t),contexts:[e],types:["ID"],data:t},n=s?s.call(e,"topic.route",o):w.call(e,"link-to","topic.route",o),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n  "),a}function l(e,t){var n,s="";return t.buffer.push("\n      "),n=i["if"].call(e,"preGlyphicon",{hash:{},hashTypes:{},hashContexts:{},inverse:g.noop,fn:g.program(4,u,t),contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n      "),n=i._triageMustache.call(e,"topic.title",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n      "),n=i["if"].call(e,"postGlyphicon",{hash:{},hashTypes:{},hashContexts:{},inverse:g.noop,fn:g.program(6,h,t),contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n    "),s}function u(e,t){var n="";return t.buffer.push("\n        <div "),t.buffer.push(y(i["bind-attr"].call(e,{hash:{"class":":glyphicon preGlyphicon"},hashTypes:{"class":"STRING"},hashContexts:{"class":e},contexts:[],types:[],data:t}))),t.buffer.push("></div>\n      "),n}function h(e,t){var n="";return t.buffer.push("\n        <div "),t.buffer.push(y(i["bind-attr"].call(e,{hash:{"class":":glyphicon postGlyphicon"},hashTypes:{"class":"STRING"},hashContexts:{"class":e},contexts:[],types:[],data:t}))),t.buffer.push("></div>\n      "),n}function d(e,t){var n,s="";return t.buffer.push("\n    "),n=i["if"].call(e,"preGlyphicon",{hash:{},hashTypes:{},hashContexts:{},inverse:g.noop,fn:g.program(9,p,t),contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n    "),n=i["if"].call(e,"topic.title",{hash:{},hashTypes:{},hashContexts:{},inverse:g.program(13,f,t),fn:g.program(11,c,t),contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n    "),n=i["if"].call(e,"postGlyphicon",{hash:{},hashTypes:{},hashContexts:{},inverse:g.noop,fn:g.program(15,m,t),contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n  "),s}function p(e,t){var n="";return t.buffer.push("\n      <div "),t.buffer.push(y(i["bind-attr"].call(e,{hash:{"class":":glyphicon preGlyphicon"},hashTypes:{"class":"STRING"},hashContexts:{"class":e},contexts:[],types:[],data:t}))),t.buffer.push("></div>\n    "),n}function c(e,t){var n;n=i._triageMustache.call(e,"topic.title",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),t.buffer.push(n||0===n?n:"")}function f(e,t){var n;n=i._triageMustache.call(e,"topic",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),t.buffer.push(n||0===n?n:"")}function m(e,t){var n="";return t.buffer.push("\n      <div "),t.buffer.push(y(i["bind-attr"].call(e,{hash:{"class":":glyphicon postGlyphicon"},hashTypes:{"class":"STRING"},hashContexts:{"class":e},contexts:[],types:[],data:t}))),t.buffer.push("></div>\n    "),n}this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),o=o||{};var b,v="",y=this.escapeExpression,g=this,w=i.helperMissing;return b=i["if"].call(t,"topic",{hash:{},hashTypes:{},hashContexts:{},inverse:g.noop,fn:g.program(1,a,o),contexts:[t],types:["ID"],data:o}),(b||0===b)&&o.buffer.push(b),o.buffer.push("\n\n"),v})}),define("liquid-fire/templates/helpers-documentation",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,o){this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),o=o||{};var a,r="";return a=i._triageMustache.call(t,"outlet",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:o}),(a||0===a)&&o.buffer.push(a),o.buffer.push("\n"),r})}),define("liquid-fire/templates/helpers-documentation/index",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,o){function a(e,t){t.buffer.push("{{#liquid-outlet}}")}function r(e,t){t.buffer.push("{{#liquid-with}}")}function l(e,t){t.buffer.push("{{#liquid-bind}}")}function u(e,t){t.buffer.push("{{#liquid-if}}")}function h(e,t){t.buffer.push("transition map")}function d(e,t){t.buffer.push("transition")}this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),o=o||{};var p,c,f,m="",b=this,v=i.helperMissing;return o.buffer.push('<h2>Template Helpers</h2>\n\n<dl class="dl-horizontal">\n  <dt>'),c=i["link-to"]||t&&t["link-to"],f={hash:{},hashTypes:{},hashContexts:{},inverse:b.noop,fn:b.program(1,a,o),contexts:[t],types:["STRING"],data:o},p=c?c.call(t,"helpers-documentation.liquid-outlet",f):v.call(t,"link-to","helpers-documentation.liquid-outlet",f),(p||0===p)&&o.buffer.push(p),o.buffer.push("</dt>\n  <dd>Transitions between routes.</dd>\n\n  <dt>"),c=i["link-to"]||t&&t["link-to"],f={hash:{},hashTypes:{},hashContexts:{},inverse:b.noop,fn:b.program(3,r,o),contexts:[t],types:["STRING"],data:o},p=c?c.call(t,"helpers-documentation.liquid-with",f):v.call(t,"link-to","helpers-documentation.liquid-with",f),(p||0===p)&&o.buffer.push(p),o.buffer.push("</dt>\n  <dd>Transitions between models or contexts within a single route.</dd>\n\n  <dt>"),c=i["link-to"]||t&&t["link-to"],f={hash:{},hashTypes:{},hashContexts:{},inverse:b.noop,fn:b.program(5,l,o),contexts:[t],types:["STRING"],data:o},p=c?c.call(t,"helpers-documentation.liquid-bind",f):v.call(t,"link-to","helpers-documentation.liquid-bind",f),(p||0===p)&&o.buffer.push(p),o.buffer.push("</dt>\n  <dd>Updates to simple bound values.</dd>\n\n  <dt>"),c=i["link-to"]||t&&t["link-to"],f={hash:{},hashTypes:{},hashContexts:{},inverse:b.noop,fn:b.program(7,u,o),contexts:[t],types:["STRING"],data:o},p=c?c.call(t,"helpers-documentation.liquid-if",f):v.call(t,"link-to","helpers-documentation.liquid-if",f),(p||0===p)&&o.buffer.push(p),o.buffer.push('</dt>\n  <dd>Switching between true and false branches in an #if statement.</dd>\n\n</dl>\n\n<h3>Common Behavior and Options</h3>\n\n<p>All of the above helpers share some core behaviors and\noptions:</p>\n\n<ul>\n  <li>Each helper is a semantic drop-in replacement for the\n  corresponding normal Ember helper.\n\n  <li><em>Except</em> they generate DOM elements: \n    <ul>\n      <li> a <code>&lt;div class="liquid-container"&gt;</code> to\n        serve as a container for animations. It\n        is <code>position:relative</code> by default.\n\n      <li>a <code>&lt;div class="liquid-child"&gt;</code> to wrap the\n        content and serve as a target for\n        animations. \n    </ul>\n\n  <li>Whenever bound data updates, the helper consults the '),c=i["link-to"]||t&&t["link-to"],f={hash:{},hashTypes:{},hashContexts:{},inverse:b.noop,fn:b.program(9,h,o),contexts:[t],types:["STRING"],data:o},p=c?c.call(t,"transition-map",f):v.call(t,"link-to","transition-map",f),(p||0===p)&&o.buffer.push(p),o.buffer.push(" and decides whether to\n  animate the transition.</li>\n\n  <li>While animating, the <code>liquid-container</code> will\n  contain <code>liquid-children</code> for both the outgoing and\n  incoming states (or possibly even more, if transitions interrupt\n  each other), and the "),c=i["link-to"]||t&&t["link-to"],f={hash:{},hashTypes:{},hashContexts:{},inverse:b.noop,fn:b.program(11,d,o),contexts:[t],types:["STRING"],data:o},p=c?c.call(t,"transitions",f):v.call(t,"link-to","transitions",f),(p||0===p)&&o.buffer.push(p),o.buffer.push(" has full control over\n  animating them.\n\n  <li>The <code>liquid-container</code> can animate it's own height\n  and width to smoothly match the size difference between its old and\n  new content.\n\n  <li>liquid-fire makes your content absolutely positioned <em>only\n  while needed</em> for running animations, and deals with holding\n  your place in the normal document flow. This greatly simplifies the\n  problem of designing animation-friendly layouts.\n\n</ul>\n\n<h4>Options</h4>\n\n<dl>\n  <dt>class</dt>\n  <dd>You can pass both static and bound class names in the normal\n  Ember way. They will apply to the <code>liquid-container</code>\n  element.</dd>\n\n  <dt>use</dt>\n  <dd>Lets you provide a transition name directly\n    (example: <code>use=\"crossFade\"</code>), skipping the transition\n    map. This is useful for the simplest cases in which you don't care\n    about context at all and always want to use the same\n    animation. The <code>use</code> will match all transitions except\n    the initial render. For more control, use the "),c=i["link-to"]||t&&t["link-to"],f={hash:{},hashTypes:{},hashContexts:{},inverse:b.noop,fn:b.program(9,h,o),contexts:[t],types:["STRING"],data:o},p=c?c.call(t,"transition-map",f):v.call(t,"link-to","transition-map",f),(p||0===p)&&o.buffer.push(p),o.buffer.push(".\n  </dd>\n\n  <dt>growDuration</dt>\n  <dd>\n    The maximum amount of time to spend growing. For small changes, we\n    may spend less than this time depending on\n    growPixelsPerSecond. Defaults to 250 milliseconds.\n  </dd>\n\n  <dt>growPixelsPerSecond</dt>\n  <dd>\n    The minimum speed in at which we will grow. Defaults to 200 pixels\n    per second. This lets us make small size adjustments in times\n    shorter than a full growDuration.\n  </dd>\n\n  <dt>growEasing</dt>\n  <dd>A Velocity <a href=\"http://julian.com/research/velocity/#easing\">easing\n  function</a> to use when growing the container height and\n  width. Defaults to <code>'slide'</code>.</dd>\n\n  <dt>enableGrowth</dt>\n  <dd>Whether the container should animate its own height and width\n  changes. Defaults to <code>true</code>.</dd>\n\n\n</dl>\n"),m})}),define("liquid-fire/templates/helpers-documentation/liquid-bind",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,o){function a(e,t){t.buffer.push("Common Behavior and\nOptions")}this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),o=o||{};var r,l,u,h="",d=this,p=i.helperMissing,c=this.escapeExpression;return o.buffer.push("<h2>{{liquid-bind}}</h2>\n\n<p>Renders a bound value into your template, and uses the transition\nmap to decide how to animate when the bound value changes.</p>\n\n<p>Saying <code>{{liquid-bind someValue}}</code> is a drop-in\nreplacement for <code>{{someValue}}</code>, except this wraps the\ncontent in markup so that it can be targeted for animation. See the\n"),l=i["link-to"]||t&&t["link-to"],u={hash:{},hashTypes:{},hashContexts:{},inverse:d.noop,fn:d.program(1,a,o),contexts:[t],types:["STRING"],data:o},r=l?l.call(t,"helpers-documentation.index",u):p.call(t,"link-to","helpers-documentation.index",u),(r||0===r)&&o.buffer.push(r),o.buffer.push(' that apply to all liquid-fire helpers.</p>\n\n<h3 id="force-tick" '),o.buffer.push(c(i.action.call(t,"forceTick",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["STRING"],data:o}))),o.buffer.push('>Demo</h3>\n\n\n<div id="liquid-bind-demo">\n  '),o.buffer.push(c((l=i["liquid-bind"]||t&&t["liquid-bind"],u={hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:o},l?l.call(t,"hours",u):p.call(t,"liquid-bind","hours",u)))),o.buffer.push(":"),o.buffer.push(c((l=i["liquid-bind"]||t&&t["liquid-bind"],u={hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:o},l?l.call(t,"minutes",u):p.call(t,"liquid-bind","minutes",u)))),o.buffer.push(":"),o.buffer.push(c((l=i["liquid-bind"]||t&&t["liquid-bind"],u={hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:o},l?l.call(t,"seconds",u):p.call(t,"liquid-bind","seconds",u)))),o.buffer.push("\n</div>\n\n\n"),o.buffer.push(c((l=i["code-snippet"]||t&&t["code-snippet"],u={hash:{name:"liquid-bind-demo.hbs"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:o},l?l.call(t,u):p.call(t,"code-snippet",u)))),o.buffer.push("\n\n"),o.buffer.push(c((l=i["code-snippet"]||t&&t["code-snippet"],u={hash:{name:"bind-demo-transition.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:o},l?l.call(t,u):p.call(t,"code-snippet",u)))),o.buffer.push("\n\n"),o.buffer.push(c((l=i["code-snippet"]||t&&t["code-snippet"],u={hash:{name:"bind-demo-style.css"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:o},l?l.call(t,u):p.call(t,"code-snippet",u)))),o.buffer.push("\n"),h})}),define("liquid-fire/templates/helpers-documentation/liquid-if",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,o){function a(e,t){t.buffer.push("Common\n    Behavior and Options")}function r(e,t){var n,s,o="";return t.buffer.push("\n    <label>\n      Would you like a helmet? "),t.buffer.push(f((n=i.input||e&&e.input,s={hash:{type:"checkbox",value:"helmet"},hashTypes:{type:"STRING",value:"STRING"},hashContexts:{type:e,value:e},contexts:[],types:[],data:t},n?n.call(e,s):c.call(e,"input",s)))),t.buffer.push("\n    </label>\n  "),o}function l(e,t){var n,s,o="";return t.buffer.push("\n    <label>License Number</label>\n    "),t.buffer.push(f((n=i.input||e&&e.input,s={hash:{type:"text",value:"license"},hashTypes:{type:"STRING",value:"ID"},hashContexts:{type:e,value:e},contexts:[],types:[],data:t},n?n.call(e,s):c.call(e,"input",s)))),t.buffer.push("\n    <label>License State</label>\n    "),t.buffer.push(f(i.view.call(e,"select",{hash:{value:"state",content:"states"},hashTypes:{value:"ID",content:"ID"},hashContexts:{value:e,content:e},contexts:[e],types:["STRING"],data:t}))),t.buffer.push("\n  "),o}this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),o=o||{};var u,h,d,p="",c=i.helperMissing,f=this.escapeExpression,m=this;return o.buffer.push("<h2>{{#liquid-if}}</h2>\n\n<p><code>{{#liquid-if}}</code> is a replacement for Ember's\nnormal <code>{{#if}}</code>, except it:</p>\n\n<ul>\n  <li>respects the transition map so you can animate changes between its <code>true</code>\nand <code>false</code> states.</li>\n  <li>wraps its content in markup to facilitate animation. See the "),h=i["link-to"]||t&&t["link-to"],d={hash:{},hashTypes:{},hashContexts:{},inverse:m.noop,fn:m.program(1,a,o),contexts:[t],types:["STRING"],data:o},u=h?h.call(t,"helpers-documentation.index",d):c.call(t,"link-to","helpers-documentation.index",d),(u||0===u)&&o.buffer.push(u),o.buffer.push(" that apply to all liquid-fire\n    helpers.\n</ul>\n\n<h3>Demo</h3>\n\n<p>Here's a bit of a silly example that shows off the flexibility of\nthe transition rules.</p>\n\n\n<div id=\"liquid-box-demo\">\n  <label>I'm renting a </label>\n  "),o.buffer.push(f(i.view.call(t,"select",{hash:{value:"vehicle",content:"vehicles"},hashTypes:{value:"ID",content:"ID"},hashContexts:{value:t,content:t},contexts:[t],types:["STRING"],data:o}))),o.buffer.push("\n\n  "),h=i["liquid-if"]||t&&t["liquid-if"],d={hash:{"class":"vehicles"},hashTypes:{"class":"STRING"},hashContexts:{"class":t},inverse:m.program(5,l,o),fn:m.program(3,r,o),contexts:[t],types:["ID"],data:o},u=h?h.call(t,"isBike",d):c.call(t,"liquid-if","isBike",d),(u||0===u)&&o.buffer.push(u),o.buffer.push('\n\n  <button type="button" class="btn btn-success">Yay, let\'s go!</button>\n</div>\n\n\n'),o.buffer.push(f((h=i["code-snippet"]||t&&t["code-snippet"],d={hash:{name:"liquid-box-demo.hbs"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:o},h?h.call(t,d):c.call(t,"code-snippet",d)))),o.buffer.push("\n\n"),o.buffer.push(f((h=i["code-snippet"]||t&&t["code-snippet"],d={hash:{name:"liquid-box-demo-transition.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:o},h?h.call(t,d):c.call(t,"code-snippet",d)))),o.buffer.push("\n"),p})}),define("liquid-fire/templates/helpers-documentation/liquid-outlet",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,o){function a(e,t){t.buffer.push("Common\n    Behavior and Options")}function r(e,t){t.buffer.push("{{#liquid-with}}")}this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),o=o||{};var l,u,h,d="",p=this,c=i.helperMissing,f=this.escapeExpression;return o.buffer.push("<h2>{{liquid-outlet}}</h2>\n\n<p>Acts just like a normal Ember <code>{{outlet}}</code>, except:</p>\n\n<ul>\n  <li>it respects the transition map and lets you animate between routes.</li>\n  <li>it wraps its content in a non-virtual view, meaning that it adds\n    markup. See the "),u=i["link-to"]||t&&t["link-to"],h={hash:{},hashTypes:{},hashContexts:{},inverse:p.noop,fn:p.program(1,a,o),contexts:[t],types:["STRING"],data:o},l=u?u.call(t,"helpers-documentation.index",h):c.call(t,"link-to","helpers-documentation.index",h),(l||0===l)&&o.buffer.push(l),o.buffer.push(' that apply to all liquid-fire\n    helpers.\n  <li>it does not support the <code>view</code> option to override its view class.</li>\n</ul>\n\n<p>It otherwise does everything <code>{{outlet}}</code> does,\nincluding named outlets (like <code>{{liquid-outlet sidebar}}</code>).</p>\n\n<h3>When to use it</h3>\n\n<p>Use this when you want to animate the transitions between\nroutes.</p>\n\n<div class="callout callout-danger">This won\'t let you animate between\ntwo different models on the same route, because outlets are not\ninvolved in that process. Instead, see '),u=i["link-to"]||t&&t["link-to"],h={hash:{},hashTypes:{},hashContexts:{},inverse:p.noop,fn:p.program(3,r,o),contexts:[t],types:["STRING"],data:o},l=u?u.call(t,"helpers-documentation.liquid-with",h):c.call(t,"link-to","helpers-documentation.liquid-with",h),(l||0===l)&&o.buffer.push(l),o.buffer.push(".</div>\n\n<h3>Demo</h3>\n\n<p>Notice that the URL changes when you click the links &mdash; these are real route transitions.</p>\n\n\n"),o.buffer.push(f((u=i["liquid-outlet"]||t&&t["liquid-outlet"],h={hash:{"class":"demo-container"},hashTypes:{"class":"STRING"},hashContexts:{"class":t},contexts:[],types:[],data:o},u?u.call(t,h):c.call(t,"liquid-outlet",h)))),o.buffer.push("\n\n\n<h4>Demo template:</h4>\n\n"),o.buffer.push(f((u=i["code-snippet"]||t&&t["code-snippet"],h={hash:{name:"outlet.hbs"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:o},u?u.call(t,h):c.call(t,"code-snippet",h)))),o.buffer.push("\n\n<h4>Demo transition map:</h4>\n\n"),o.buffer.push(f((u=i["code-snippet"]||t&&t["code-snippet"],h={hash:{name:"transition-demo.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:o},u?u.call(t,h):c.call(t,"code-snippet",h)))),o.buffer.push("\n\n"),d})}),define("liquid-fire/templates/helpers-documentation/liquid-outlet/index",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,o){function a(e,t){t.buffer.push("Click me!")}this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),o=o||{};var r,l,u,h="",d=this,p=i.helperMissing;return l=i["link-to"]||t&&t["link-to"],u={hash:{},hashTypes:{},hashContexts:{},inverse:d.noop,fn:d.program(1,a,o),contexts:[t],types:["STRING"],data:o},r=l?l.call(t,"helpers-documentation.liquid-outlet.other",u):p.call(t,"link-to","helpers-documentation.liquid-outlet.other",u),(r||0===r)&&o.buffer.push(r),o.buffer.push("\n"),h})}),define("liquid-fire/templates/helpers-documentation/liquid-outlet/other",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,o){function a(e,t){t.buffer.push("Go back!")}this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),o=o||{};var r,l,u,h="",d=this,p=i.helperMissing;return l=i["link-to"]||t&&t["link-to"],u={hash:{},hashTypes:{},hashContexts:{},inverse:d.noop,fn:d.program(1,a,o),contexts:[t],types:["STRING"],data:o},r=l?l.call(t,"helpers-documentation.liquid-outlet.index",u):p.call(t,"link-to","helpers-documentation.liquid-outlet.index",u),(r||0===r)&&o.buffer.push(r),o.buffer.push("\n"),h})}),define("liquid-fire/templates/helpers-documentation/liquid-with",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,o){this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),o=o||{};var a,r="";return a=i._triageMustache.call(t,"outlet",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:o}),(a||0===a)&&o.buffer.push(a),o.buffer.push("\n"),r})}),define("liquid-fire/templates/helpers-documentation/liquid-with/page",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,o){function a(e,t){t.buffer.push("Common\n    Behavior and Options")}function r(e,t){var n,s="";return t.buffer.push("\n  "),n=i._triageMustache.call(e,"id",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n  <button "),t.buffer.push(p(i.action.call(e,"higher",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["STRING"],data:t}))),t.buffer.push(">Go</button>\n"),s}this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),o=o||{};var l,u,h,d="",p=this.escapeExpression,c=this,f=i.helperMissing;return o.buffer.push("<h2>{{#liquid-with}}</h2>\n\n<p>Acts just like a normal Ember <code>{{with}}</code>, except:</p>\n\n<ul>\n  <li>it respects the transition map and lets you animate between contexts.</li>\n  <li>it wraps its content in a non-virtual view, meaning that it adds\n    markup. See the "),u=i["link-to"]||t&&t["link-to"],h={hash:{},hashTypes:{},hashContexts:{},inverse:c.noop,fn:c.program(1,a,o),contexts:[t],types:["STRING"],data:o},l=u?u.call(t,"helpers-documentation.index",h):f.call(t,"link-to","helpers-documentation.index",h),(l||0===l)&&o.buffer.push(l),o.buffer.push(' that apply to all liquid-fire\n    helpers.\n</ul>\n\n<p>This helper will grab whatever context you pass it, and when that\ncontext changes, the helper will hold on to a copy of the old value\nlong enough to gracefully transition away.</p>\n\n<p>Binding to a singleton controller\'s <code>model</code> works great,\nbecause future changes to the model will be captured and\nanimated. Binding directly to a singleton controller won\'t animate\nbecause the controller never changes. If you need a controller inside\nthe <code>{{#liquid-with}}</code>, it\'s best to instantiate one\nexplicitly with the <code>controller</code> option, so that a fresh\ncontroller will be instantiated for each update to your bound\ncontext.</p>\n\n<h3>When to use it</h3>\n\n<p>Use this when you want to animate the transitions between\ndifferent models on the same route.</p>\n\n<div class="callout callout-danger"><code>{{#liquid-with foo as\nbar}}</code> is supported, but it depends on a <a href="https://github.com/emberjs/ember.js/pull/5115">bugfix</a> in Ember\n1.7.0-beta.2 and may not work with earlier releases of Ember.</div>\n\n<h3>Demo</h3>\n\n<p>Notice that the ID being rendered maps correctly to the URL in both\ndirections.</p>\n\n\n\n'),u=i["liquid-with"]||t&&t["liquid-with"],h={hash:{controller:"demo",use:"rotateBelow","class":"demo-container"},hashTypes:{controller:"STRING",use:"STRING","class":"STRING"},hashContexts:{controller:t,use:t,"class":t},inverse:c.noop,fn:c.program(3,r,o),contexts:[t],types:["ID"],data:o},l=u?u.call(t,"model",h):f.call(t,"liquid-with","model",h),(l||0===l)&&o.buffer.push(l),o.buffer.push("\n\n\n\n<h4>Template</h4>\n\n"),o.buffer.push(p((u=i["code-snippet"]||t&&t["code-snippet"],h={hash:{name:"with-demo.hbs"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:o},u?u.call(t,h):f.call(t,"code-snippet",h)))),o.buffer.push("\n\n<h4>Transition Implementation</h4>\n\n<p>This appears in <code>app/transitions/rotate-below.js</code>:</p>\n\n"),o.buffer.push(p((u=i["code-snippet"]||t&&t["code-snippet"],h={hash:{name:"rotate-below.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:o},u?u.call(t,h):f.call(t,"code-snippet",h)))),o.buffer.push("\n"),d
})}),define("liquid-fire/templates/index",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,o){function a(e,t){t.buffer.push("Read more about Template\nHelpers.")}function r(e,t){t.buffer.push("Read more about the Transition\nMap.")}function l(e,t){t.buffer.push("Read more about\nTransitions.")}this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),o=o||{};var u,h,d,p="",c=this,f=i.helperMissing,m=this.escapeExpression;return o.buffer.push('<h2>Liquid Fire: Animations & Transitions for Ember Apps</h2>\n\n<p>Liquid Fire is a toolkit for managing animated transitions in an\nEmber application. Like Ember itself, our goal is to cultivate shared\nabstractions so we\'re free to focus on bigger and better\nideas. <em>Good defaults. Convention over configuration. Composable\npieces all the way down.</em></p>\n\n<h3>Getting Started</h3>\n\n<p>If you\'re using <a href="http://iamstef.net/ember-cli/">ember-cli</a>\n(and for any new project, you should!), you can install the\nliquid-fire addon with:</p>\n\n<pre>\n  npm install --save-dev liquid-fire\n</pre>\n\n<div class="callout callout-info">\n  If you\'re not using\n  ember-cli, <a href="https://github.com/ef4/liquid-fire/releases">grab\n  a prebuilt release</a>. You will also need to manually\n  add <a href="http://velocityjs.org">velocity.js</a> to your page.\n</div>\n\n<h4>Supported Ember Versions and Semver</h4>\n\n<p>liquid-fire is currently compatible with Ember 1.6.1 through\ncanary. As liquid-fire is still pre-1.0, you can expect breaking\nchanges, which will be described in\nthe <a href="https://github.com/ef4/liquid-fire/blob/master/CHANGELOG.md">CHANGELOG</a>.</p>\n\n<p>Ultimately, the goal is to hit a solid 1.0 API and then fall into\nstep with Ember\'s release cycle.</p>\n\n<h3>Key Ideas</h3>\n\n<p>Transitions need to be implemented within the view layer, but deciding\n<em>what kind</em> of transition to do at any given time is a\nhigher-level question, dependent on the relationships between\ndifferent routes and models.</p>\n\n<p>Therefore, we split the responsibility between three key pieces:\ntemplate helpers, the transition map, and transitions.</p>\n\n<h4>Template Helpers</h4>\n\n<p>The library provides helpers\nlike <code>{{liquid-outlet}}</code>, <code>{{liquid-with}}</code>,\netc, that are nearly drop-in replacements for the equivalent normal\nEmber helpers. The key difference is that they don\'t update instantly\nwhen bound data changes. Instead they consult your application\'s\ntransition map, and if they discover a matching transition, they give\nthe transition control over <em>both the old and new content</em>\nsimultaneously. '),h=i["link-to"]||t&&t["link-to"],d={hash:{},hashTypes:{},hashContexts:{},inverse:c.noop,fn:c.program(1,a,o),contexts:[t],types:["STRING"],data:o},u=h?h.call(t,"helpers-documentation.index",d):f.call(t,"link-to","helpers-documentation.index",d),(u||0===u)&&o.buffer.push(u),o.buffer.push("</p>\n\n<h4>Transition Map</h4>\n\n<p>The transition map is analogous to your normal Ember router\nmap. It's a single place to declaratively capture rules about how\nthe pieces of your application relate to each other. By convention,\nthe transition map goes in <code>app/transitions.js</code>, and it\nlooks something like this:</p>\n\n"),o.buffer.push(m((h=i["code-snippet"]||t&&t["code-snippet"],d={hash:{name:"simple-transition-map.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:o},h?h.call(t,d):f.call(t,"code-snippet",d)))),o.buffer.push('\n\n<div class="callout callout-info">\n  Old-school apps without a module resolver should pass their\n  transition map function to <code>LiquidFire.map</code>. <a href="https://github.com/ef4/liquid-fire/blob/master/example/prebuilt-example.html">There is an example here</a>.\n</div>\n\n<p>'),h=i["link-to"]||t&&t["link-to"],d={hash:{},hashTypes:{},hashContexts:{},inverse:c.noop,fn:c.program(3,r,o),contexts:[t],types:["STRING"],data:o},u=h?h.call(t,"transition-map.index",d):f.call(t,"link-to","transition-map.index",d),(u||0===u)&&o.buffer.push(u),o.buffer.push("</p>\n\n<h4>Transitions</h4>\n\n<p>The transition map above mentions two named\ntransitions: <code>toLeft</code> and <code>toRight</code>. These are\nboth predefined transitions that come with the library. But you can\ncompose new transitions too. They look like this:\n\n"),o.buffer.push(m((h=i["code-snippet"]||t&&t["code-snippet"],d={hash:{name:"transition-definitions.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:o},h?h.call(t,d):f.call(t,"code-snippet",d)))),o.buffer.push('\n\n<p><em>(In these examples, <code>opacity: [1, 0]</code>\nuses <a href="http://velocityjs.org">velocity</a>\'s "force-feeding"\ncapability to specify <code>[endValue, startValue]</code>, so the\nmeaning is "animate the opacity from 0 to 1".)</em></p>\n\n<p>Transitions are implemented with a promise-based API that gives you\ncontrol over all the relevant timing, including when to insert the new\nview into the DOM. '),h=i["link-to"]||t&&t["link-to"],d={hash:{},hashTypes:{},hashContexts:{},inverse:c.noop,fn:c.program(5,l,o),contexts:[t],types:["STRING"],data:o},u=h?h.call(t,"transitions.index",d):f.call(t,"link-to","transitions.index",d),(u||0===u)&&o.buffer.push(u),o.buffer.push("</p>\n"),p})}),define("liquid-fire/templates/liquid-with-self",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,o){this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),o=o||{};var a,r="";return a=i._triageMustache.call(t,"",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:o}),(a||0===a)&&o.buffer.push(a),o.buffer.push("\n"),r})}),define("liquid-fire/templates/liquid-with",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,o){this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),o=o||{};var a,r="";return a=i._triageMustache.call(t,"with-apply",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:o}),(a||0===a)&&o.buffer.push(a),o.buffer.push("\n\n\n"),r})}),define("liquid-fire/templates/scenarios/empty-if",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,o){function a(e,t){t.buffer.push("\n    Some Content\n  ")}this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),o=o||{};var r,l,u,h="",d=i.helperMissing,p=this.escapeExpression,c=this;return o.buffer.push('<div id="empty-if-scenario">\n  <label>'),o.buffer.push(p((l=i.input||t&&t.input,u={hash:{type:"checkbox",checked:"showing"},hashTypes:{type:"STRING",checked:"ID"},hashContexts:{type:t,checked:t},contexts:[],types:[],data:o},l?l.call(t,u):d.call(t,"input",u)))),o.buffer.push(" Show It</label>\n\n  "),l=i["liquid-if"]||t&&t["liquid-if"],u={hash:{use:"fade"},hashTypes:{use:"STRING"},hashContexts:{use:t},inverse:c.noop,fn:c.program(1,a,o),contexts:[t],types:["ID"],data:o},r=l?l.call(t,"showing",u):d.call(t,"liquid-if","showing",u),(r||0===r)&&o.buffer.push(r),o.buffer.push("\n</div>\n"),h})}),define("liquid-fire/templates/scenarios/inline-serial",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,o){function a(e,t){t.buffer.push("\n    One.\n  ")}function r(e,t){t.buffer.push("\n    Two Three Four Five Six Two Three Four Five Six Two Three Four Five\n    Six Two Three Four Five Six.\n  ")}this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),o=o||{};var l,u,h,d="",p=i.helperMissing,c=this.escapeExpression,f=this;return o.buffer.push('<div id="inline-serial-scenario" >\n  <label>'),o.buffer.push(c((u=i.input||t&&t.input,h={hash:{type:"checkbox",checked:"otherState"},hashTypes:{type:"STRING",checked:"ID"},hashContexts:{type:t,checked:t},contexts:[],types:[],data:o},u?u.call(t,h):p.call(t,"input",h)))),o.buffer.push(" Swap Em</label>\n\n  "),u=i["liquid-if"]||t&&t["liquid-if"],h={hash:{},hashTypes:{},hashContexts:{},inverse:f.program(3,r,o),fn:f.program(1,a,o),contexts:[t],types:["ID"],data:o},l=u?u.call(t,"otherState",h):p.call(t,"liquid-if","otherState",h),(l||0===l)&&o.buffer.push(l),o.buffer.push("\n</div>\n"),d})}),define("liquid-fire/templates/scenarios/inline",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,o){function a(e,t){t.buffer.push("\n    One.\n  ")}function r(e,t){t.buffer.push("\n    Two Three Four Five Six Two Three Four Five Six Two Three Four Five\n    Six Two Three Four Five Six.\n  ")}this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),o=o||{};var l,u,h,d="",p=i.helperMissing,c=this.escapeExpression,f=this;return o.buffer.push('<div id="inline-scenario" >\n  <label>'),o.buffer.push(c((u=i.input||t&&t.input,h={hash:{type:"checkbox",checked:"otherState"},hashTypes:{type:"STRING",checked:"ID"},hashContexts:{type:t,checked:t},contexts:[],types:[],data:o},u?u.call(t,h):p.call(t,"input",h)))),o.buffer.push(" Swap Em</label>\n\n  "),u=i["liquid-if"]||t&&t["liquid-if"],h={hash:{},hashTypes:{},hashContexts:{},inverse:f.program(3,r,o),fn:f.program(1,a,o),contexts:[t],types:["ID"],data:o},l=u?u.call(t,"otherState",h):p.call(t,"liquid-if","otherState",h),(l||0===l)&&o.buffer.push(l),o.buffer.push("\n</div>\n"),d})}),define("liquid-fire/templates/test-bind",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,o){this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),o=o||{};var a,r,l="",u=i.helperMissing,h=this.escapeExpression;return o.buffer.push('<div id="bind-test-container" style="display: inline-block; position:relative; width: 3em; ">\n  '),o.buffer.push(h((a=i["liquid-bind"]||t&&t["liquid-bind"],r={hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:o},a?a.call(t,"counter",r):u.call(t,"liquid-bind","counter",r)))),o.buffer.push("\n</div>\n"),l})}),define("liquid-fire/templates/transition-map",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,o){this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),o=o||{};var a,r="";return a=i._triageMustache.call(t,"outlet",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:o}),(a||0===a)&&o.buffer.push(a),o.buffer.push("\n"),r})}),define("liquid-fire/templates/transition-map/choosing-transitions",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,o){this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),o=o||{};var a,r,l="",u=i.helperMissing,h=this.escapeExpression;return o.buffer.push("<h2>Choosing Transition Animations</h2>\n\n<p>Each transition rule must have exactly one <code>use()</code>\nstatement. It determines what we'll do if the rule matches.</p>\n\n<p>Each transition may may also have one <code>reverse()</code>\nstatement. It determines what we'll do if the <i>opposite rule</i>\nmatches, where the opposite rule swaps <code>fromRoute</code>\nwith <code>toRoute</code> and swaps <code>fromModel</code>\nwith <code>toModel</code>.\n\n"),o.buffer.push(h((a=i["code-snippet"]||t&&t["code-snippet"],r={hash:{name:"use-examples.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:o},a?a.call(t,r):u.call(t,"code-snippet",r)))),o.buffer.push("\n"),l})}),define("liquid-fire/templates/transition-map/dom-constraints",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,o){this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),o=o||{};var a,r,l="",u=i.helperMissing,h=this.escapeExpression;return o.buffer.push('<h2>DOM Constraints</h2>\n\n<p>These constraints let you target a transition rule based on the\nsurrounding DOM.</p>\n\n<dl class="dl-horizontal">\n  <dt>hasClass</dt>\n  <dd>\n    <p>Takes a class name and matches it against the animated\n    element. For example, this transition:</p>\n    \n    '),o.buffer.push(h((a=i["code-snippet"]||t&&t["code-snippet"],r={hash:{name:"has-class-example.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:o},a?a.call(t,r):u.call(t,"code-snippet",r)))),o.buffer.push("\n    \n    <p>Will match an animated element like this one:</p>\n    \n    "),o.buffer.push(h((a=i["code-snippet"]||t&&t["code-snippet"],r={hash:{name:"has-class-example.hbs"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:o},a?a.call(t,r):u.call(t,"code-snippet",r)))),o.buffer.push('\n\n    <div class="callout callout-info">\n    <p>Note that all the liquid helpers propagate\n    their <code>class</code> argument through to their liquid-child\n    elements. The above example results in DOM like this:\n\n    '),o.buffer.push(h((a=i["code-snippet"]||t&&t["code-snippet"],r={hash:{name:"has-class-example-dom.hbs"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:o},a?a.call(t,r):u.call(t,"code-snippet",r)))),o.buffer.push("\n    </div>\n      \n  </dd>\n\n  <dt>childOf</dt>\n  <dd>\n    <p>Takes a CSS selector and tests whether the animated element's\n    parent matches the selector. For example, this rule:</p>\n\n    "),o.buffer.push(h((a=i["code-snippet"]||t&&t["code-snippet"],r={hash:{name:"child-of-example.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:o},a?a.call(t,r):u.call(t,"code-snippet",r)))),o.buffer.push("\n\n    <p>Will match against this template:</p>\n\n    "),o.buffer.push(h((a=i["code-snippet"]||t&&t["code-snippet"],r={hash:{name:"child-of-example.hbs"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:o},a?a.call(t,r):u.call(t,"code-snippet",r)))),o.buffer.push('\n\n    <div class="callout callout-danger">\n      This constraint cannot match during the very first render of\n      your animated element, because Handlebars templates have no\n      knowledge of their DOM context until after they\'re inserted into\n      the document. This limitation should go away after Ember adopts\n      HTMLBars.\n    </div>\n  </dd>\n</dl>\n'),l})}),define("liquid-fire/templates/transition-map/index",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,o){this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),o=o||{},o.buffer.push('<h2>Using the Transition Map</h2>\n\n<p>The transition map is where you configure which transitions to run\nin which situations. In an ember-cli app, it is loaded automatically\nfrom <code>app/transitions.js</code>.</p>\n\n<div class="callout callout-info">\n  Old-school apps without a module resolver should pass their\n  transition map function to <code>LiquidFire.map</code>. <a href="https://github.com/ef4/liquid-fire/blob/master/example/prebuilt-example.html">There is an example here</a>.</div>\n\n<p>When one of the liquid helpers detects an update that might need to\nanimate, it consults the transition map. The first matching rule that\nit finds will be applied.</p>\n\n<h3>Transition map top-level functions</h3>\n\n<dl class="dl-horizontal">\n  <dt>transition</dt>\n  <dd>Creates a transition rule that governs when to apply a given\n  animation. The rule consists of one or more constraints and\n  a <code>use</code> statement. The animation named\n  by <code>use</code> will only run if all the constraints match.</dd>\n\n  <dt>setDefault</dt>\n  <dd>\n    <p>Takes name/value pairs and sets them\n    on <a href="http://julian.com/research/velocity/#arguments">$.Velocity.defaults</a>. This\n    lets you provide global defaults for things like the easing\n    function and animation duration.\n    </p>\n  </dd>\n\n</dl>\n\n<p>The next sections cover the kinds of constraints that can go inside\na transition rule.</p>\n\n\n')})}),define("liquid-fire/templates/transition-map/model-constraints",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,o){this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),o=o||{};var a,r,l="",u=i.helperMissing,h=this.escapeExpression;return o.buffer.push('<h2>Model Constraints</h2>\n\n<p>The constraints in this section apply to models. What constitutes\nthe from-model and to-model depends on which liquid helpers you\'re\nusing.</p>\n\n<ul>\n  <li><code>{{liquid-outlet}}</code> matches against the actual\n  router-provided models before and after the transition.</li>\n  <li><code>{{#liquid-with}}</code> and <code>{{liquid-bind}}</code>\n    match against their own bound contexts.</li>\n  <li><code>{{#liquid-if}}</code> matches against its predicate.</li>\n</ul>\n\n<p>These are the three model constraint methods:</p>\n\n<dl class="dl-horizontal">\n  <dt>fromModel</dt>\n  <dd>Matches the model before the transition.</dd>\n  <dt>toModel</dt>\n  <dd>Matches the model after the transition.</dd>\n  <dt>betweenModels</dt>\n  <dd>Matches the model both before and after the transition.</dd>\n</dl>\n\n<p>Here are examples to illustrate their use:</p>\n\n'),o.buffer.push(h((a=i["code-snippet"]||t&&t["code-snippet"],r={hash:{name:"model-match-examples.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:o},a?a.call(t,r):u.call(t,"code-snippet",r)))),o.buffer.push("\n"),l})}),define("liquid-fire/templates/transition-map/route-constraints",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,o){this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),o=o||{};var a,r,l="",u=i.helperMissing,h=this.escapeExpression;return o.buffer.push('<h2>Route Constraints</h2>\n\n<p>The following three constraints apply to route names. They all\naccept the same arguments.</p>\n\n<dl class="dl-horizontal">\n  <dt>fromRoute</dt>\n  <dd>Matches the route name at the start of a transition.</dd>\n\n  <dt>toRoute</dt>\n  <dd>Matches the route name at the end of a transition.</dd>\n\n  <dt>withinRoute</dt>\n  <dd>Matches the same name at both the start and end of the\n    transition. This is good for matching transitions that are not\n    route changes.\n  </dd>\n</dl>\n\n<p>Each of them accepts one or more arguments. The arguments can be\nstrings containing route names, or functions that test route\nnames. Best illustrated by example:</p>\n\n<div class="callout callout-danger">There is <a href="https://github.com/ef4/liquid-fire/issues/18">an open\nissue</a> that affects you if you\'re trying to target named outlets or\nusing non-default template names.</div>\n\n'),o.buffer.push(h((a=i["code-snippet"]||t&&t["code-snippet"],r={hash:{name:"route-match-examples.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:o},a?a.call(t,r):u.call(t,"code-snippet",r)))),o.buffer.push("\n"),l})}),define("liquid-fire/templates/transitions/defining",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,o){this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),o=o||{};var a,r,l="",u=i.helperMissing,h=this.escapeExpression;return o.buffer.push("<h2>Defining Transition Animations</h2>\n\n<p>Transitions are defined by creating a module\nlike <code>app/transitions/my-transition.js</code> that exports a\nfunction like this:</p>\n\n"),o.buffer.push(h((a=i["code-snippet"]||t&&t["code-snippet"],r={hash:{name:"transition-skeleton.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:o},a?a.call(t,r):u.call(t,"code-snippet",r)))),o.buffer.push('\n\n<div class="callout callout-danger">Old school apps without a module\nresolver can call <code>LiquidFire.defineTransition</code> instead. <a href="https://github.com/ef4/liquid-fire/blob/master/example/prebuilt-example.html">See the example</a>.</div>\n\n<p>The function always receives at least two arguments:</p>\n\n<dl class="dl-horizontal">\n  <dt><code>oldView</code></dt>\n\n  <dd>The outgoing view for this transition. It may be undefined when\n  transitioning from an empty initial state.</dd>\n\n  <dt><code>insertNewView</code></dt>\n\n  <dd>This is always a function that returns a promise. Call this\n  function when you\'re ready to insert the new view into the DOM. It\n  will resolve to the newView. The newView may be undefined if your\n  transition has already been interrupted, so you should always\n  tolerate an undefined newView.</dd>\n</dl>\n\n<div class="callout callout-info">\n  <h3>Why "insertNewView" instead of "newView"?</h3>\n\n  Because sometimes you want to animate the views in parallel, and\n  sometimes you want to animate them in series. In the series case,\n  your transition may get interrupted before the new view is even\n  needed, in which case we can avoid inserting it entirely.\n</div>\n\n<p>Any remaining arguments will come directly from <code>use</code>\nstatements in transition rules. For example:\n\n'),o.buffer.push(h((a=i["code-snippet"]||t&&t["code-snippet"],r={hash:{name:"transition-arguments.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:o},a?a.call(t,r):u.call(t,"code-snippet",r)))),o.buffer.push("\n\n<p>You can define new transitions in terms of existing transitions\nby currying arguments:</p>\n\n"),o.buffer.push(h((a=i["code-snippet"]||t&&t["code-snippet"],r={hash:{name:"curried-transition.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:o},a?a.call(t,r):u.call(t,"code-snippet",r)))),o.buffer.push("\n\n"),l})}),define("liquid-fire/templates/transitions/index",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,o){function a(e,t){t.buffer.push("template helper")}function r(e,t){t.buffer.push("transition map")}function l(e,t){t.buffer.push("predefined transitions")}function u(e,t){t.buffer.push("compose their own")}function h(e,t){t.buffer.push("lower-level pieces")}this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),o=o||{};var d,p,c,f="",m=this,b=i.helperMissing;return o.buffer.push("<h2>Transitions</h2>\n\n<p>Transitions implement animation between two states. When a\n"),p=i["link-to"]||t&&t["link-to"],c={hash:{},hashTypes:{},hashContexts:{},inverse:m.noop,fn:m.program(1,a,o),contexts:[t],types:["STRING"],data:o},d=p?p.call(t,"helpers-documentation.index",c):b.call(t,"link-to","helpers-documentation.index",c),(d||0===d)&&o.buffer.push(d),o.buffer.push(" undergoes a\nstate change, it consults the "),p=i["link-to"]||t&&t["link-to"],c={hash:{},hashTypes:{},hashContexts:{},inverse:m.noop,fn:m.program(3,r,o),contexts:[t],types:["STRING"],data:o},d=p?p.call(t,"transition-map.index",c):b.call(t,"link-to","transition-map.index",c),(d||0===d)&&o.buffer.push(d),o.buffer.push(" to see if there's a\nmatching transition. If it finds one, the transition is given the job\nof orchestrating the view animations to get from the old state to the\nnew state.</p>\n\n<p>The library ships with some "),p=i["link-to"]||t&&t["link-to"],c={hash:{},hashTypes:{},hashContexts:{},inverse:m.noop,fn:m.program(5,l,o),contexts:[t],types:["STRING"],data:o},d=p?p.call(t,"transitions.predefined",c):b.call(t,"link-to","transitions.predefined",c),(d||0===d)&&o.buffer.push(d),o.buffer.push(". But it's\nalso expected that people will want to "),p=i["link-to"]||t&&t["link-to"],c={hash:{},hashTypes:{},hashContexts:{},inverse:m.noop,fn:m.program(7,u,o),contexts:[t],types:["STRING"],data:o},d=p?p.call(t,"transitions.defining",c):b.call(t,"link-to","transitions.defining",c),(d||0===d)&&o.buffer.push(d),o.buffer.push(" out of\n"),p=i["link-to"]||t&&t["link-to"],c={hash:{},hashTypes:{},hashContexts:{},inverse:m.noop,fn:m.program(9,h,o),contexts:[t],types:["STRING"],data:o},d=p?p.call(t,"transitions.primitives",c):b.call(t,"link-to","transitions.primitives",c),(d||0===d)&&o.buffer.push(d),o.buffer.push(".</p>\n"),f})}),define("liquid-fire/templates/transitions/predefined",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,o){this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),o=o||{},o.buffer.push('<h2>Predefined Transitions</h2>\n\n<p>So far, the library includes a small set of predefined transitions\nto get you started.</p>\n\n<dl class="dl-horizontal">\n  <dt>toLeft<br>toRight<br>toUp<br>toDown</dt>\n  <dd>These are slide animations powered by the\n  CSS <code>transform</code> property. They all accept an optional\n  hash that\'s passed onward to Velocity for both the outgoing and\n  incoming animations.</dd>\n\n  <dt>crossFade</dt>\n  <dd>Old content fades away toward opacity 0 while new content fades\n  in.</dd>\n\n  <dt>fade</dt>\n  <dd>Old content fades away toward opacity 0, then new content fades\n  in. This is a good example of a serial animation with support for\n  interruption.</dd>\n</dl>\n\n<p>It may be instructive to <a href="https://github.com/ef4/liquid-fire/tree/master/app-addon/transitions">read the source for these predefined transitions</a>.</p>\n')})}),define("liquid-fire/templates/transitions/primitives",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,o){function a(e,t){t.buffer.push("One")}function r(e,t){t.buffer.push("Two")}function l(e,t){t.buffer.push("Three")}this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),o=o||{};var u,h,d,p="",c=this,f=i.helperMissing,m=this.escapeExpression;return o.buffer.push('<h2>Animation Primitives</h2>\n\n<p>The library exports these animation primitives:<p>\n\n<dl>\n  <dt><code>animate(view, props, opts, <em>label</em>)</code></dt>\n\n  <dd>\n    This operates on the given <code>view</code>\'s element, and always\n    returns a promise (even if the view is undefined or otherwise\n    lacking an element). <code>props</code> and <code>opts</code> are\n    passed directly through\n    to <a href="http://julian.com/research/velocity/#arguments">Velocity\'s\n    animate function</a>. <code>label</code> is an optional string\n    that you can use to refer to this animation while it\'s running.\n  </dd>\n\n  <dt><code>stop(view)</code></dt>\n  <dd>\n    This stops any currently running animations on the given view.\n  </dd>\n\n  <dt><code>isAnimating(view, label)</code></dt>\n  <dd>Tests whether an animation with the given label is currently\n    running on this view.\n  </dd>\n\n  <dt><code>timeSpent(view, label)</code></dt>\n  <dd>\n    Returns the number of milliseconds already spent running the\n    labeled animation. Useful when adaptively interrupting in-progress\n    animations.\n  </dd>\n\n  <dt><code>timeRemaining(view, label)</code></dt>\n  <dd>\n    Returns the number of milliseconds remaining for the labeled\n    animation. Useful when adaptively interrupting in-progress\n    animations.\n  </dd>\n\n  <dt><code>finish(view, label)</code></dt>\n  <dd>Returns a promise that resolves when the running animation with\n  the given label on the given view completes.</dd>\n\n</dl>\n\n<h3>Demo</h3>\n\n<p>This shows a slow fade effect so you can experiment with\ninterrupting the transition. Notice that it has two different\nbehaviors depending on whether you interrupt the fade-out or\nfade-in.</p>\n\n<div id="interrupted-fade-demo">\n  '),h=i["link-to"]||t&&t["link-to"],d={hash:{},hashTypes:{},hashContexts:{},inverse:c.noop,fn:c.program(1,a,o),contexts:[t],types:["STRING"],data:o},u=h?h.call(t,"transitions.primitives.index",d):f.call(t,"link-to","transitions.primitives.index",d),(u||0===u)&&o.buffer.push(u),o.buffer.push("\n  "),h=i["link-to"]||t&&t["link-to"],d={hash:{},hashTypes:{},hashContexts:{},inverse:c.noop,fn:c.program(3,r,o),contexts:[t],types:["STRING"],data:o},u=h?h.call(t,"transitions.primitives.two",d):f.call(t,"link-to","transitions.primitives.two",d),(u||0===u)&&o.buffer.push(u),o.buffer.push("\n  "),h=i["link-to"]||t&&t["link-to"],d={hash:{},hashTypes:{},hashContexts:{},inverse:c.noop,fn:c.program(5,l,o),contexts:[t],types:["STRING"],data:o},u=h?h.call(t,"transitions.primitives.three",d):f.call(t,"link-to","transitions.primitives.three",d),(u||0===u)&&o.buffer.push(u),o.buffer.push("\n  "),u=i._triageMustache.call(t,"liquid-outlet",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:o}),(u||0===u)&&o.buffer.push(u),o.buffer.push("\n</div>\n\n"),o.buffer.push(m((h=i["code-snippet"]||t&&t["code-snippet"],d={hash:{name:"fade-definition.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:o},h?h.call(t,d):f.call(t,"code-snippet",d)))),o.buffer.push("\n"),p})}),define("liquid-fire/templates/transitions/primitives/index",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,o){this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),o=o||{},o.buffer.push('<div class="one">One</div>\n')})}),define("liquid-fire/templates/transitions/primitives/three",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,o){this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),o=o||{},o.buffer.push('<div class="three">Three</div>\n')})}),define("liquid-fire/templates/transitions/primitives/two",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,o){this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),o=o||{},o.buffer.push('<div class="two">Two</div>\n')})}),define("liquid-fire/transitions",["exports"],function(e){"use strict";e["default"]=function(){this.transition(this.fromRoute("helpers-documentation.liquid-outlet.index"),this.toRoute("helpers-documentation.liquid-outlet.other"),this.use("toLeft"),this.reverse("toRight")),this.transition(this.childOf("#liquid-bind-demo"),this.use("toUp")),this.transition(this.fromNonEmptyModel(),this.hasClass("vehicles"),this.toModel(!0),this.use("crossFade",{duration:1e3}),this.reverse("toLeft",{duration:1e3})),this.transition(this.childOf("#interrupted-fade-demo"),this.use("fade",{duration:1500})),this.transition(this.childOf("#inline-serial-scenario"),this.use("fade",{duration:1e3})),this.transition(this.childOf("#inline-scenario"),this.toModel(!0),this.use("toLeft",{duration:1e3}),this.reverse("toRight",{duration:1e3}))}}),define("liquid-fire/transitions/cross-fade",["vendor/liquid-fire","exports"],function(e,t){"use strict";var n=e.animate,i=e.stop,s=e.Promise;t["default"]=function(e,t,o){return i(e),t().then(function(t){return s.all([n(e,{opacity:0},o),n(t,{opacity:[1,0]},o)])})}}),define("liquid-fire/transitions/fade",["vendor/liquid-fire","exports"],function(e,t){"use strict";var n=e.isAnimating,i=e.finish,s=e.timeSpent,o=e.animate,a=e.stop;t["default"]=function(e,t,r){var l,u=r;return n(e,"fade-out")?l=i(e,"fade-out"):(n(e,"fade-in")&&(u={duration:s(e,"fade-in")}),a(e),l=o(e,{opacity:0},u,"fade-out")),l.then(t).then(function(e){return o(e,{opacity:[1,0]},r,"fade-in")})}}),define("liquid-fire/transitions/move-over",["vendor/liquid-fire","exports"],function(e,t){"use strict";var n=e.stop,i=e.animate,s=e.Promise,o=e.isAnimating,a=e.finish;t["default"]=function(e,t,r,l,u){var h,d,p,c={},f={};return"x"===r.toLowerCase()?(d="translateX",p="width"):(d="translateY",p="height"),o(e,"moving-in")?h=a(e,"moving-in"):(n(e),h=s.cast()),h.then(t).then(function(t){if(t&&t.$()&&e&&e.$()){var n=Math.max.apply(null,[t.$()[p](),e.$()[p]()]);c[d]=n*l+"px",f[d]=["0px",-1*n*l+"px"]}else c[d]=100*l+"%",f[d]=["0%",-100*l+"%"];return s.all([i(e,c,u),i(t,f,u,"moving-in")])})}}),define("liquid-fire/transitions/rotate-below",["vendor/liquid-fire","exports"],function(e,t){"use strict";var n=e.stop,i=e.animate,s=e.Promise;
t["default"]=function(e,t,o){var a=1;return o&&"cw"===o.direction&&(a=-1),n(e),t().then(function(t){return e&&e.$().css("transform-origin","50% 150%"),t&&t.$().css("transform-origin","50% 150%"),s.all([i(e,{rotateZ:-90*a+"deg"},o),i(t,{rotateZ:["0deg",90*a+"deg"]},o)])})}}),define("liquid-fire/transitions/to-down",["vendor/liquid-fire","exports"],function(e,t){"use strict";var n=e.curryTransition;t["default"]=n("move-over","y",1)}),define("liquid-fire/transitions/to-left",["vendor/liquid-fire","exports"],function(e,t){"use strict";var n=e.curryTransition;t["default"]=n("move-over","x",-1)}),define("liquid-fire/transitions/to-right",["vendor/liquid-fire","exports"],function(e,t){"use strict";var n=e.curryTransition;t["default"]=n("move-over","x",1)}),define("liquid-fire/transitions/to-up",["vendor/liquid-fire","exports"],function(e,t){"use strict";var n=e.curryTransition;t["default"]=n("move-over","y",-1)}),define("liquid-fire/views/application",["ember","exports"],function(e,t){"use strict";function n(e,t){var n=a(document).height()/e;i();for(var s=0;n>s;s++)a("body").append("<div class='grid' id='vgrid"+s+"'></div>"),a("#vgrid"+s).css({height:""+e+"px",width:"100%",position:"absolute",top:""+(e*s-1+t)+"px",left:"0px",borderTop:"1px solid black",zIndex:2e3,"pointer-events":"none",opacity:.2,"background-color":"transparent"})}function i(){a(".grid").remove()}function s(e,t){return null==t&&(t=0),a("#vgrid0").length>0?i():n(e,t)}var o=e["default"],a=o.$;t["default"]=o.View.extend({didInsertElement:function(){a(document).bind("keydown",function(e){e.ctrlKey&&e.altKey&&71===e.keyCode&&s(22)})}})}),define("liquid-fire/views/liquid-child",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.ContainerView.extend({classNames:["liquid-child"],resolveInsertionPromise:n.on("didInsertElement",function(){this.$().css({visibility:"hidden"}).hide(),this._resolveInsertion&&this._resolveInsertion(this)})})}),define("liquid-fire/views/liquid-if",["liquid-fire/views/liquid-outlet","ember","exports"],function(e,t,n){"use strict";var i=e["default"],s=t["default"];n["default"]=i.extend({liquidUpdate:s.on("init",s.observer("showFirst",function(){var e=this.get((this.get("showFirst")?"first":"second")+"Template"),t=s._MetamorphView.create({container:this.container,template:e,liquidParent:this,contextBinding:"liquidParent.context",liquidContext:this.get("showFirst"),hasLiquidContext:!0});this.set("currentView",t)}))})}),define("liquid-fire/views/liquid-outlet",["ember","vendor/liquid-fire","exports"],function(e,t,n){"use strict";var i=e["default"],s=t.Promise,o=t.animate,a=t.stop;n["default"]=i.ContainerView.extend({classNames:["liquid-container"],growDuration:250,growPixelsPerSecond:200,growEasing:"slide",enableGrowth:!0,init:function(){this._super(),i.A(this._childViews).clear()},_currentViewWillChange:i.beforeObserver("currentView",function(){}),_currentViewDidChange:i.on("init",i.observer("currentView",function(){var e=this.get("childViews.lastObject"),t=this.get("currentView");if(!(!e&&!t||e&&e.get("currentView")===t||this._runningTransition&&this._runningTransition.oldView===e&&this._runningTransition.newContent===t)){var n=this.get("transitions").transitionFor(this,e,t,this.get("use"));this._runningTransition&&this._runningTransition.interrupt(),this._runningTransition=n,n.run()["catch"](function(e){i.RSVP.Promise.cast()._onerror(e)})}})),_liquidChildFor:function(e){e&&!e.get("hasLiquidContext")&&e.set("liquidContext",e.get("context"));var t=this.container.lookupFactory("view:liquid-child");return t.create({currentView:e})},_pushNewView:function(e){var t=this._liquidChildFor(e),n=new s(function(e){t._resolveInsertion=e});return this.pushObject(t),n},cacheSize:function(){var e=this.$();e&&(this._cachedSize={width:e.outerWidth(),height:e.outerHeight()})},unlockSize:function(){function e(){var e=t.$();e&&e.css({width:"",height:""})}var t=this;this._scaling?this._scaling.then(e):e()},_durationFor:function(e,t){return Math.min(this.get("growDuration"),1e3*Math.abs(e-t)/this.get("growPixelsPerSecond"))},_adaptDimension:function(e,t,n){if(t!==n&&this.get("enableGrowth")){var i={};return i[e]=[n,t],o(this,i,{duration:this._durationFor(t,n),queue:!1,easing:this.get("growEasing")})}var a=this.$();return a&&a[e](n),s.cast()},adaptSize:function(){a(this);var e=this.$();if(e){var t={width:e.outerWidth(),height:e.outerHeight()};"undefined"==typeof this._cachedSize&&(this._cachedSize=t),e.outerWidth(this._cachedSize.width),e.outerHeight(this._cachedSize.height),this._scaling=s.all([this._adaptDimension("width",this._cachedSize.width,t.width),this._adaptDimension("height",this._cachedSize.height,t.height)])}}})}),define("liquid-fire/views/liquid-with",["liquid-fire/views/liquid-outlet","ember","exports"],function(e,t,n){"use strict";var i=e["default"],s=t["default"];n["default"]=i.extend({liquidUpdate:s.on("init",s.observer("boundContext",function(){var e=s._MetamorphView.create({container:this.container,templateName:"liquid-with",boundContext:this.get("boundContext"),liquidWithParent:this,liquidContext:this.get("boundContext"),hasLiquidContext:!0});this.set("currentView",e)}))})});