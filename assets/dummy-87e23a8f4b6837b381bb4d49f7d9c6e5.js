define("dummy/app",["ember","ember/resolver","ember/load-initializers","dummy/config/environment","exports"],function(e,t,n,s,i){"use strict";var a=e["default"],o=t["default"],r=n["default"],l=s["default"];a.MODEL_FACTORY_INJECTIONS=!0;var h=a.Application.extend({modulePrefix:l.modulePrefix,podModulePrefix:l.podModulePrefix,Resolver:o});r(h,l.modulePrefix),i["default"]=h}),define("dummy/components/code-snippet",["ember","dummy/snippets","exports"],function(e,t,n){"use strict";var s=e["default"],i=t["default"],a=require("highlight.js");n["default"]=s.Component.extend({tagName:"pre",classNameBindings:["language"],unindent:!0,_unindent:function(e){if(!this.get("unindent"))return e;for(var t,n,s=e.split("\n"),i=0;i<s.length;i++)t=/^\s*/.exec(s[i]),t&&("undefined"==typeof n||n>t[0].length)&&(n=t[0].length);return"undefined"!=typeof n&&n>0&&(e=e.replace(new RegExp("(\\n|^)\\s{"+n+"}","g"),"$1")),e},source:function(){return this._unindent((i[this.get("name")]||"").replace(/^(\s*\n)*/,"").replace(/\s*$/,""))}.property("name"),didInsertElement:function(){a.highlightBlock(this.get("element"))},language:function(){var e=/\.(\w+)$/i.exec(this.get("name"));if(e)switch(e[1].toLowerCase()){case"js":return"javascript";case"hbs":return"handlebars"}}.property("name")})}),define("dummy/snippets",["exports"],function(e){"use strict";e["default"]={"bind-demo-style.css":"#liquid-bind-demo {\n    font-size: 48px;\n    line-height: 66px;\n    text-align: center;\n    .liquid-outlet {\n	display: inline-block;\n	vertical-align: top;\n    }\n    .liquid-child {\n        /* This prevents a slight horizontal wobble in firefox. */\n        width: 1.5em;\n    }\n}\n","bind-demo-transition.js":"  this.transition(\n    this.childOf('#liquid-bind-demo'),\n    this.use('toUp')\n  );","child-of-example.hbs":'<div id="main-container">\n  {{liquid-outlet}}\n</div>\n',"child-of-example.js":"this.transition(\n  this.childOf('#main-container'),\n  this.use('toUp')\n);\n","cross-fade-definition.js":'import { animate, stop, Promise } from "liquid-fire";\nexport default function crossFade(oldView, insertNewView, opts) {\n  stop(oldView);\n  return insertNewView().then(function(newView) {\n    return Promise.all([\n      animate(oldView, {opacity: 0}, opts),\n      animate(newView, {opacity: [1, 0]}, opts)\n    ]);\n  });\n}',"curried-transition.js":"/* app/transitions/blue-animation.js */\nimport { curryTransition } from \"liquid-fire\";\nexport default curryTransition('myAnimation', 'blue', { duration: 300 });\n\n/* within app/transitions.js */\nthis.transition(\n  this.withinRoute('home'),\n  this.use('blueAnimation')\n);\n","fade-definition.js":"import { isAnimating, finish, timeSpent, animate, stop } from \"liquid-fire\";\nexport default function fade(oldView, insertNewView, opts) {\n  var firstStep,\n      outOpts = opts;\n\n  if (isAnimating(oldView, 'fade-out')) {\n    // if the old view is already fading out, let it finish.\n    firstStep = finish(oldView, 'fade-out');\n  } else {\n    if (isAnimating(oldView, 'fade-in')) {\n      // if the old view is partially faded in, scale its fade-out\n      // duration appropriately.\n      outOpts = { duration: timeSpent(oldView, 'fade-in') };\n    }\n    stop(oldView);\n    firstStep = animate(oldView, {opacity: 0}, outOpts, 'fade-out');\n  }\n\n  return firstStep.then(insertNewView).then(function(newView){\n    return animate(newView, {opacity: [1, 0]}, opts, 'fade-in');\n  });\n}","flexboxes.hbs":'  <div>\n    Choose some of these:\n    <label>{{input type="checkbox" checked=showOne}}One</label>\n    <label>{{input type="checkbox" checked=showTwo}}Two</label>\n    <label>{{input type="checkbox" checked=showThree}}Three</label>\n  </div>\n\n  <div class="flex-parent">\n    {{#liquid-if showOne use="flex-grow" containerless=true }}\n      One\n    {{/liquid-if}}\n\n    {{#liquid-if showTwo use="flex-grow" containerless=true }}\n      Two\n    {{/liquid-if}}\n\n    {{#liquid-if showThree use="flex-grow" containerless=true }}\n      Three\n    {{/liquid-if}}\n  </div>',"has-class-example-dom.hbs":'<div class="ember-view liquid-child magical">\n  It\'s a unicorn!\n</div>\n',"has-class-example.hbs":"{{#liquid-if isUnicorn class=\"magical\"}}\n  It's a unicorn!\n{{else}}\n  It's something else!\n{{/liquid-if}}\n","has-class-example.js":"this.transition(\n  this.hasClass('magical'),\n  this.use('crossFade')\n);\n","hello-modal-map.js":"    this.modal('hello-modal', {\n      withParams: ['salutation', 'person'],\n      otherParams: {\n        modalMessage: \"message\"\n      },\n      actions: {\n        changeSalutation: \"changeSalutation\"\n      }\n    });","hello-modal.hbs":'<div>{{salutation}} {{person}}!</div>\n<div>{{input value=message class="modal-input"}}</div>\n<button {{action "gotIt"}} class="done">Thanks</button>\n<button {{action "change"}} class="change">Change</button>',"hello-modal.js":"export default Ember.Component.extend({\n  classNames: ['hello-modal'],\n  actions: {\n    gotIt: function() {\n      this.sendAction('dismiss');\n    },\n    change: function() {\n      this.sendAction('changeSalutation');\n    }\n  }\n});","hello-tomster.hbs":'        {{#link-to (query-params salutation="Guten tag" person="Stef") tagName="button"}}\n          Try It\n        {{/link-to}}',"liquid-bind-demo.hbs":'<div id="liquid-bind-demo">\n  {{liquid-bind hours}}:{{liquid-bind minutes}}:{{liquid-bind seconds}}\n</div>',"liquid-box-demo-transition.js":"  this.transition(\n    this.hasClass('vehicles'),\n\n    // this makes our rule apply when the liquid-if transitions to the\n    // true state.\n    this.toModel(true),\n    this.use('crossFade', {duration: 1000}),\n\n    // which means we can also apply a reverse rule for transitions to\n    // the false state.\n    this.reverse('toLeft', {duration: 1000})\n  );","liquid-box-demo.hbs":'<div id="liquid-box-demo">\n  <label>I\'m renting a </label>\n  {{view "select" value=vehicle content=vehicles}}\n\n  {{#liquid-if isBike class="vehicles"}}\n    <label>\n      Would you like a helmet? {{input type="checkbox" checked="helmet"}}\n    </label>\n  {{else}}\n    <label>License Number</label>\n    {{input type="text" value=license}}\n    <label>License State</label>\n    {{view "select" value=state content=states}}\n  {{/liquid-if}}\n\n  <button type="button" class="btn btn-success">Yay, let\'s go!</button>\n</div>',"modal-controller.js":"export default Ember.Controller.extend({\n  queryParams: ['salutation', 'person'],\n  salutation: null,\n  person: null,\n  modalMessage: \"bound text for modal\"\n});","model-match-examples.js":"// Matches any transition that ends up with a model that's a Person.\nthis.transition(\n  this.toModel(function(){ this instanceof Person }),\n  this.use('toLeft')\n);\n\n// Instance checks are common so there's a shorthand. This is\n// equivalent to the previous example.\nthis.transition(\n  this.toModel({instanceOf: Person}),\n  this.use('toLeft')\n);\n\n// You can list multiple constraints and they will be tested in order\n// and all must pass.\nthis.transition(\n  this.toModel({instanceOf: Person}),\n  this.toModel(function(){ return this.get('age') > 21 }),\n  this.use('toLeft')\n);\n\n// You can constrain the from-model too.\nthis.transition(\n  this.fromModel({instanceOf: Person}),\n  this.toModel({instanceOf: Pet}),\n  this.use('toLeft')\n);\n\n// When they're both the same, you can use shorthand:\nthis.transition(\n  this.betweenModels({instanceOf: Person}),\n  this.use('toLeft')\n);\n\n// `null` matches an undefined model. The from-model will be undefined\n// during the initial render.\nthis.transition(\n  this.fromModel(null),\n  this.toModel({instanceOf: Person}),\n  this.use('fade')\n);\n\n// `true` is essentially shorthand for function(){ return this; }. And\n// `false` works too. These are useful when you're writing a rule that\n// targets a liquid-if and you want to animate differently for the two\n// different logical transitions.\nthis.transition(\n  this.hasClass('fancy-choice'),\n  this.toModel(true),\n  this.use('toUp'),\n  this.reverse('toDown')\n);\n\n// Your test functions also receive an argument containing the \"other\"\n// model, so you can do direct comparisons between them:\nthis.transition(\n  // compare them by id and only run this animation if we're moving to\n  // a model with a higher id.\n  this.toModel(function(fromModel) {\n    return this && fromModel && this.get('id') > fromModel.get('id');\n  }),\n\n  this.use('toLeft')\n);\n\n// The above pattern of testing for non-undefined models is common, so\n// there's are shorthand methods fromNonEmptyModel, toNonEmptyModel,\n// and betweenNonEmptyModels:\nthis.transition(\n  this.betweenNonEmptyModels(),\n  this.toModel(function(fromModel) {\n    return this.get('id') > fromModel.get('id');\n  }),\n  this.use('toLeft')\n);\n","outlet.hbs":'{{liquid-outlet class="demo-container"}}',"rotate-below.js":"import { stop, animate, Promise } from \"liquid-fire\";\n\nexport default function rotateBelow(oldView, insertNewView, opts) {\n  var direction = 1;\n  if (opts && opts.direction === 'cw') {\n    direction = -1;\n  }\n  stop(oldView);\n  return insertNewView().then(function(newView) {\n    if (oldView) {\n      oldView.$().css('transform-origin', '50% 150%');\n    }\n    if (newView) {\n      newView.$().css('transform-origin', '50% 150%');\n    }\n    return Promise.all([\n      animate(oldView, { rotateZ: -90*direction + 'deg' }, opts),\n      animate(newView, { rotateZ: ['0deg', 90*direction+'deg'] }, opts),\n    ]);\n  });\n}","route-match-examples.js":"// Matches any transition that ends up in the route named 'foo', no\n// matter where it came from.\nthis.transition(\n  this.toRoute('foo'),\n  this.use('toLeft')\n);\n\n// This is equivalent to the previous example, but showing a more\n// generic form that lets you provide an arbitrary test.\nthis.transition(\n  this.toRoute(function(){ return this === 'foo'; }),\n  this.use('toLeft')\n);\n\n// You can list multiple routes, and the constraint will be satisfied\n// by any of them. This wil match any transition that ends up in 'foo'\n// or 'bar'.\nthis.transition(\n  this.toRoute('foo', 'bar'),\n  this.use('toLeft')\n);\n\n// You can mix and match strings and functions. This is equivalent to\n// the previous example.\nthis.transition(\n  this.toRoute('foo', function(){ return this === 'bar'; }),\n  this.use('toLeft')\n);\n\n// All of these examples apply to fromRoute too. This will match any\n// transition from 'foo' to 'bar', or from 'foo' to any route name\n// starting with 'q'.\nthis.transition(\n  this.fromRoute('foo'),\n  this.toRoute('bar', function(){ return /^q/.test(this); }),\n  this.use('toLeft')\n);\n\n// withinRoute is just a shorthand. Instead of saying this:\nthis.transition(\n  this.fromRoute('foo'),\n  this.toRoute('foo'),\n  this.use('toLeft')\n);\n// you can say this:\nthis.transition(\n  this.withinRoute('foo'),\n  this.use('toLeft')\n);\n\n// All of the route constraints also accept null to match the empty\n// route. The empty route is the initial route the very first time an\n// outlet is rendered.  So this example causes the 'foo' route to fade\n// in during the initial render:\nthis.transition(\n  this.fromRoute(null),\n  this.toRoute('foo'),\n  this.use('fade')\n);\n","sample-modal-routes.js":"Router.map(function() {\n  // This defines a modal in the 'application' scope. It will observe\n  // the property 'foo' on the application controller. Whenever foo\n  // has a non-default value, the component 'first-modal' will render\n  // in a popup.\n  this.modal('first-modal', { withParams: 'foo' });\n\n  this.resource('people', function() {\n    this.route('detail');\n\n    // This defines a modal in the 'people' scope. It will observe the\n    // properties 'bar' and 'baz' on the people controller. Whenever\n    // the people route is active and bar or baz have non-default\n    // values, the component 'second-modal' will render in a popup.\n    this.modal('second-modal', { withParams: ['bar', 'baz'] });\n\n  });\n});\n","simple-transition-map.js":"export default function(){\n  this.transition(\n    this.fromRoute('people.index'),\n    this.toRoute('people.detail'),\n    this.use('toLeft'),\n    this.reverse('toRight')\n  );\n};\n","transition-arguments.js":"/* app/transitions/my-animation.js */\nexport default function(oldView, insertNewView, color, opts) {\n  //...\n});\n\n/* within app/transitions.js */\nthis.transition(\n  this.withinRoute('home'),\n  this.use('myAnimation', 'red', { duration: 100 })\n);\n","transition-definitions.js":'import { animate, stop } from "liquid-fire";\n\nexport default function fade(oldView, insertNewView) {\n  stop(oldView);\n  return animate(oldView, {opacity: 0})\n    .then(insertNewView)\n    .then(function(newView){\n      return animate(newView, {opacity: [1, 0]});\n    });\n}\n',"transition-demo.js":"  this.transition(\n    this.fromRoute('helpers-documentation.liquid-outlet.index'),\n    this.toRoute('helpers-documentation.liquid-outlet.other'),\n    this.use('toLeft'),\n    this.reverse('toRight')\n  );","transition-skeleton.js":"export default function(oldView, insertNewView) {\n  return ... // A promise that resolves when the transition is finished.\n}\n","use-examples.js":"// The simplest 'use' just calls a named transition.\nthis.transition(\n  this.withinRoute('foo'),\n  this.use('fade')\n);\n\n// Named transitions may take arguments. For example, the predefined\n// 'fade' transition accepts an `opts` hash that's passed through to\n// Velocity, so you can say:\nthis.transition(\n  this.withinRoute('foo'),\n  this.use('fade', { duration: 3000 })\n);\n\n// This declares two symmetric rules: \"from foo to bar use toLeft\" and\n// \"from bar to foo use toRight\".\nthis.transition(\n  this.fromRoute('foo'),\n  this.toRoute('bar'),\n  this.use('toLeft'),\n  this.reverse('toRight')\n);\n\n// You can also provide an implementation instead of a name, though\n// it's probably better to keep implementations in separate files. We\n// talk more about transition implementations in the next section.\nimport { animate, stop } from \"liquid-fire\";\nthis.transition(\n  this.withinRoute('foo'),\n  this.use(function(oldView, insertNewView, opts) {\n    stop(oldView);\n    return animate(oldView, {opacity: 0}, opts)\n      .then(insertNewView)\n      .then(function(newView){\n        return animate(newView, {opacity: [1, 0]}, opts);\n      });\n  })\n);\n","with-demo.hbs":'\n{{#liquid-with model as currentModel use="rotateBelow" class="demo-container"}}\n  {{currentModel.id}}\n  <button {{action "higher" currentModel}}>Go</button>\n{{/liquid-with}}\n'}}),define("dummy/components/hello-modal",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Component.extend({classNames:["hello-modal"],actions:{gotIt:function(){this.sendAction("dismiss")},change:function(){this.sendAction("changeSalutation")}}})}),define("dummy/components/lf-overlay",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Component.extend({tagName:"span",classNames:["lf-overlay"],didInsertElement:function(){n.$("body").addClass("lf-modal-open")},willDestroy:function(){n.$("body").removeClass("lf-modal-open")},click:function(){this.sendAction("clickAway")}})}),define("dummy/components/liquid-modal",["ember","exports"],function(e,t){"use strict";function n(e,t){var n=e.get("innerViewInstance");n&&n.send(t)}var s=e["default"];t["default"]=s.Component.extend({classNames:["liquid-modal"],currentContext:s.computed.oneWay("owner.modalContexts.lastObject"),owner:null,innerView:s.computed("currentContext",function(){var e=this,t=this.get("currentContext"),n=t.get("name"),i=this.get("container"),a=i.lookup("component-lookup:main").lookupFactory(n);s.assert("Tried to render a modal using component '"+n+"', but couldn't find it.",!!a);var o=s.copy(t.get("params"));o.registerMyself=s.on("init",function(){e.set("innerViewInstance",this)}),o._source=s.computed(function(){return t.get("source")});var r,l,h=t.get("options.otherParams");for(r in h)l=h[r],o[l]=s.computed.alias("_source."+r);var u=t.get("options.actions")||{};return o.sendAction=function(e){var n=u[e];if(!n)return void this._super.apply(this,Array.prototype.slice.call(arguments));var s=t.get("source"),i=Array.prototype.slice.call(arguments,1);i.unshift(n),s.send.apply(s,i)},a.extend(o)}),actions:{outsideClick:function(){this.get("currentContext.options.dismissWithOutsideClick")?this.send("dismiss"):n(this,"outsideClick")},escape:function(){this.get("currentContext.options.dismissWithEscape")?this.send("dismiss"):n(this,"escape")},dismiss:function(){var e=this.get("currentContext.source"),t=e.constructor.proto(),n=this.get("currentContext.options.withParams"),s={};for(var i in n)s[i]=t[i];e.setProperties(s)}}})}),define("dummy/components/lm-container",["ember","liquid-fire/tabbable","exports"],function(e,t,n){"use strict";function s(){a&&a.focus()}var i=e["default"],a=null;i.$(document).on("focusin",s),n["default"]=i.Component.extend({classNames:["lm-container"],attributeBindings:["tabindex"],tabindex:0,keyUp:function(e){27===e.keyCode&&this.sendAction()},keyDown:function(e){9===e.keyCode&&this.constrainTabNavigation(e)},didInsertElement:function(){this.focus(),a=this},willDestroy:function(){a=null},focus:function(){if(!this.get("element").contains(document.activeElement)){var e=this.$("[autofocus]");e.length||(e=this.$(":tabbable")),e.length||(e=this.$()),e[0].focus()}},constrainTabNavigation:function(e){var t=this.$(":tabbable"),n=t[e.shiftKey?"first":"last"]()[0],s=n===document.activeElement||this.get("element")===document.activeElement;s&&(e.preventDefault(),t[e.shiftKey?"last":"first"]()[0].focus())}})}),define("dummy/components/nav-link",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Component.extend({classNames:["nav-link"],classNameBindings:["direction"],preGlyphicon:function(){return this.get("topic")&&"back"===this.get("direction")?"glyphicon-chevron-left":void 0}.property("direction","topic"),postGlyphicon:function(){return this.get("topic")&&"forward"===this.get("direction")?"glyphicon-chevron-right":void 0}.property("direction","topic")})}),define("dummy/controllers/application",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Controller.extend({queryParams:["warn"],warn:0,tableOfContents:function(){return[{route:"index",title:"Introduction"},{route:"helpers-documentation",title:"Template Helpers",children:[{route:"helpers-documentation.liquid-outlet",title:"liquid-outlet"},{route:"helpers-documentation.liquid-with",title:"liquid-with"},{route:"helpers-documentation.liquid-bind",title:"liquid-bind"},{route:"helpers-documentation.liquid-if",title:"liquid-if"}]},{route:"transition-map",title:"Transition Map",children:[{route:"transition-map.route-constraints",title:"Matching by route"},{route:"transition-map.model-constraints",title:"Matching by model"},{route:"transition-map.dom-constraints",title:"Matching by DOM context"},{route:"transition-map.choosing-transitions",title:"Choosing transition animations"}]},{route:"transitions",title:"Transitions",children:[{route:"transitions.predefined",title:"Predefined transitions"},{route:"transitions.defining",title:"Defining custom transitions"},{route:"transitions.primitives",title:"Animation Primitives"}]},{route:"modal-documentation",title:"Modal Dialogs",children:[{route:"modal-documentation.modal",title:"modal()"},{route:"modal-documentation.component",title:"Modal Components"}]}]}.property(),flatContents:function(){var e=[];return this.get("tableOfContents").forEach(function(t){e.push(t),t.children&&(e=e.concat(t.children))}),e}.property("tableOfContents"),currentIndex:function(){for(var e,t,n=this.get("flatContents"),s=this.get("currentRouteName"),i=0;i<n.length;i++)t=n[i],t.route&&new RegExp("^"+t.route.replace(/\./g,"\\.")).test(s)&&("undefined"==typeof e||n[e].route.length<t.route.length)&&(e=i);return e}.property("currentRouteName","flatContents"),nextTopic:function(){var e=this.get("flatContents"),t=this.get("currentIndex");return"undefined"!=typeof t?e[t+1]:void 0}.property("currentIndex","flatContents"),prevTopic:function(){var e=this.get("flatContents"),t=this.get("currentIndex");return"undefined"!=typeof t?e[t-1]:void 0}.property("currentIndex","flatContents")})}),define("dummy/controllers/helpers-documentation/liquid-bind",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Controller.extend({start:n.on("init",function(){var e=this;this.interval=setInterval(function(){n.run(e,"tick")},1e3),this.tick()}),willDestroy:function(){clearInterval(this.interval),this._super()},tick:function(e){e||(e=moment()),this.setProperties({now:e,hours:e.format("hh"),minutes:e.format("mm"),seconds:e.format("ss")})},actions:{forceTick:function(){clearInterval(this.interval),this.tick(this.get("now").add({hours:1,minutes:1,seconds:1}))}}})}),define("dummy/controllers/helpers-documentation/liquid-if",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Controller.extend({vehicle:"bike",vehicles:["bike","car"],states:["","AL","AK","AZ","AR","CA","CO","CT"],isBike:n.computed.equal("vehicle","bike")})}),define("dummy/controllers/helpers-documentation/liquid-with/page",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.ObjectController.extend({actions:{higher:function(e){this.transitionToRoute("helpers-documentation.liquid-with.page",e.get("id")+1)}}})}),define("dummy/controllers/modal-documentation",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Controller.extend({queryParams:["salutation","person"],salutation:null,person:null,modalMessage:"bound text for modal"})}),define("dummy/controllers/modal-documentation/index",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.ObjectController.extend({needs:["modalDocumentation"],modalMessage:n.computed.alias("controllers.modalDocumentation.modalMessage")})}),define("dummy/controllers/sample",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.ObjectController.extend({usingSampleController:!0})}),define("dummy/controllers/scenarios",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Controller.extend({queryParams:["testSalutation","testPerson"],actions:{changeSalutation:function(){this.set("testSalutation","Hola")}}})}),define("dummy/controllers/scenarios/growable-with",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Controller.extend({otherState:!1,myThing:n.computed("otherState",function(){return n.Object.create(this.get("otherState")?{description:"Foo"}:{description:"Bar baz qux"})})})}),define("dummy/controllers/scenarios/stef",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Controller.extend({isExpanded:!0,actions:{toggle:function(){this.toggleProperty("isExpanded")}}})}),define("dummy/controllers/test-bind",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Controller.extend({counter:0,init:function(){var e=this;this.interval=setInterval(function(){e.tick()},1e3),this.tick()},willDestroy:function(){clearInterval(this.interval)},tick:function(){this.set("counter",this.get("counter")+1)}})}),define("dummy/controllers/test-if",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Controller.extend({message:"Hello"})}),define("dummy/controllers/test-with",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.ObjectController.extend({actions:{increment:function(){this.transitionToRoute("test-with",parseInt(this.get("model.id"))+1)},decrement:function(){this.transitionToRoute("test-with",parseInt(this.get("model.id"))-1)}}})}),define("dummy/helpers/liquid-bind",["exports"],function(e){"use strict";function t(){var e,t;n?(e=arguments[2],t=this.container):(e=arguments[arguments.length-1],t=e.data.view.container);var s=t.lookupFactory("template:liquid-with-self"),i=t.lookupFactory("helper:liquid-with");return n?e.template=s:e.fn=s,n?void i.helperFunction.apply(this,arguments):i.apply(this,arguments)}var n=!!Ember.HTMLBars,s=t;Ember.HTMLBars&&(s={isHTMLBars:!0,helperFunction:t,preprocessArguments:function(){}}),e["default"]=s}),define("dummy/helpers/liquid-box",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=function(){n.assert("liquid-box is deprecated, see CHANGELOG.md",!1)}}),define("dummy/helpers/liquid-if",["ember","exports"],function(e,t){"use strict";function n(e){function t(){var t,n,a,o,r;i?(t=arguments[0][0],n=arguments[1],a=arguments[2],o=arguments[3],r=this.container):(t=arguments[0],a=arguments[1],n=a.hash,r=a.data.view.container);var l=r.lookupFactory("view:liquid-if"),h=[a.fn||a.template,a.inverse];return e&&h.reverse(),delete a.fn,delete a.template,delete a.inverse,n.containerless&&(l=l.extend(s._Metamorph)),n.templates=h,i?(n.showFirst=t,void o.helpers.view.helperFunction.call(this,[l],n,a,o)):(n.showFirstBinding=t,s.Handlebars.helpers.view.call(this,l,a))}return s.HTMLBars?{isHTMLBars:!0,helperFunction:t,preprocessArguments:function(){}}:t}var s=e["default"],i=!!s.HTMLBars;t.factory=n,t["default"]=n(!1)}),define("dummy/helpers/liquid-measure",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=function(){n.assert("liquid-measure is deprecated, see CHANGELOG.md",!1)}}),define("dummy/helpers/liquid-outlet",["ember","exports"],function(e,t){"use strict";function n(e,t){var e,t,n,a,o;i?(e=arguments[0][0],a=arguments[1],t=arguments[2],o=arguments[3],n=this.container,e||(e="main",t.paramTypes=["string"])):(e=arguments[0],e&&e.data&&e.data.isRenderData&&(t=e,e="main",t.types.push("STRING")),n=t.data.view.container,a=t.hash);var r=n.lookupFactory("view:liquid-outlet");return a.containerless&&(r=r.extend(s._Metamorph)),a.viewClass=r,i?void o.helpers.outlet.helperFunction.call(this,[e],a,t,o):s.Handlebars.helpers.outlet.call(this,e,t)}var s=e["default"],i=!!s.HTMLBars,a=n;s.HTMLBars&&(a={isHTMLBars:!0,helperFunction:n,preprocessArguments:function(){}}),t["default"]=a}),define("dummy/helpers/liquid-unless",["dummy/helpers/liquid-if","exports"],function(e,t){"use strict";var n=e.factory;t["default"]=n(!0)}),define("dummy/helpers/liquid-with",["ember","exports"],function(e,t){"use strict";function n(){var e,t,n,a,o,r,l,h,o={hashTypes:{}},u={};i?(e=arguments[0],l=arguments[1],n=arguments[2],h=arguments[3],t=e[0],a=this.container,r=arguments[3].data,o.morph=n.morph,3===e.length&&(l.keywordName=e[2]._label,e=[t])):(e=Array.prototype.slice.apply(arguments,[0,-1]),t=arguments[0],n=arguments[arguments.length-1],r=n.data,l=n.hash,a=r.view.container,o.data=r,o.hash=u);var d=a.lookupFactory("view:liquid-with");return d=d.extend({originalArgs:e,originalHash:l,originalHashTypes:n.hashTypes,innerTemplate:n.fn||n.template}),l.containerless&&(d=d.extend(s._Metamorph)),u.boundContextBinding=t,["class","classNames","classNameBindings","use","id","growDuration","growPixelsPerSecond","growEasing","enableGrowth","containerless"].forEach(function(e){l.hasOwnProperty(e)&&(u[e]=l[e],o.hashTypes[e]=n.hashTypes?n.hashTypes[e]:void 0)}),i?void h.helpers.view.helperFunction.call(this,[d],u,o,h):s.Handlebars.helpers.view.call(this,d,o)}var s=e["default"],i=!!s.HTMLBars,a=n;i&&(a={isHTMLBars:!0,helperFunction:n,preprocessArguments:function(){}}),t["default"]=a}),define("dummy/helpers/with-apply",["ember","exports"],function(e,t){"use strict";function n(){var e,t,n,a;i?(e=arguments[1],t=arguments[2],n=arguments[3],a=this):(t=arguments[0],e=t.hash,a=t.data.view);var o=a.get("liquidWithParent"),r=o.get("originalArgs").slice();return r[0]="lwith-view.boundContext",t=s.copy(t),a._keywords||(a._keywords={}),a._keywords["lwith-view"]=a,i||(t.data.keywords||(t.data.keywords={}),t.data.keywords["lwith-view"]=a),i?t.template=o.get("innerTemplate"):t.fn=o.get("innerTemplate"),e=o.get("originalHash"),t.hashTypes=o.get("originalHashTypes"),i?void n.helpers["with"].helperFunction.call(this,[a.getStream(r[0])],e,t,n):(t.hash=e,r.push(t),s.Handlebars.helpers["with"].apply(this,r))}var s=e["default"],i=!!s.HTMLBars,a=n;s.HTMLBars&&(a={isHTMLBars:!0,helperFunction:n,preprocessArguments:function(){}}),t["default"]=a}),define("dummy/initializers/compat",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]={name:"liquid-fire-docs",initialize:function(e){e.lookupFactory("view:select")||e.register("view:select",n.Select)}}}),define("dummy/initializers/export-application-global",["ember","dummy/config/environment","exports"],function(e,t,n){"use strict";function s(e,t){var n=i.String.classify(a.modulePrefix);a.exportApplicationGlobal&&(window[n]=t)}var i=e["default"],a=t["default"];n.initialize=s,n["default"]={name:"export-application-global",initialize:s}}),define("dummy/initializers/liquid-fire",["liquid-fire","ember","exports"],function(e,t,n){"use strict";var s=e.initialize,i=t["default"];n["default"]={name:"liquid-fire",initialize:function(e){if(i.$.Velocity){var t=i.$.Velocity.version,n=[0,11,8];1===i.compare(n,[t.major,t.minor,t.patch])&&i.warn("You should probably upgrade Velocity.js, recommended minimum is "+n.join("."))}else i.warn("Velocity.js is missing");s(e)}}}),define("dummy/mixins/reset-scroll",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Mixin.create({activate:function(){this._super(),window.scrollTo(0,0)}})}),define("dummy/router",["ember","dummy/config/environment","exports"],function(e,t,n){"use strict";var s=e["default"],i=t["default"],a=s.Router.extend({location:i.locationType});a.map(function(){this.resource("helpers-documentation",{path:"helpers"},function(){this.route("liquid-outlet",function(){this.route("other")}),this.route("liquid-with",function(){this.route("page",{path:"/:id"})}),this.route("liquid-bind"),this.route("liquid-if")}),this.resource("transition-map",function(){this.route("route-constraints"),this.route("model-constraints"),this.route("dom-constraints"),this.route("choosing-transitions")}),this.resource("transitions",function(){this.route("predefined"),this.route("defining"),this.route("primitives",function(){this.route("two"),this.route("three")})}),this.resource("modal-documentation",{path:"modals"},function(){this.route("modal"),this.route("component"),this.modal("hello-modal",{withParams:["salutation","person"],otherParams:{modalMessage:"message"},actions:{changeSalutation:"changeSalutation"}})}),this.modal("warning-popup",{withParams:"warn"}),this.resource("scenarios",function(){this.route("inline"),this.route("inline-serial"),this.route("empty-if"),this.route("growable-with"),this.route("growable-flexboxes"),this.route("nested-outlets",function(){this.route("middle",function(){this.route("inner"),this.route("inner2")}),this.route("middle2")}),this.route("table-row"),this.route("remapped-modal"),this.modal("hello-modal",{withParams:{testSalutation:"salutation",testPerson:"person"}})})}),n["default"]=a}),define("dummy/routes/helpers-documentation",["ember","dummy/mixins/reset-scroll","exports"],function(e,t,n){"use strict";var s=e["default"],i=t["default"];n["default"]=s.Route.extend(i)}),define("dummy/routes/helpers-documentation/liquid-bind",["ember","dummy/mixins/reset-scroll","exports"],function(e,t,n){"use strict";var s=e["default"],i=t["default"];n["default"]=s.Route.extend(i)}),define("dummy/routes/helpers-documentation/liquid-if",["ember","dummy/mixins/reset-scroll","exports"],function(e,t,n){"use strict";var s=e["default"],i=t["default"];n["default"]=s.Route.extend(i)}),define("dummy/routes/helpers-documentation/liquid-outlet",["ember","dummy/mixins/reset-scroll","exports"],function(e,t,n){"use strict";var s=e["default"],i=t["default"];n["default"]=s.Route.extend(i)}),define("dummy/routes/helpers-documentation/liquid-with",["ember","dummy/mixins/reset-scroll","exports"],function(e,t,n){"use strict";
var s=e["default"],i=t["default"];n["default"]=s.Route.extend(i)}),define("dummy/routes/helpers-documentation/liquid-with/index",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Route.extend({beforeModel:function(){this.transitionTo("helpers-documentation.liquid-with.page",1)}})}),define("dummy/routes/helpers-documentation/liquid-with/page",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Route.extend({model:function(e){return n.Object.create({id:parseInt(e.id)})}})}),define("dummy/routes/index",["ember","dummy/mixins/reset-scroll","exports"],function(e,t,n){"use strict";var s=e["default"],i=t["default"];n["default"]=s.Route.extend(i)}),define("dummy/routes/modal-documentation/component",["ember","dummy/mixins/reset-scroll","exports"],function(e,t,n){"use strict";var s=e["default"],i=t["default"];n["default"]=s.Route.extend(i)}),define("dummy/routes/modal-documentation/index",["ember","dummy/mixins/reset-scroll","exports"],function(e,t,n){"use strict";var s=e["default"],i=t["default"];n["default"]=s.Route.extend(i,{actions:{changeSalutation:function(){var e=this.controllerFor("modal-documentation"),t=e.get("salutation"),n="Guten tag"===t?"Hello":"Guten tag";e.set("salutation",n)}}})}),define("dummy/routes/modal-documentation/modal",["ember","dummy/mixins/reset-scroll","exports"],function(e,t,n){"use strict";var s=e["default"],i=t["default"];n["default"]=s.Route.extend(i)}),define("dummy/routes/transition-map/choosing-transitions",["ember","dummy/mixins/reset-scroll","exports"],function(e,t,n){"use strict";var s=e["default"],i=t["default"];n["default"]=s.Route.extend(i)}),define("dummy/routes/transition-map/dom-constraints",["ember","dummy/mixins/reset-scroll","exports"],function(e,t,n){"use strict";var s=e["default"],i=t["default"];n["default"]=s.Route.extend(i)}),define("dummy/routes/transition-map/model-constraints",["ember","dummy/mixins/reset-scroll","exports"],function(e,t,n){"use strict";var s=e["default"],i=t["default"];n["default"]=s.Route.extend(i)}),define("dummy/routes/transition-map/route-constraints",["ember","dummy/mixins/reset-scroll","exports"],function(e,t,n){"use strict";var s=e["default"],i=t["default"];n["default"]=s.Route.extend(i)}),define("dummy/routes/transitions/defining",["ember","dummy/mixins/reset-scroll","exports"],function(e,t,n){"use strict";var s=e["default"],i=t["default"];n["default"]=s.Route.extend(i)}),define("dummy/routes/transitions/primitives",["ember","dummy/mixins/reset-scroll","exports"],function(e,t,n){"use strict";var s=e["default"],i=t["default"];n["default"]=s.Route.extend(i)}),define("dummy/templates/application",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){function o(e,t){var n,i="";return t.buffer.push("\n      <li>\n        "),n=s["if"].call(e,"entry.route",{hash:{},hashTypes:{},hashContexts:{},inverse:x.program(5,h,t),fn:x.program(2,r,t),contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n\n        "),n=s["if"].call(e,"entry.children",{hash:{},hashTypes:{},hashContexts:{},inverse:x.noop,fn:x.program(7,u,t),contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n      </li>\n      "),i}function r(e,t){var n,i,a,o="";return t.buffer.push("\n          "),i=s["link-to"]||e&&e["link-to"],a={hash:{},hashTypes:{},hashContexts:{},inverse:x.noop,fn:x.program(3,l,t),contexts:[e],types:["ID"],data:t},n=i?i.call(e,"entry.route",a):v.call(e,"link-to","entry.route",a),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n        "),o}function l(e,t){var n;n=s._triageMustache.call(e,"entry.title",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),t.buffer.push(n||0===n?n:"")}function h(e,t){var n,i="";return t.buffer.push("\n          "),n=s._triageMustache.call(e,"entry.title",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n        "),i}function u(e,t){var n,i="";return t.buffer.push("\n          <ul>\n          "),n=s.each.call(e,"child","in","entry.children",{hash:{},hashTypes:{},hashContexts:{},inverse:x.noop,fn:x.program(8,d,t),contexts:[e,e,e],types:["ID","ID","ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n          </ul>\n        "),i}function d(e,t){var n,i="";return t.buffer.push("\n            <li>\n              "),n=s["if"].call(e,"child.route",{hash:{},hashTypes:{},hashContexts:{},inverse:x.program(12,f,t),fn:x.program(9,c,t),contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n            </li>\n          "),i}function c(e,t){var n,i,a,o="";return t.buffer.push("\n                "),i=s["link-to"]||e&&e["link-to"],a={hash:{},hashTypes:{},hashContexts:{},inverse:x.noop,fn:x.program(10,p,t),contexts:[e],types:["ID"],data:t},n=i?i.call(e,"child.route",a):v.call(e,"link-to","child.route",a),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n              "),o}function p(e,t){var n;n=s._triageMustache.call(e,"child.title",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),t.buffer.push(n||0===n?n:"")}function f(e,t){var n,i="";return t.buffer.push("\n                "),n=s._triageMustache.call(e,"child",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n              "),i}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{};var m,b,y,g="",x=this,v=s.helperMissing,w=this.escapeExpression;return m=s._triageMustache.call(t,"liquid-modal",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:a}),(m||0===m)&&a.buffer.push(m),a.buffer.push('\n\n<div class="header">\n  <div class="container">\n    <div class="row">\n      <div class="col-xs-6">Liquid Fire</div>\n      <div class="col-xs-6 mark-holder">\n        <a href="https://github.com/ef4/liquid-fire">\n          <img src="GitHub-Mark-Light-32px-aa8455ab6817de2b70a085b6d7e407f6.png">\n        </a>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class="container main">\n  <div>\n    <div class="content">\n      <div class="clearfix">\n        '),a.buffer.push(w((b=s["nav-link"]||t&&t["nav-link"],y={hash:{topic:"prevTopic",direction:"back"},hashTypes:{topic:"ID",direction:"STRING"},hashContexts:{topic:t,direction:t},contexts:[],types:[],data:a},b?b.call(t,y):v.call(t,"nav-link",y)))),a.buffer.push("\n        "),a.buffer.push(w((b=s["nav-link"]||t&&t["nav-link"],y={hash:{topic:"nextTopic",direction:"forward"},hashTypes:{topic:"ID",direction:"STRING"},hashContexts:{topic:t,direction:t},contexts:[],types:[],data:a},b?b.call(t,y):v.call(t,"nav-link",y)))),a.buffer.push("\n      </div>\n      "),m=s._triageMustache.call(t,"outlet",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:a}),(m||0===m)&&a.buffer.push(m),a.buffer.push('\n      <div class="clearfix">\n        '),a.buffer.push(w((b=s["nav-link"]||t&&t["nav-link"],y={hash:{topic:"prevTopic",direction:"back"},hashTypes:{topic:"ID",direction:"STRING"},hashContexts:{topic:t,direction:t},contexts:[],types:[],data:a},b?b.call(t,y):v.call(t,"nav-link",y)))),a.buffer.push("\n        "),a.buffer.push(w((b=s["nav-link"]||t&&t["nav-link"],y={hash:{topic:"nextTopic",direction:"forward"},hashTypes:{topic:"ID",direction:"STRING"},hashContexts:{topic:t,direction:t},contexts:[],types:[],data:a},b?b.call(t,y):v.call(t,"nav-link",y)))),a.buffer.push("\n      </div>\n    </div>\n\n    <ul>\n      "),m=s.each.call(t,"entry","in","tableOfContents",{hash:{},hashTypes:{},hashContexts:{},inverse:x.noop,fn:x.program(1,o,a),contexts:[t,t,t],types:["ID","ID","ID"],data:a}),(m||0===m)&&a.buffer.push(m),a.buffer.push("\n    </ul>\n  </div>\n</div>\n\n\n"),g})}),define("dummy/templates/components/code-snippet",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{};var o,r="";return o=s._triageMustache.call(t,"source",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:a}),(o||0===o)&&a.buffer.push(o),a.buffer.push("\n"),r})}),define("dummy/templates/components/hello-modal",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{};var o,r,l,h="",u=s.helperMissing,d=this.escapeExpression;return a.buffer.push("\n<div>"),o=s._triageMustache.call(t,"salutation",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:a}),(o||0===o)&&a.buffer.push(o),a.buffer.push(" "),o=s._triageMustache.call(t,"person",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:a}),(o||0===o)&&a.buffer.push(o),a.buffer.push("!</div>\n<div>"),a.buffer.push(d((r=s.input||t&&t.input,l={hash:{value:"message","class":"modal-input"},hashTypes:{value:"ID","class":"STRING"},hashContexts:{value:t,"class":t},contexts:[],types:[],data:a},r?r.call(t,l):u.call(t,"input",l)))),a.buffer.push("</div>\n<button "),a.buffer.push(d(s.action.call(t,"gotIt",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["STRING"],data:a}))),a.buffer.push(' class="done">Thanks</button>\n<button '),a.buffer.push(d(s.action.call(t,"change",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["STRING"],data:a}))),a.buffer.push(' class="change">Change</button>\n\n'),h})}),define("dummy/templates/components/liquid-modal",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){function o(e,t){var n,i,a,o="";return t.buffer.push("\n  "),i=s["lm-container"]||e&&e["lm-container"],a={hash:{action:"escape"},hashTypes:{action:"STRING"},hashContexts:{action:e},inverse:f.noop,fn:f.program(2,r,t),contexts:[],types:[],data:t},n=i?i.call(e,a):p.call(e,"lm-container",a),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n"),o}function r(e,t){var n,i,a="";return t.buffer.push("\n    <div "),t.buffer.push(c(s["bind-attr"].call(e,{hash:{"class":":lf-dialog cc.options.dialogClass"},hashTypes:{"class":"STRING"},hashContexts:{"class":e},contexts:[],types:[],data:t}))),t.buffer.push(' role="dialog" '),t.buffer.push(c(s["bind-attr"].call(e,{hash:{"aria-labelledby":"cc.options.ariaLabelledBy","aria-label":"cc.options.ariaLabel"},hashTypes:{"aria-labelledby":"STRING","aria-label":"STRING"},hashContexts:{"aria-labelledby":e,"aria-label":e},contexts:[],types:[],data:t}))),t.buffer.push(">\n      "),t.buffer.push(c(s.view.call(e,"innerView",{hash:{dismiss:"dismiss"},hashTypes:{dismiss:"STRING"},hashContexts:{dismiss:e},contexts:[e],types:["ID"],data:t}))),t.buffer.push("\n    </div>\n    "),t.buffer.push(c((n=s["lf-overlay"]||e&&e["lf-overlay"],i={hash:{clickAway:"outsideClick"},hashTypes:{clickAway:"STRING"},hashContexts:{clickAway:e},contexts:[],types:[],data:t},n?n.call(e,i):p.call(e,"lf-overlay",i)))),t.buffer.push("\n  "),a}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{};var l,h,u,d="",c=this.escapeExpression,p=s.helperMissing,f=this;return h=s["liquid-with"]||t&&t["liquid-with"],u={hash:{"class":"lm-with",containerless:!0},hashTypes:{"class":"STRING",containerless:"BOOLEAN"},hashContexts:{"class":t,containerless:t},inverse:f.noop,fn:f.program(1,o,a),contexts:[t,t,t],types:["ID","ID","ID"],data:a},l=h?h.call(t,"currentContext","as","cc",u):p.call(t,"liquid-with","currentContext","as","cc",u),(l||0===l)&&a.buffer.push(l),a.buffer.push("\n"),d})}),define("dummy/templates/components/nav-link",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){function o(e,t){var n,i="";return t.buffer.push("\n  "),n=s["if"].call(e,"topic.route",{hash:{},hashTypes:{},hashContexts:{},inverse:x.program(8,d,t),fn:x.program(2,r,t),contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n"),i}function r(e,t){var n,i,a,o="";return t.buffer.push("\n    "),i=s["link-to"]||e&&e["link-to"],a={hash:{},hashTypes:{},hashContexts:{},inverse:x.noop,fn:x.program(3,l,t),contexts:[e],types:["ID"],data:t},n=i?i.call(e,"topic.route",a):v.call(e,"link-to","topic.route",a),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n  "),o}function l(e,t){var n,i="";return t.buffer.push("\n      "),n=s["if"].call(e,"preGlyphicon",{hash:{},hashTypes:{},hashContexts:{},inverse:x.noop,fn:x.program(4,h,t),contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n      "),n=s._triageMustache.call(e,"topic.title",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n      "),n=s["if"].call(e,"postGlyphicon",{hash:{},hashTypes:{},hashContexts:{},inverse:x.noop,fn:x.program(6,u,t),contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n    "),i}function h(e,t){var n="";return t.buffer.push("\n        <div "),t.buffer.push(g(s["bind-attr"].call(e,{hash:{"class":":glyphicon preGlyphicon"},hashTypes:{"class":"STRING"},hashContexts:{"class":e},contexts:[],types:[],data:t}))),t.buffer.push("></div>\n      "),n}function u(e,t){var n="";return t.buffer.push("\n        <div "),t.buffer.push(g(s["bind-attr"].call(e,{hash:{"class":":glyphicon postGlyphicon"},hashTypes:{"class":"STRING"},hashContexts:{"class":e},contexts:[],types:[],data:t}))),t.buffer.push("></div>\n      "),n}function d(e,t){var n,i="";return t.buffer.push("\n    "),n=s["if"].call(e,"preGlyphicon",{hash:{},hashTypes:{},hashContexts:{},inverse:x.noop,fn:x.program(9,c,t),contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n    "),n=s["if"].call(e,"topic.title",{hash:{},hashTypes:{},hashContexts:{},inverse:x.program(13,f,t),fn:x.program(11,p,t),contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n    "),n=s["if"].call(e,"postGlyphicon",{hash:{},hashTypes:{},hashContexts:{},inverse:x.noop,fn:x.program(15,m,t),contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n  "),i}function c(e,t){var n="";return t.buffer.push("\n      <div "),t.buffer.push(g(s["bind-attr"].call(e,{hash:{"class":":glyphicon preGlyphicon"},hashTypes:{"class":"STRING"},hashContexts:{"class":e},contexts:[],types:[],data:t}))),t.buffer.push("></div>\n    "),n}function p(e,t){var n;n=s._triageMustache.call(e,"topic.title",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),t.buffer.push(n||0===n?n:"")}function f(e,t){var n;n=s._triageMustache.call(e,"topic",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),t.buffer.push(n||0===n?n:"")}function m(e,t){var n="";return t.buffer.push("\n      <div "),t.buffer.push(g(s["bind-attr"].call(e,{hash:{"class":":glyphicon postGlyphicon"},hashTypes:{"class":"STRING"},hashContexts:{"class":e},contexts:[],types:[],data:t}))),t.buffer.push("></div>\n    "),n}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{};var b,y="",g=this.escapeExpression,x=this,v=s.helperMissing;return b=s["if"].call(t,"topic",{hash:{},hashTypes:{},hashContexts:{},inverse:x.noop,fn:x.program(1,o,a),contexts:[t],types:["ID"],data:a}),(b||0===b)&&a.buffer.push(b),a.buffer.push("\n\n"),y})}),define("dummy/templates/components/warning-popup",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{},a.buffer.push('<p id="warn-popup">Warning! This simulates a scary warning. Boo!</p>\n\n<p>This modal is scoped to the whole application, so you can\nstick <pre>?warn=1</pre> on the end of the URL to bring it up from any\npage.</p>\n\n<i>Dismiss by clicking outside the popup, or hitting the escape key, or the back button.</i>\n')})}),define("dummy/templates/helpers-documentation/index",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){function o(e,t){t.buffer.push("{{#liquid-outlet}}")}function r(e,t){t.buffer.push("{{#liquid-with}}")}function l(e,t){t.buffer.push("{{#liquid-bind}}")}function h(e,t){t.buffer.push("{{#liquid-if}}")}function u(e,t){t.buffer.push("transition map")}function d(e,t){t.buffer.push("transition")}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{};var c,p,f,m="",b=this,y=s.helperMissing;return a.buffer.push('<h2>Template Helpers</h2>\n\n<dl class="dl-horizontal">\n  <dt>'),p=s["link-to"]||t&&t["link-to"],f={hash:{},hashTypes:{},hashContexts:{},inverse:b.noop,fn:b.program(1,o,a),contexts:[t],types:["STRING"],data:a},c=p?p.call(t,"helpers-documentation.liquid-outlet",f):y.call(t,"link-to","helpers-documentation.liquid-outlet",f),(c||0===c)&&a.buffer.push(c),a.buffer.push("</dt>\n  <dd>Transitions between routes.</dd>\n\n  <dt>"),p=s["link-to"]||t&&t["link-to"],f={hash:{},hashTypes:{},hashContexts:{},inverse:b.noop,fn:b.program(3,r,a),contexts:[t],types:["STRING"],data:a},c=p?p.call(t,"helpers-documentation.liquid-with",f):y.call(t,"link-to","helpers-documentation.liquid-with",f),(c||0===c)&&a.buffer.push(c),a.buffer.push("</dt>\n  <dd>Transitions between models or contexts within a single route.</dd>\n\n  <dt>"),p=s["link-to"]||t&&t["link-to"],f={hash:{},hashTypes:{},hashContexts:{},inverse:b.noop,fn:b.program(5,l,a),contexts:[t],types:["STRING"],data:a},c=p?p.call(t,"helpers-documentation.liquid-bind",f):y.call(t,"link-to","helpers-documentation.liquid-bind",f),(c||0===c)&&a.buffer.push(c),a.buffer.push("</dt>\n  <dd>Updates to simple bound values.</dd>\n\n  <dt>"),p=s["link-to"]||t&&t["link-to"],f={hash:{},hashTypes:{},hashContexts:{},inverse:b.noop,fn:b.program(7,h,a),contexts:[t],types:["STRING"],data:a},c=p?p.call(t,"helpers-documentation.liquid-if",f):y.call(t,"link-to","helpers-documentation.liquid-if",f),(c||0===c)&&a.buffer.push(c),a.buffer.push('</dt>\n  <dd>Switching between true and false branches in an #if statement.</dd>\n\n</dl>\n\n<h3>Common Behavior and Options</h3>\n\n<p>All of the above helpers share some core behaviors and\noptions:</p>\n\n<ul>\n  <li>Each helper is a semantic drop-in replacement for the\n  corresponding normal Ember helper.</li>\n\n  <li><em>Except</em> they generate DOM elements: \n    <ul>\n      <li> a <code>&lt;div class="liquid-container"&gt;</code> to\n        serve as a container for animations. It\n        is <code>position:relative</code> by default.</li>\n\n      <li>a <code>&lt;div class="liquid-child"&gt;</code> to wrap the\n        content and serve as a target for\n        animations.</li>\n    </ul>\n  </li>\n\n  <li>Whenever bound data updates, the helper consults the '),p=s["link-to"]||t&&t["link-to"],f={hash:{},hashTypes:{},hashContexts:{},inverse:b.noop,fn:b.program(9,u,a),contexts:[t],types:["STRING"],data:a},c=p?p.call(t,"transition-map",f):y.call(t,"link-to","transition-map",f),(c||0===c)&&a.buffer.push(c),a.buffer.push(" and decides whether to\n  animate the transition.</li>\n\n  <li>While animating, the <code>liquid-container</code> will\n  contain <code>liquid-children</code> for both the outgoing and\n  incoming states (or possibly even more, if transitions interrupt\n  each other), and the "),p=s["link-to"]||t&&t["link-to"],f={hash:{},hashTypes:{},hashContexts:{},inverse:b.noop,fn:b.program(11,d,a),contexts:[t],types:["STRING"],data:a},c=p?p.call(t,"transitions",f):y.call(t,"link-to","transitions",f),(c||0===c)&&a.buffer.push(c),a.buffer.push(" has full control over\n  animating them.</li>\n\n  <li>The <code>liquid-container</code> can animate it's own height\n  and width to smoothly match the size difference between its old and\n  new content.</li>\n\n  <li>liquid-fire makes your content absolutely positioned <em>only\n  while needed</em> for running animations, and deals with holding\n  your place in the normal document flow. This greatly simplifies the\n  problem of designing animation-friendly layouts.</li>\n\n</ul>\n\n<h4>Options</h4>\n\n<dl>\n  <dt>class</dt>\n  <dd>You can pass both static and bound class names in the normal\n  Ember way. They will apply to the <code>liquid-container</code>\n  element.</dd>\n\n  <dt>use</dt>\n  <dd>Lets you provide a transition name directly\n    (example: <code>use=\"crossFade\"</code>), skipping the transition\n    map. This is useful for the simplest cases in which you don't care\n    about context at all and always want to use the same\n    animation. The <code>use</code> will match all transitions except\n    the initial render. For more control, use the "),p=s["link-to"]||t&&t["link-to"],f={hash:{},hashTypes:{},hashContexts:{},inverse:b.noop,fn:b.program(9,u,a),contexts:[t],types:["STRING"],data:a},c=p?p.call(t,"transition-map",f):y.call(t,"link-to","transition-map",f),(c||0===c)&&a.buffer.push(c),a.buffer.push(".\n  </dd>\n\n  <dt>growDuration</dt>\n  <dd>\n    The maximum amount of time to spend growing. For small changes, we\n    may spend less than this time depending on\n    growPixelsPerSecond. Defaults to 250 milliseconds.\n  </dd>\n\n  <dt>growPixelsPerSecond</dt>\n  <dd>\n    The minimum speed in at which we will grow. Defaults to 200 pixels\n    per second. This lets us make small size adjustments in times\n    shorter than a full growDuration.\n  </dd>\n\n  <dt>growEasing</dt>\n  <dd>A Velocity <a href=\"http://julian.com/research/velocity/#easing\">easing\n  function</a> to use when growing the container height and\n  width. Defaults to <code>'slide'</code>.</dd>\n\n  <dt>enableGrowth</dt>\n  <dd>Whether the container should animate its own height and width\n  changes. Defaults to <code>true</code>.</dd>\n\n\n</dl>\n"),m})}),define("dummy/templates/helpers-documentation/liquid-bind",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){function o(e,t){t.buffer.push("Common Behavior and\nOptions")}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{};var r,l,h,u="",d=this,c=s.helperMissing,p=this.escapeExpression;return a.buffer.push("<h2>{{liquid-bind}}</h2>\n\n<p>Renders a bound value into your template, and uses the transition\nmap to decide how to animate when the bound value changes.</p>\n\n<p>Saying <code>{{liquid-bind someValue}}</code> is a drop-in\nreplacement for <code>{{someValue}}</code>, except this wraps the\ncontent in markup so that it can be targeted for animation. See the\n"),l=s["link-to"]||t&&t["link-to"],h={hash:{},hashTypes:{},hashContexts:{},inverse:d.noop,fn:d.program(1,o,a),contexts:[t],types:["STRING"],data:a},r=l?l.call(t,"helpers-documentation.index",h):c.call(t,"link-to","helpers-documentation.index",h),(r||0===r)&&a.buffer.push(r),a.buffer.push(' that apply to all liquid-fire helpers.</p>\n\n<h3 id="force-tick" '),a.buffer.push(p(s.action.call(t,"forceTick",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["STRING"],data:a}))),a.buffer.push('>Demo</h3>\n\n\n<div id="liquid-bind-demo">\n  '),a.buffer.push(p((l=s["liquid-bind"]||t&&t["liquid-bind"],h={hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:a},l?l.call(t,"hours",h):c.call(t,"liquid-bind","hours",h)))),a.buffer.push(":"),a.buffer.push(p((l=s["liquid-bind"]||t&&t["liquid-bind"],h={hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:a},l?l.call(t,"minutes",h):c.call(t,"liquid-bind","minutes",h)))),a.buffer.push(":"),a.buffer.push(p((l=s["liquid-bind"]||t&&t["liquid-bind"],h={hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:a},l?l.call(t,"seconds",h):c.call(t,"liquid-bind","seconds",h)))),a.buffer.push("\n</div>\n\n\n"),a.buffer.push(p((l=s["code-snippet"]||t&&t["code-snippet"],h={hash:{name:"liquid-bind-demo.hbs"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},l?l.call(t,h):c.call(t,"code-snippet",h)))),a.buffer.push("\n\n"),a.buffer.push(p((l=s["code-snippet"]||t&&t["code-snippet"],h={hash:{name:"bind-demo-transition.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},l?l.call(t,h):c.call(t,"code-snippet",h)))),a.buffer.push("\n\n"),a.buffer.push(p((l=s["code-snippet"]||t&&t["code-snippet"],h={hash:{name:"bind-demo-style.css"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},l?l.call(t,h):c.call(t,"code-snippet",h)))),a.buffer.push("\n"),u})}),define("dummy/templates/helpers-documentation/liquid-if",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){function o(e,t){t.buffer.push("Common\n    Behavior and Options")}function r(e,t){var n,i,a="";return t.buffer.push("\n    <label>\n      Would you like a helmet? "),t.buffer.push(f((n=s.input||e&&e.input,i={hash:{type:"checkbox",checked:"helmet"},hashTypes:{type:"STRING",checked:"STRING"},hashContexts:{type:e,checked:e},contexts:[],types:[],data:t},n?n.call(e,i):p.call(e,"input",i)))),t.buffer.push("\n    </label>\n  "),a}function l(e,t){var n,i,a="";return t.buffer.push("\n    <label>License Number</label>\n    "),t.buffer.push(f((n=s.input||e&&e.input,i={hash:{type:"text",value:"license"},hashTypes:{type:"STRING",value:"ID"},hashContexts:{type:e,value:e},contexts:[],types:[],data:t},n?n.call(e,i):p.call(e,"input",i)))),t.buffer.push("\n    <label>License State</label>\n    "),t.buffer.push(f(s.view.call(e,"select",{hash:{value:"state",content:"states"},hashTypes:{value:"ID",content:"ID"},hashContexts:{value:e,content:e},contexts:[e],types:["STRING"],data:t}))),t.buffer.push("\n  "),a}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{};var h,u,d,c="",p=s.helperMissing,f=this.escapeExpression,m=this;return a.buffer.push("<h2>{{#liquid-if}}</h2>\n\n<p><code>{{#liquid-if}}</code> is a replacement for Ember's\nnormal <code>{{#if}}</code>, except it:</p>\n\n<ul>\n  <li>respects the transition map so you can animate changes between its <code>true</code>\nand <code>false</code> states.</li>\n  <li>wraps its content in markup to facilitate animation. See the "),u=s["link-to"]||t&&t["link-to"],d={hash:{},hashTypes:{},hashContexts:{},inverse:m.noop,fn:m.program(1,o,a),contexts:[t],types:["STRING"],data:a},h=u?u.call(t,"helpers-documentation.index",d):p.call(t,"link-to","helpers-documentation.index",d),(h||0===h)&&a.buffer.push(h),a.buffer.push(" that apply to all liquid-fire\n    helpers.</li>\n</ul>\n\n<p><code>{{#liquid-unless}}</code> is the complement to\n<code>{{#liquid-if}}</code>.</p>\n\n<h3>Demo</h3>\n\n<p>Here's a bit of a silly example that shows off the flexibility of\nthe transition rules.</p>\n\n\n<div id=\"liquid-box-demo\">\n  <label>I'm renting a </label>\n  "),a.buffer.push(f(s.view.call(t,"select",{hash:{value:"vehicle",content:"vehicles"},hashTypes:{value:"ID",content:"ID"},hashContexts:{value:t,content:t},contexts:[t],types:["STRING"],data:a}))),a.buffer.push("\n\n  "),u=s["liquid-if"]||t&&t["liquid-if"],d={hash:{"class":"vehicles"},hashTypes:{"class":"STRING"},hashContexts:{"class":t},inverse:m.program(5,l,a),fn:m.program(3,r,a),contexts:[t],types:["ID"],data:a},h=u?u.call(t,"isBike",d):p.call(t,"liquid-if","isBike",d),(h||0===h)&&a.buffer.push(h),a.buffer.push('\n\n  <button type="button" class="btn btn-success">Yay, let\'s go!</button>\n</div>\n\n\n'),a.buffer.push(f((u=s["code-snippet"]||t&&t["code-snippet"],d={hash:{name:"liquid-box-demo.hbs"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},u?u.call(t,d):p.call(t,"code-snippet",d)))),a.buffer.push("\n\n"),a.buffer.push(f((u=s["code-snippet"]||t&&t["code-snippet"],d={hash:{name:"liquid-box-demo-transition.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},u?u.call(t,d):p.call(t,"code-snippet",d)))),a.buffer.push("\n"),c})}),define("dummy/templates/helpers-documentation/liquid-outlet",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){function o(e,t){t.buffer.push("Common\n    Behavior and Options")}function r(e,t){t.buffer.push("{{#liquid-with}}")}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{};var l,h,u,d="",c=this,p=s.helperMissing,f=this.escapeExpression;return a.buffer.push("<h2>{{liquid-outlet}}</h2>\n\n<p>Acts just like a normal Ember <code>{{outlet}}</code>, except:</p>\n\n<ul>\n  <li>it respects the transition map and lets you animate between routes.</li>\n  <li>it wraps its content in a non-virtual view, meaning that it adds\n    markup. See the "),h=s["link-to"]||t&&t["link-to"],u={hash:{},hashTypes:{},hashContexts:{},inverse:c.noop,fn:c.program(1,o,a),contexts:[t],types:["STRING"],data:a},l=h?h.call(t,"helpers-documentation.index",u):p.call(t,"link-to","helpers-documentation.index",u),(l||0===l)&&a.buffer.push(l),a.buffer.push(' that apply to all liquid-fire\n    helpers.</li>\n  <li>it does not support the <code>view</code> option to override its view class.</li>\n</ul>\n\n<p>It otherwise does everything <code>{{outlet}}</code> does,\nincluding named outlets (like <code>{{liquid-outlet "sidebar"}}</code>).</p>\n\n<h3>When to use it</h3>\n\n<p>Use this when you want to animate the transitions between\nroutes.</p>\n\n<div class="callout callout-danger">This won\'t let you animate between\ntwo different models on the same route, because outlets are not\ninvolved in that process. Instead, see '),h=s["link-to"]||t&&t["link-to"],u={hash:{},hashTypes:{},hashContexts:{},inverse:c.noop,fn:c.program(3,r,a),contexts:[t],types:["STRING"],data:a},l=h?h.call(t,"helpers-documentation.liquid-with",u):p.call(t,"link-to","helpers-documentation.liquid-with",u),(l||0===l)&&a.buffer.push(l),a.buffer.push(".</div>\n\n<h3>Demo</h3>\n\n<p>Notice that the URL changes when you click the links &mdash; these are real route transitions.</p>\n\n\n"),a.buffer.push(f((h=s["liquid-outlet"]||t&&t["liquid-outlet"],u={hash:{"class":"demo-container"},hashTypes:{"class":"STRING"},hashContexts:{"class":t},contexts:[],types:[],data:a},h?h.call(t,u):p.call(t,"liquid-outlet",u)))),a.buffer.push("\n\n\n<h4>Demo template:</h4>\n\n"),a.buffer.push(f((h=s["code-snippet"]||t&&t["code-snippet"],u={hash:{name:"outlet.hbs"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},h?h.call(t,u):p.call(t,"code-snippet",u)))),a.buffer.push("\n\n<h4>Demo transition map:</h4>\n\n"),a.buffer.push(f((h=s["code-snippet"]||t&&t["code-snippet"],u={hash:{name:"transition-demo.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},h?h.call(t,u):p.call(t,"code-snippet",u)))),a.buffer.push("\n\n"),d})}),define("dummy/templates/helpers-documentation/liquid-outlet/index",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){function o(e,t){t.buffer.push("Click me!")}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{};var r,l,h,u="",d=this,c=s.helperMissing;return l=s["link-to"]||t&&t["link-to"],h={hash:{},hashTypes:{},hashContexts:{},inverse:d.noop,fn:d.program(1,o,a),contexts:[t],types:["STRING"],data:a},r=l?l.call(t,"helpers-documentation.liquid-outlet.other",h):c.call(t,"link-to","helpers-documentation.liquid-outlet.other",h),(r||0===r)&&a.buffer.push(r),a.buffer.push("\n"),u})}),define("dummy/templates/helpers-documentation/liquid-outlet/other",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){function o(e,t){t.buffer.push("Go back!")}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{};var r,l,h,u="",d=this,c=s.helperMissing;return l=s["link-to"]||t&&t["link-to"],h={hash:{},hashTypes:{},hashContexts:{},inverse:d.noop,fn:d.program(1,o,a),contexts:[t],types:["STRING"],data:a},r=l?l.call(t,"helpers-documentation.liquid-outlet.index",h):c.call(t,"link-to","helpers-documentation.liquid-outlet.index",h),(r||0===r)&&a.buffer.push(r),a.buffer.push("\n"),u})}),define("dummy/templates/helpers-documentation/liquid-with",["ember","exports"],function(e,t){"use strict";
var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{};var o,r="";return o=s._triageMustache.call(t,"outlet",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:a}),(o||0===o)&&a.buffer.push(o),a.buffer.push("\n"),r})}),define("dummy/templates/helpers-documentation/liquid-with/page",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){function o(e,t){t.buffer.push("Common\n    Behavior and Options")}function r(e,t){var n,i="";return t.buffer.push("\n  "),n=s._triageMustache.call(e,"currentModel.id",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n  <button "),t.buffer.push(c(s.action.call(e,"higher","currentModel",{hash:{},hashTypes:{},hashContexts:{},contexts:[e,e],types:["STRING","ID"],data:t}))),t.buffer.push(">Go</button>\n"),i}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{};var l,h,u,d="",c=this.escapeExpression,p=this,f=s.helperMissing;return a.buffer.push("<h2>{{#liquid-with}}</h2>\n\n<p>Acts just like a normal Ember <code>{{with}}</code>, except:</p>\n\n<ul>\n  <li>it respects the transition map and lets you animate between contexts.</li>\n  <li>it wraps its content in a non-virtual view, meaning that it adds\n    markup. See the "),h=s["link-to"]||t&&t["link-to"],u={hash:{},hashTypes:{},hashContexts:{},inverse:p.noop,fn:p.program(1,o,a),contexts:[t],types:["STRING"],data:a},l=h?h.call(t,"helpers-documentation.index",u):f.call(t,"link-to","helpers-documentation.index",u),(l||0===l)&&a.buffer.push(l),a.buffer.push(" that apply to all liquid-fire\n    helpers.</li>\n</ul>\n\n<p>This helper will grab whatever context you pass it, and when that\ncontext changes, the helper will hold on to a copy of the old value\nlong enough to gracefully transition away.</p>\n\n<p>Binding to a singleton controller's <code>model</code> works great,\nbecause future changes to the model will be captured and\nanimated. Binding directly to a singleton controller won't animate\nbecause the controller never changes. If you need a controller inside\nthe <code>{{#liquid-with}}</code>, it's best to instantiate one\nexplicitly with the <code>controller</code> option, so that a fresh\ncontroller will be instantiated for each update to your bound\ncontext.</p>\n\n<h3>When to use it</h3>\n\n<p>Use this when you want to animate the transitions between\ndifferent models on the same route.</p>\n\n<div class=\"callout callout-danger\"><code>{{#liquid-with foo}}</code>\nis supported, but as of Ember 1.9 it is deprecated just like the\nnormal <code>{{#with foo}}</code>. Use <code>{{#liquid-with foo as bar}}</code> instead.</div>\n\n<h3>Demo</h3>\n\n<p>Notice that the ID being rendered maps correctly to the URL in both\ndirections.</p>\n\n\n\n"),h=s["liquid-with"]||t&&t["liquid-with"],u={hash:{use:"rotateBelow","class":"demo-container"},hashTypes:{use:"STRING","class":"STRING"},hashContexts:{use:t,"class":t},inverse:p.noop,fn:p.program(3,r,a),contexts:[t,t,t],types:["ID","ID","ID"],data:a},l=h?h.call(t,"model","as","currentModel",u):f.call(t,"liquid-with","model","as","currentModel",u),(l||0===l)&&a.buffer.push(l),a.buffer.push("\n\n\n\n<h4>Template</h4>\n\n"),a.buffer.push(c((h=s["code-snippet"]||t&&t["code-snippet"],u={hash:{name:"with-demo.hbs"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},h?h.call(t,u):f.call(t,"code-snippet",u)))),a.buffer.push("\n\n<h4>Transition Implementation</h4>\n\n<p>This appears in <code>app/transitions/rotate-below.js</code>:</p>\n\n"),a.buffer.push(c((h=s["code-snippet"]||t&&t["code-snippet"],u={hash:{name:"rotate-below.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},h?h.call(t,u):f.call(t,"code-snippet",u)))),a.buffer.push("\n"),d})}),define("dummy/templates/index",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){function o(e,t){t.buffer.push("Read more about Template\nHelpers.")}function r(e,t){t.buffer.push("Read more about the Transition\nMap.")}function l(e,t){t.buffer.push("Read more about\nTransitions.")}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{};var h,u,d,c="",p=this,f=s.helperMissing,m=this.escapeExpression;return a.buffer.push('<h2>Liquid Fire: Animations & Transitions for Ember Apps</h2>\n\n<p>Liquid Fire is a toolkit for managing animated transitions in an\nEmber application. Like Ember itself, our goal is to cultivate shared\nabstractions so we\'re free to focus on bigger and better\nideas. <em>Good defaults. Convention over configuration. Composable\npieces all the way down.</em></p>\n\n<h3>Getting Started</h3>\n\n<p>If you\'re using <a href="http://iamstef.net/ember-cli/">ember-cli</a>\n(and for any new project, you should!), you can install the\nliquid-fire addon with:</p>\n\n<pre>\n  npm install --save-dev liquid-fire\n</pre>\n\n<div class="callout callout-info">\n  If you\'re not using\n  ember-cli, <a href="https://github.com/ef4/liquid-fire/releases">grab\n  a prebuilt release</a>. You will also need to manually\n  add <a href="http://velocityjs.org">velocity.js</a> to your page.\n</div>\n\n<h4>Supported Ember Versions and Semver</h4>\n\n<p>liquid-fire is currently compatible with Ember 1.6.1 through\ncanary. As liquid-fire is still pre-1.0, you can expect breaking\nchanges, which will be described in\nthe <a href="https://github.com/ef4/liquid-fire/blob/master/CHANGELOG.md">CHANGELOG</a>.</p>\n\n<p>Ultimately, the goal is to hit a solid 1.0 API and then fall into\nstep with Ember\'s release cycle.</p>\n\n<h3>Key Ideas</h3>\n\n<p>Transitions need to be implemented within the view layer, but deciding\n<em>what kind</em> of transition to do at any given time is a\nhigher-level question, dependent on the relationships between\ndifferent routes and models.</p>\n\n<p>Therefore, we split the responsibility between three key pieces:\ntemplate helpers, the transition map, and transitions.</p>\n\n<h4>Template Helpers</h4>\n\n<p>The library provides helpers\nlike <code>{{liquid-outlet}}</code>, <code>{{liquid-with}}</code>,\netc, that are nearly drop-in replacements for the equivalent normal\nEmber helpers. The key difference is that they don\'t update instantly\nwhen bound data changes. Instead they consult your application\'s\ntransition map, and if they discover a matching transition, they give\nthe transition control over <em>both the old and new content</em>\nsimultaneously. '),u=s["link-to"]||t&&t["link-to"],d={hash:{},hashTypes:{},hashContexts:{},inverse:p.noop,fn:p.program(1,o,a),contexts:[t],types:["STRING"],data:a},h=u?u.call(t,"helpers-documentation.index",d):f.call(t,"link-to","helpers-documentation.index",d),(h||0===h)&&a.buffer.push(h),a.buffer.push("</p>\n\n<h4>Transition Map</h4>\n\n<p>The transition map is analogous to your normal Ember router\nmap. It's a single place to declaratively capture rules about how\nthe pieces of your application relate to each other. By convention,\nthe transition map goes in <code>app/transitions.js</code>, and it\nlooks something like this:</p>\n\n"),a.buffer.push(m((u=s["code-snippet"]||t&&t["code-snippet"],d={hash:{name:"simple-transition-map.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},u?u.call(t,d):f.call(t,"code-snippet",d)))),a.buffer.push('\n\n<div class="callout callout-info">\n  Old-school apps without a module resolver should pass their\n  transition map function to <code>LiquidFire.map</code>. <a href="https://github.com/ef4/liquid-fire/blob/master/example/prebuilt-example.html">There is an example here</a>.\n</div>\n\n<p>'),u=s["link-to"]||t&&t["link-to"],d={hash:{},hashTypes:{},hashContexts:{},inverse:p.noop,fn:p.program(3,r,a),contexts:[t],types:["STRING"],data:a},h=u?u.call(t,"transition-map.index",d):f.call(t,"link-to","transition-map.index",d),(h||0===h)&&a.buffer.push(h),a.buffer.push("</p>\n\n<h4>Transitions</h4>\n\n<p>The transition map above mentions two named\ntransitions: <code>toLeft</code> and <code>toRight</code>. These are\nboth predefined transitions that come with the library. But you can\ncompose new transitions too. They look like this:</p>\n\n"),a.buffer.push(m((u=s["code-snippet"]||t&&t["code-snippet"],d={hash:{name:"transition-definitions.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},u?u.call(t,d):f.call(t,"code-snippet",d)))),a.buffer.push('\n\n<p><em>(In these examples, <code>opacity: [1, 0]</code>\nuses <a href="http://velocityjs.org">velocity</a>\'s "force-feeding"\ncapability to specify <code>[endValue, startValue]</code>, so the\nmeaning is "animate the opacity from 0 to 1".)</em></p>\n\n<p>Transitions are implemented with a promise-based API that gives you\ncontrol over all the relevant timing, including when to insert the new\nview into the DOM. '),u=s["link-to"]||t&&t["link-to"],d={hash:{},hashTypes:{},hashContexts:{},inverse:p.noop,fn:p.program(5,l,a),contexts:[t],types:["STRING"],data:a},h=u?u.call(t,"transitions.index",d):f.call(t,"link-to","transitions.index",d),(h||0===h)&&a.buffer.push(h),a.buffer.push("</p>\n"),c})}),define("dummy/templates/liquid-with-self",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{};var o,r="";return o=s._triageMustache.call(t,"",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:a}),(o||0===o)&&a.buffer.push(o),a.buffer.push("\n"),r})}),define("dummy/templates/liquid-with",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{};var o,r="";return o=s._triageMustache.call(t,"with-apply",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:a}),(o||0===o)&&a.buffer.push(o),a.buffer.push("\n\n\n"),r})}),define("dummy/templates/modal-documentation/component",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){function o(e,t){t.buffer.push("modal")}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{};var r,l,h,u="",d=this,c=s.helperMissing;return a.buffer.push("<h2>Writing Modal Components</h2>\n\n<p>Modal dialogs are just normal Ember components. They offer a simple\nprotocol for some common behaviors.</p>\n\n<dl>\n  <dt>dismiss</dt>\n  <dd>If you <code>sendAction('dismiss')</code>, we will dismiss the\n    dialog. This also necessarily sets your <code>withParams</code> to\n    their default values.\n  </dd>\n\n  <dt>outsideClick</dt>\n  <dd>By default, we will automatically dismiss if the user clicks\n    ouside the dialog box. But if you\n    set <code>dismissWithOutsideClick</code> to false in your call to\n    "),l=s["link-to"]||t&&t["link-to"],h={hash:{},hashTypes:{},hashContexts:{},inverse:d.noop,fn:d.program(1,o,a),contexts:[t],types:["STRING"],data:a},r=l?l.call(t,"modal-documentation.modal",h):c.call(t,"link-to","modal-documentation.modal",h),(r||0===r)&&a.buffer.push(r),a.buffer.push(", you\n    will receive <code>outsideClick</code> events instead.\n  </dd>\n\n  <dt>escape</dt>\n  <dd>By default, we will automatically dismiss if the user hits the\n    escape key. But if you set <code>dismissWithEscape</code> to false\n    in your call to "),l=s["link-to"]||t&&t["link-to"],h={hash:{},hashTypes:{},hashContexts:{},inverse:d.noop,fn:d.program(1,o,a),contexts:[t],types:["STRING"],data:a},r=l?l.call(t,"modal-documentation.modal",h):c.call(t,"link-to","modal-documentation.modal",h),(r||0===r)&&a.buffer.push(r),a.buffer.push(", you will\n    receive <code>escape</code> events instead.\n  </dd>\n</dl>\n\n<p>You can style your dialog box by targeting\nthe <code>lf-dialog</code> class. You can style the background overlay\nshadow by targeting the <code>lf-overlay</code> class.</p>\n"),u})}),define("dummy/templates/modal-documentation/index",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){function o(e,t){t.buffer.push("modals")}function r(e,t){t.buffer.push("This one")}function l(e,t){t.buffer.push("But this one")}function h(e,t){t.buffer.push("modal()")}function u(e,t){t.buffer.push("\n          Try It\n        ")}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{};var d,c,p,f="",m=s.helperMissing,b=this,y=this.escapeExpression;return a.buffer.push("<h2>Modal Dialogs</h2>\n\n<p>Since  "),c=s["query-params"]||t&&t["query-params"],p={hash:{person:"Tomster",salutation:"Hi"},hashTypes:{person:"STRING",salutation:"STRING"},hashContexts:{person:t,salutation:t},contexts:[],types:[],data:a},d=c?c.call(t,p):m.call(t,"query-params",p),c=s["link-to"]||t&&t["link-to"],p={hash:{},hashTypes:{},hashContexts:{},inverse:b.noop,fn:b.program(1,o,a),contexts:[t],types:["sexpr"],data:a},d=c?c.call(t,d,p):m.call(t,"link-to",d,p),(d||0===d)&&a.buffer.push(d),a.buffer.push(" don't necessarily live <em>inside</em> any other view,\nthey don't belong inside your other templates and so we don't offer a\ntemplate helper for creating them. Instead, we offer conventions for\ndefining your modals as Ember components and tying them to properties\non your controllers.</p>\n\n<p>A modal dialog is controlled by two key things: the scope in which\nit's valid, and the list of parameters it observes.</p>\n\n"),a.buffer.push(y((c=s["code-snippet"]||t&&t["code-snippet"],p={hash:{name:"sample-modal-routes.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},c?c.call(t,p):m.call(t,"code-snippet",p)))),a.buffer.push("\n\n<p>Modal dialogs can be scoped to any part of your\napplication. "),c=s["query-params"]||t&&t["query-params"],p={hash:{person:"Tomhuda Katzdale",salutation:"Hola"},hashTypes:{person:"STRING",salutation:"STRING"},hashContexts:{person:t,salutation:t},contexts:[],types:[],data:a},d=c?c.call(t,p):m.call(t,"query-params",p),c=s["link-to"]||t&&t["link-to"],p={hash:{},hashTypes:{},hashContexts:{},inverse:b.noop,fn:b.program(3,r,a),contexts:[t],types:["sexpr"],data:a},d=c?c.call(t,d,p):m.call(t,"link-to",d,p),(d||0===d)&&a.buffer.push(d),a.buffer.push(' is scoped within the "Modal\nDialogs" resource you\'re currently viewing, including all its child\nroutes. '),c=s["query-params"]||t&&t["query-params"],p={hash:{warn:1},hashTypes:{warn:"INTEGER"},hashContexts:{warn:t},contexts:[],types:[],data:a},d=c?c.call(t,p):m.call(t,"query-params",p),c=s["link-to"]||t&&t["link-to"],p={hash:{},hashTypes:{},hashContexts:{},inverse:b.noop,fn:b.program(5,l,a),contexts:[t],types:["sexpr"],data:a},d=c?c.call(t,d,p):m.call(t,"link-to",d,p),(d||0===d)&&a.buffer.push(d),a.buffer.push(" is\nscoped to the whole application. You can experiment with the\ndifference by changing the URL.</p>\n\n<p>In both of the demo popups from the preceeding paragraph, I'm\nexposing the controller properties as <code>queryParams</code>. This\nis a generally good thing to do, because it makes your modal state\npart of the URL, and lets people dismiss the popup with the back\nbutton. But this is optional.</p>\n\n<h3>Modal dialog basics</h3>\n\n<ol>\n  <li><p>Insert the <code>{{liquid-modal}}</code> component in\n  your <code>application.hbs</code> template. You only need to do this\n  once &mdash; it will manage all the modals in your application. It\n  doesn't take any arguments.</p></li>\n\n  <li>Create an Ember component the usual way. For example, here\n  is <code>app/templates/components/hello-modal.hbs</code>:\n\n    "),a.buffer.push(y((c=s["code-snippet"]||t&&t["code-snippet"],p={hash:{name:"hello-modal.hbs"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},c?c.call(t,p):m.call(t,"code-snippet",p)))),a.buffer.push("\n\n    And <code>app/components/hello-modal.js</code>:\n    "),a.buffer.push(y((c=s["code-snippet"]||t&&t["code-snippet"],p={hash:{name:"hello-modal.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},c?c.call(t,p):m.call(t,"code-snippet",p)))),a.buffer.push("\n  </li>\n  <li>Call "),c=s["link-to"]||t&&t["link-to"],p={hash:{},hashTypes:{},hashContexts:{},inverse:b.noop,fn:b.program(7,h,a),contexts:[t],types:["STRING"],data:a},d=c?c.call(t,"modal-documentation.modal",p):m.call(t,"link-to","modal-documentation.modal",p),(d||0===d)&&a.buffer.push(d),a.buffer.push("\n  within your router map, at whichever scope you choose and wire up any actions:\n\n    "),a.buffer.push(y((c=s["code-snippet"]||t&&t["code-snippet"],p={hash:{name:"hello-modal-map.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},c?c.call(t,p):m.call(t,"code-snippet",p)))),a.buffer.push("\n\n  </li>\n  <li><p>You can launch your modal by setting the relevant properties\n  on your controller. If the properties are also query params, you can\n  just <code>link-to</code>.  For example, here's the controller for this page:</p>\n\n    "),a.buffer.push(y((c=s["code-snippet"]||t&&t["code-snippet"],p={hash:{name:"modal-controller.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},c?c.call(t,p):m.call(t,"code-snippet",p)))),a.buffer.push("\n\n  <p>Here's the template for a <code>link-to</code> button that\n  launches the modal:</p>\n\n    "),a.buffer.push(y((c=s["code-snippet"]||t&&t["code-snippet"],p={hash:{name:"hello-tomster.hbs"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},c?c.call(t,p):m.call(t,"code-snippet",p)))),a.buffer.push('\n\n    <div id="basic-modal-demo">\n      And here\'s the result:\n\n      \n        '),c=s["query-params"]||t&&t["query-params"],p={hash:{salutation:"Guten tag",person:"Stef"},hashTypes:{salutation:"STRING",person:"STRING"},hashContexts:{salutation:t,person:t},contexts:[],types:[],data:a},d=c?c.call(t,p):m.call(t,"query-params",p),c=s["link-to"]||t&&t["link-to"],p={hash:{tagName:"button"},hashTypes:{tagName:"STRING"},hashContexts:{tagName:t},inverse:b.noop,fn:b.program(9,u,a),contexts:[t],types:["sexpr"],data:a},d=c?c.call(t,d,p):m.call(t,"link-to",d,p),(d||0===d)&&a.buffer.push(d),a.buffer.push("\n      \n\n      <p>\n        Bound value: "),a.buffer.push(y((c=s.input||t&&t.input,p={hash:{value:"modalMessage","class":"template-input"},hashTypes:{value:"ID","class":"STRING"},hashContexts:{value:t,"class":t},contexts:[],types:[],data:a},c?c.call(t,p):m.call(t,"input",p)))),a.buffer.push("\n      </p>\n    </div>\n  </li>\n</ol>\n\n"),f})}),define("dummy/templates/modal-documentation/modal",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){function o(e,t){t.buffer.push("custom transition")}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{};var r,l,h,u="",d=this,c=s.helperMissing;return a.buffer.push('<h2>modal()</h2>\n\n<p>The <code>modal</code> function binds one or more of the\nproperties on your controller to a modal dialog component.</p>\n\n<p>The rule for displaying a modal is simple: if the controller is\nactive and any of the properties have non-default values, the modal\nappears. Each of the properties is also passed through to your modal\ncomponent itself. If any of these properties change, the modal\nre-animates.</p>\n\n<p><code>modal(componentName, options)</code> takes these options:</p>\n\n<dl>\n  <dt>withParams</dt>\n  <dd>\n    <p>\n      The property names that will be passed to the component.\n      We will show the component whenever any of these has a non-default value.\n      This can be a string, an array of strings, an object or an array of strings and objects.\n    </p>\n    <p>\n      If given an object, the key is the property name on the controller and the value\n      will be the name this is accessed as in the modal component.\n      For example, the following will map <code>foo</code> in the controller to <code>foo</code> in the modal,\n      and <code>bar</code> in the controller to <code>baz</code> in the modal.\n    </p>\n    <pre class="javascript hljs">\nwithParams: ["foo", {\n  bar: "baz"\n}]</pre>\n  </dd>\n\n  <dt>otherParams</dt>\n  <dd>Lets you bind properties through from the controller to the modal.\n    These do not affect the displaying of the modal.\n    Accepts property names in the same format as `withParams`.\n  </dd>\n\n  <dt>controller</dt>\n  <dd>Optionally override the controller name that we will bind to. By\n    default we use the default controller name for the scope in which\n    you call <code>modal()</code>.\n  </dd>\n\n  <dt>dismissWithOutsideClick</dt>\n  <dd>If true, clicking outside the modal will dismiss it. If false,\n    your component will receive an <code>outsideClick</code> event\n    instead. Defaults to true.\n  </dd>\n\n  <dt>dismissWithEscape</dt>\n  <dd>If true, the escape key will dismiss the modal. If false, your\n    component will receive an <code>escape</code> event\n    instead. Defaults to true.\n  </dd>\n\n  <dt>ariaLabelledBy</dt>\n  <dd>Lets you set the aria-labelledby property on the modal dialog\n    box for proper accessibility.</dd>\n\n  <dt>ariaLabel</dt>\n  <dd>Lets you set the aria-label property on the modal dialog box for\n    proper accessibility.</dd>\n\n  <dt>actions</dt>\n  <dd>\n    Wire up actions from the modal component\'s <code>sendAction</code> to your app. For example,\n    <code>actions: {submit: "modalSubmitted"}</code> will trigger the <code>modalSubmitted</code>\n    event on your controller when a <code>submit</code> event is fired in your modal.\n  </dd>\n\n  <dt>dialogClass</dt>\n  <dd>\n    An optional additional CSS class to put on\n    the <code>lf-dialog</code> element. This lets you style the\n    containing box differently for different modals.\n  </dd>\n</dl>\n\n<div class="callout callout-info">We still need an API for customizing\nwhich animated transitions to use for showing/hiding your various dialog\nboxes. For now, you can override the default transition by defining a\n'),l=s["link-to"]||t&&t["link-to"],h={hash:{},hashTypes:{},hashContexts:{},inverse:d.noop,fn:d.program(1,o,a),contexts:[t],types:["STRING"],data:a},r=l?l.call(t,"transitions.defining",h):c.call(t,"link-to","transitions.defining",h),(r||0===r)&&a.buffer.push(r),a.buffer.push("\ncalled `modal-popup`.</div>\n"),u})}),define("dummy/templates/scenarios/empty-if",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){function o(e,t){t.buffer.push("\n    Some Content\n  ")}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{};var r,l,h,u="",d=s.helperMissing,c=this.escapeExpression,p=this;return a.buffer.push('<div id="empty-if-scenario">\n  <label>'),a.buffer.push(c((l=s.input||t&&t.input,h={hash:{type:"checkbox",checked:"showing"},hashTypes:{type:"STRING",checked:"ID"},hashContexts:{type:t,checked:t},contexts:[],types:[],data:a},l?l.call(t,h):d.call(t,"input",h)))),a.buffer.push(" Show It</label>\n\n  "),l=s["liquid-if"]||t&&t["liquid-if"],h={hash:{use:"fade"},hashTypes:{use:"STRING"},hashContexts:{use:t},inverse:p.noop,fn:p.program(1,o,a),contexts:[t],types:["ID"],data:a},r=l?l.call(t,"showing",h):d.call(t,"liquid-if","showing",h),(r||0===r)&&a.buffer.push(r),a.buffer.push("\n</div>\n"),u})}),define("dummy/templates/scenarios/growable-flexboxes",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){function o(e,t){t.buffer.push("\n      One\n    ")}function r(e,t){t.buffer.push("\n      Two\n    ")}function l(e,t){t.buffer.push("\n      Three\n    ")}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{};var h,u,d,c="",p=s.helperMissing,f=this.escapeExpression,m=this;return a.buffer.push('<div id="growable-flexboxes-scenario">\n  <p>This demonstrates a way to combine animation and CSS3\'s flexible\n  box model. It uses the <code>containerless</code> flag to tell\n  liquid-fire not to try managing the container for the elements, so\n  that we can instead contain them direcltly in a div with\n  `display:flex`.</p>\n  \n  <div>\n    Choose some of these:\n    <label>'),a.buffer.push(f((u=s.input||t&&t.input,d={hash:{type:"checkbox",checked:"showOne"},hashTypes:{type:"STRING",checked:"ID"},hashContexts:{type:t,checked:t},contexts:[],types:[],data:a},u?u.call(t,d):p.call(t,"input",d)))),a.buffer.push("One</label>\n    <label>"),a.buffer.push(f((u=s.input||t&&t.input,d={hash:{type:"checkbox",checked:"showTwo"},hashTypes:{type:"STRING",checked:"ID"},hashContexts:{type:t,checked:t},contexts:[],types:[],data:a},u?u.call(t,d):p.call(t,"input",d)))),a.buffer.push("Two</label>\n    <label>"),a.buffer.push(f((u=s.input||t&&t.input,d={hash:{type:"checkbox",checked:"showThree"},hashTypes:{type:"STRING",checked:"ID"},hashContexts:{type:t,checked:t},contexts:[],types:[],data:a},u?u.call(t,d):p.call(t,"input",d)))),a.buffer.push('Three</label>\n  </div>\n\n  <div class="flex-parent">\n    '),u=s["liquid-if"]||t&&t["liquid-if"],d={hash:{use:"flex-grow",containerless:!0},hashTypes:{use:"STRING",containerless:"BOOLEAN"},hashContexts:{use:t,containerless:t},inverse:m.noop,fn:m.program(1,o,a),contexts:[t],types:["ID"],data:a},h=u?u.call(t,"showOne",d):p.call(t,"liquid-if","showOne",d),(h||0===h)&&a.buffer.push(h),a.buffer.push("\n\n    "),u=s["liquid-if"]||t&&t["liquid-if"],d={hash:{use:"flex-grow",containerless:!0},hashTypes:{use:"STRING",containerless:"BOOLEAN"},hashContexts:{use:t,containerless:t},inverse:m.noop,fn:m.program(3,r,a),contexts:[t],types:["ID"],data:a},h=u?u.call(t,"showTwo",d):p.call(t,"liquid-if","showTwo",d),(h||0===h)&&a.buffer.push(h),a.buffer.push("\n\n    "),u=s["liquid-if"]||t&&t["liquid-if"],d={hash:{use:"flex-grow",containerless:!0},hashTypes:{use:"STRING",containerless:"BOOLEAN"},hashContexts:{use:t,containerless:t},inverse:m.noop,fn:m.program(5,l,a),contexts:[t],types:["ID"],data:a},h=u?u.call(t,"showThree",d):p.call(t,"liquid-if","showThree",d),(h||0===h)&&a.buffer.push(h),a.buffer.push("\n  </div>\n  \n  "),a.buffer.push(f((u=s["code-snippet"]||t&&t["code-snippet"],d={hash:{name:"flexboxes.hbs"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},u?u.call(t,d):p.call(t,"code-snippet",d)))),a.buffer.push("\n</div>\n"),c})}),define("dummy/templates/scenarios/growable-with",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){function o(e,t){var n,i="";return t.buffer.push("\n    "),n=s._triageMustache.call(e,"m.description",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n  "),i}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{};var r,l,h,u="",d=s.helperMissing,c=this.escapeExpression,p=this;return a.buffer.push('<div id="growable-with-scenario" >\n  <label>'),a.buffer.push(c((l=s.input||t&&t.input,h={hash:{type:"checkbox",checked:"otherState"},hashTypes:{type:"STRING",checked:"ID"},hashContexts:{type:t,checked:t},contexts:[],types:[],data:a},l?l.call(t,h):d.call(t,"input",h)))),a.buffer.push(" Swap Em</label>\n\n  "),l=s["liquid-with"]||t&&t["liquid-with"],h={hash:{use:"to-left"},hashTypes:{use:"STRING"},hashContexts:{use:t},inverse:p.noop,fn:p.program(1,o,a),contexts:[t,t,t],types:["ID","ID","ID"],data:a},r=l?l.call(t,"myThing","as","m",h):d.call(t,"liquid-with","myThing","as","m",h),(r||0===r)&&a.buffer.push(r),a.buffer.push("\n</div>\n"),u})}),define("dummy/templates/scenarios/inline-serial",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){function o(e,t){t.buffer.push("\n    One.\n  ")}function r(e,t){t.buffer.push("\n    Two Three Four Five Six Two Three Four Five Six Two Three Four Five\n    Six Two Three Four Five Six.\n  ")}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{};var l,h,u,d="",c=s.helperMissing,p=this.escapeExpression,f=this;return a.buffer.push('<div id="inline-serial-scenario" >\n  <label>'),a.buffer.push(p((h=s.input||t&&t.input,u={hash:{type:"checkbox",checked:"otherState"},hashTypes:{type:"STRING",checked:"ID"},hashContexts:{type:t,checked:t},contexts:[],types:[],data:a},h?h.call(t,u):c.call(t,"input",u)))),a.buffer.push(" Swap Em</label>\n\n  "),h=s["liquid-if"]||t&&t["liquid-if"],u={hash:{},hashTypes:{},hashContexts:{},inverse:f.program(3,r,a),fn:f.program(1,o,a),contexts:[t],types:["ID"],data:a},l=h?h.call(t,"otherState",u):c.call(t,"liquid-if","otherState",u),(l||0===l)&&a.buffer.push(l),a.buffer.push("\n</div>\n"),d})}),define("dummy/templates/scenarios/inline",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){function o(e,t){t.buffer.push("\n    One.\n  ")}function r(e,t){t.buffer.push("\n    Two Three Four Five Six Two Three Four Five Six Two Three Four Five\n    Six Two Three Four Five Six.\n  ")}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{};var l,h,u,d="",c=s.helperMissing,p=this.escapeExpression,f=this;return a.buffer.push('<div id="inline-scenario" >\n  <label>'),a.buffer.push(p((h=s.input||t&&t.input,u={hash:{type:"checkbox",checked:"otherState"},hashTypes:{type:"STRING",checked:"ID"},hashContexts:{type:t,checked:t},contexts:[],types:[],data:a},h?h.call(t,u):c.call(t,"input",u)))),a.buffer.push(" Swap Em</label>\n\n  "),h=s["liquid-if"]||t&&t["liquid-if"],u={hash:{},hashTypes:{},hashContexts:{},inverse:f.program(3,r,a),fn:f.program(1,o,a),contexts:[t],types:["ID"],data:a},l=h?h.call(t,"otherState",u):c.call(t,"liquid-if","otherState",u),(l||0===l)&&a.buffer.push(l),a.buffer.push("\n</div>\n"),d})}),define("dummy/templates/scenarios/nested-outlets",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{};var o,r,l="",h=s.helperMissing,u=this.escapeExpression;return a.buffer.push("<h1>Outermost</h1>\n"),a.buffer.push(u((o=s["liquid-outlet"]||t&&t["liquid-outlet"],r={hash:{id:"nested-outlet-scenario"},hashTypes:{id:"STRING"},hashContexts:{id:t},contexts:[],types:[],data:a},o?o.call(t,r):h.call(t,"liquid-outlet",r)))),a.buffer.push("\n"),l})}),define("dummy/templates/scenarios/nested-outlets/middle",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){function o(e,t){t.buffer.push("Middle2")}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{};var r,l,h,u="",d=this,c=s.helperMissing;return a.buffer.push("<h2>Middle</h2>\n"),l=s["link-to"]||t&&t["link-to"],h={hash:{},hashTypes:{},hashContexts:{},inverse:d.noop,fn:d.program(1,o,a),contexts:[t],types:["STRING"],data:a},r=l?l.call(t,"scenarios.nested-outlets.middle2",h):c.call(t,"link-to","scenarios.nested-outlets.middle2",h),(r||0===r)&&a.buffer.push(r),a.buffer.push("\n"),r=s._triageMustache.call(t,"liquid-outlet",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:a}),(r||0===r)&&a.buffer.push(r),a.buffer.push("\n"),u})}),define("dummy/templates/scenarios/nested-outlets/middle/index",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){function o(e,t){t.buffer.push("Inner")}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{};var r,l,h,u="",d=this,c=s.helperMissing;return a.buffer.push("<h3>Inner Index</h3>\n"),l=s["link-to"]||t&&t["link-to"],h={hash:{},hashTypes:{},hashContexts:{},inverse:d.noop,fn:d.program(1,o,a),contexts:[t],types:["STRING"],data:a},r=l?l.call(t,"scenarios.nested-outlets.middle.inner",h):c.call(t,"link-to","scenarios.nested-outlets.middle.inner",h),(r||0===r)&&a.buffer.push(r),a.buffer.push("\n"),u
})}),define("dummy/templates/scenarios/nested-outlets/middle/inner",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){function o(e,t){t.buffer.push("Index")}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{};var r,l,h,u="",d=this,c=s.helperMissing;return a.buffer.push('<h3  id="inner-index">Inner</h3>\n'),l=s["link-to"]||t&&t["link-to"],h={hash:{},hashTypes:{},hashContexts:{},inverse:d.noop,fn:d.program(1,o,a),contexts:[t],types:["STRING"],data:a},r=l?l.call(t,"scenarios.nested-outlets.middle.index",h):c.call(t,"link-to","scenarios.nested-outlets.middle.index",h),(r||0===r)&&a.buffer.push(r),a.buffer.push("  \n"),u})}),define("dummy/templates/scenarios/nested-outlets/middle2",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){function o(e,t){t.buffer.push("Middle")}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{};var r,l,h,u="",d=this,c=s.helperMissing;return a.buffer.push("<h2>Middle 2</h2>\n"),l=s["link-to"]||t&&t["link-to"],h={hash:{},hashTypes:{},hashContexts:{},inverse:d.noop,fn:d.program(1,o,a),contexts:[t],types:["STRING"],data:a},r=l?l.call(t,"scenarios.nested-outlets.middle",h):c.call(t,"link-to","scenarios.nested-outlets.middle",h),(r||0===r)&&a.buffer.push(r),a.buffer.push("\n"),u})}),define("dummy/templates/scenarios/remapped-modal",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){function o(e,t){t.buffer.push("Go")}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{};var r,l,h,u="",d=s.helperMissing,c=this;return l=s["query-params"]||t&&t["query-params"],h={hash:{testPerson:"Tomster",testSalutation:"Hi"},hashTypes:{testPerson:"STRING",testSalutation:"STRING"},hashContexts:{testPerson:t,testSalutation:t},contexts:[],types:[],data:a},r=l?l.call(t,h):d.call(t,"query-params",h),l=s["link-to"]||t&&t["link-to"],h={hash:{},hashTypes:{},hashContexts:{},inverse:c.noop,fn:c.program(1,o,a),contexts:[t],types:["sexpr"],data:a},r=l?l.call(t,r,h):d.call(t,"link-to",r,h),(r||0===r)&&a.buffer.push(r),a.buffer.push("\n"),u})}),define("dummy/templates/scenarios/stef",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){function o(e,t){t.buffer.push("\n  <ul>\n    <li><a>a</a></li>\n    <li><a>b</a></li>\n    <li><a>c</a></li>\n    <li><a>d</a></li>\n  </ul>\n  ")}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{};var r,l,h,u="",d=this.escapeExpression,c=this,p=s.helperMissing;return a.buffer.push("<h2 id='title'>Welcome to Ember.js</h2>\n\n<div class=\"yoo\">\n  <button "),a.buffer.push(d(s.action.call(t,"toggle",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["STRING"],data:a}))),a.buffer.push(">\n    toggle\n  </button>\n\n  "),l=s["liquid-if"]||t&&t["liquid-if"],h={hash:{"class":"menu"},hashTypes:{"class":"STRING"},hashContexts:{"class":t},inverse:c.noop,fn:c.program(1,o,a),contexts:[t],types:["ID"],data:a},r=l?l.call(t,"isExpanded",h):p.call(t,"liquid-if","isExpanded",h),(r||0===r)&&a.buffer.push(r),a.buffer.push("\n</div>\n"),u})}),define("dummy/templates/scenarios/table-row",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){function o(e,t){t.buffer.push("\n    <td>Dynamic Row</td>\n  ")}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{};var r,l,h,u="",d=s.helperMissing,c=this.escapeExpression,p=this;return a.buffer.push(c((l=s.input||t&&t.input,h={hash:{type:"checkbox",checked:"showingRow"},hashTypes:{type:"STRING",checked:"ID"},hashContexts:{type:t,checked:t},contexts:[],types:[],data:a},l?l.call(t,h):d.call(t,"input",h)))),a.buffer.push("\n<table>\n  <tr><td>Static Row</td></tr>\n  "),l=s["liquid-if"]||t&&t["liquid-if"],h={hash:{containerless:!0,use:"fade"},hashTypes:{containerless:"BOOLEAN",use:"STRING"},hashContexts:{containerless:t,use:t},inverse:p.noop,fn:p.program(1,o,a),contexts:[t],types:["ID"],data:a},r=l?l.call(t,"showingRow",h):d.call(t,"liquid-if","showingRow",h),(r||0===r)&&a.buffer.push(r),a.buffer.push("\n</table>\n"),u})}),define("dummy/templates/transition-map/choosing-transitions",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{};var o,r,l="",h=s.helperMissing,u=this.escapeExpression;return a.buffer.push("<h2>Choosing Transition Animations</h2>\n\n<p>Each transition rule must have exactly one <code>use()</code>\nstatement. It determines what we'll do if the rule matches.</p>\n\n<p>Each transition may also have one <code>reverse()</code>\nstatement. It determines what we'll do if the <i>opposite rule</i>\nmatches, where the opposite rule swaps <code>fromRoute</code>\nwith <code>toRoute</code> and swaps <code>fromModel</code>\nwith <code>toModel</code>.</p>\n\n"),a.buffer.push(u((o=s["code-snippet"]||t&&t["code-snippet"],r={hash:{name:"use-examples.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},o?o.call(t,r):h.call(t,"code-snippet",r)))),a.buffer.push("\n"),l})}),define("dummy/templates/transition-map/dom-constraints",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{};var o,r,l="",h=s.helperMissing,u=this.escapeExpression;return a.buffer.push('<h2>DOM Constraints</h2>\n\n<p>These constraints let you target a transition rule based on the\nsurrounding DOM.</p>\n\n<dl class="dl-horizontal">\n  <dt>hasClass</dt>\n  <dd>\n    <p>Takes a class name and matches it against the animated\n    element. For example, this transition:</p>\n    \n    '),a.buffer.push(u((o=s["code-snippet"]||t&&t["code-snippet"],r={hash:{name:"has-class-example.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},o?o.call(t,r):h.call(t,"code-snippet",r)))),a.buffer.push("\n    \n    <p>Will match an animated element like this one:</p>\n    \n    "),a.buffer.push(u((o=s["code-snippet"]||t&&t["code-snippet"],r={hash:{name:"has-class-example.hbs"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},o?o.call(t,r):h.call(t,"code-snippet",r)))),a.buffer.push('\n\n    <div class="callout callout-info">\n    <p>Note that all the liquid helpers propagate\n    their <code>class</code> argument through to their liquid-child\n    elements. The above example results in DOM like this:</p>\n\n    '),a.buffer.push(u((o=s["code-snippet"]||t&&t["code-snippet"],r={hash:{name:"has-class-example-dom.hbs"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},o?o.call(t,r):h.call(t,"code-snippet",r)))),a.buffer.push("\n    </div>\n      \n  </dd>\n\n  <dt>childOf</dt>\n  <dd>\n    <p>Takes a CSS selector and tests whether the animated element's\n    parent matches the selector. For example, this rule:</p>\n\n    "),a.buffer.push(u((o=s["code-snippet"]||t&&t["code-snippet"],r={hash:{name:"child-of-example.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},o?o.call(t,r):h.call(t,"code-snippet",r)))),a.buffer.push("\n\n    <p>Will match against this template:</p>\n\n    "),a.buffer.push(u((o=s["code-snippet"]||t&&t["code-snippet"],r={hash:{name:"child-of-example.hbs"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},o?o.call(t,r):h.call(t,"code-snippet",r)))),a.buffer.push('\n\n    <div class="callout callout-danger">\n      This constraint cannot match during the very first render of\n      your animated element, because Handlebars templates have no\n      knowledge of their DOM context until after they\'re inserted into\n      the document. This limitation should go away after Ember adopts\n      HTMLBars.\n    </div>\n  </dd>\n</dl>\n'),l})}),define("dummy/templates/transition-map/index",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{},a.buffer.push('<h2>Using the Transition Map</h2>\n\n<p>The transition map is where you configure which transitions to run\nin which situations. In an ember-cli app, it is loaded automatically\nfrom <code>app/transitions.js</code>.</p>\n\n<div class="callout callout-info">\n  Old-school apps without a module resolver should pass their\n  transition map function to <code>LiquidFire.map</code>. <a href="https://github.com/ef4/liquid-fire/blob/master/example/prebuilt-example.html">There is an example here</a>.</div>\n\n<p>When one of the liquid helpers detects an update that might need to\nanimate, it consults the transition map. The first matching rule that\nit finds will be applied.</p>\n\n<h3>Transition map top-level functions</h3>\n\n<dl class="dl-horizontal">\n  <dt>transition</dt>\n  <dd>Creates a transition rule that governs when to apply a given\n  animation. The rule consists of one or more constraints and\n  a <code>use</code> statement. The animation named\n  by <code>use</code> will only run if all the constraints match.</dd>\n\n  <dt>setDefault</dt>\n  <dd>\n    <p>Takes name/value pairs and sets them\n    on <a href="http://julian.com/research/velocity/#arguments">$.Velocity.defaults</a>. This\n    lets you provide global defaults for things like the easing\n    function and animation duration.\n    </p>\n  </dd>\n\n</dl>\n\n<p>The next sections cover the kinds of constraints that can go inside\na transition rule.</p>\n\n\n')})}),define("dummy/templates/transition-map/model-constraints",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{};var o,r,l="",h=s.helperMissing,u=this.escapeExpression;return a.buffer.push('<h2>Model Constraints</h2>\n\n<p>The constraints in this section apply to models. What constitutes\nthe from-model and to-model depends on which liquid helpers you\'re\nusing.</p>\n\n<ul>\n  <li><code>{{liquid-outlet}}</code> matches against the actual\n  router-provided models before and after the transition.</li>\n  <li><code>{{#liquid-with}}</code> and <code>{{liquid-bind}}</code>\n    match against their own bound contexts.</li>\n  <li><code>{{#liquid-if}}</code> matches against its predicate.</li>\n</ul>\n\n<p>These are the three model constraint methods:</p>\n\n<dl class="dl-horizontal">\n  <dt>fromModel</dt>\n  <dd>Matches the model before the transition.</dd>\n  <dt>toModel</dt>\n  <dd>Matches the model after the transition.</dd>\n  <dt>betweenModels</dt>\n  <dd>Matches the model both before and after the transition.</dd>\n</dl>\n\n<p>Here are examples to illustrate their use:</p>\n\n'),a.buffer.push(u((o=s["code-snippet"]||t&&t["code-snippet"],r={hash:{name:"model-match-examples.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},o?o.call(t,r):h.call(t,"code-snippet",r)))),a.buffer.push("\n"),l})}),define("dummy/templates/transition-map/route-constraints",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{};var o,r,l="",h=s.helperMissing,u=this.escapeExpression;return a.buffer.push('<h2>Route Constraints</h2>\n\n<p>The following three constraints apply to route names. They all\naccept the same arguments.</p>\n\n<dl class="dl-horizontal">\n  <dt>fromRoute</dt>\n  <dd>Matches the route name at the start of a transition.</dd>\n\n  <dt>toRoute</dt>\n  <dd>Matches the route name at the end of a transition.</dd>\n\n  <dt>withinRoute</dt>\n  <dd>Matches the same name at both the start and end of the\n    transition. This is good for matching transitions that are not\n    route changes.\n  </dd>\n</dl>\n\n<p>Each of them accepts one or more arguments. The arguments can be\nstrings containing route names, or functions that test route\nnames. Best illustrated by example:</p>\n\n<div class="callout callout-danger">There is <a href="https://github.com/ef4/liquid-fire/issues/18">an open\nissue</a> that affects you if you\'re trying to target named outlets or\nusing non-default template names.</div>\n\n'),a.buffer.push(u((o=s["code-snippet"]||t&&t["code-snippet"],r={hash:{name:"route-match-examples.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},o?o.call(t,r):h.call(t,"code-snippet",r)))),a.buffer.push("\n"),l})}),define("dummy/templates/transitions/defining",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{};var o,r,l="",h=s.helperMissing,u=this.escapeExpression;return a.buffer.push("<h2>Defining Transition Animations</h2>\n\n<p>Transitions are defined by creating a module\nlike <code>app/transitions/my-transition.js</code> that exports a\nfunction like this:</p>\n\n"),a.buffer.push(u((o=s["code-snippet"]||t&&t["code-snippet"],r={hash:{name:"transition-skeleton.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},o?o.call(t,r):h.call(t,"code-snippet",r)))),a.buffer.push('\n\n<div class="callout callout-danger">Old school apps without a module\nresolver can call <code>LiquidFire.defineTransition</code> instead. <a href="https://github.com/ef4/liquid-fire/blob/master/example/prebuilt-example.html">See the example</a>.</div>\n\n<p>The function always receives at least two arguments:</p>\n\n<dl class="dl-horizontal">\n  <dt><code>oldView</code></dt>\n\n  <dd>The outgoing view for this transition. It may be undefined when\n  transitioning from an empty initial state.</dd>\n\n  <dt><code>insertNewView</code></dt>\n\n  <dd>This is always a function that returns a promise. Call this\n  function when you\'re ready to insert the new view into the DOM. It\n  will resolve to the newView. The newView may be undefined if your\n  transition has already been interrupted, so you should always\n  tolerate an undefined newView.</dd>\n</dl>\n\n<div class="callout callout-info">\n  <h3>Why "insertNewView" instead of "newView"?</h3>\n\n  Because sometimes you want to animate the views in parallel, and\n  sometimes you want to animate them in series. In the series case,\n  your transition may get interrupted before the new view is even\n  needed, in which case we can avoid inserting it entirely.\n</div>\n\n<p>Any remaining arguments will come directly from <code>use</code>\nstatements in transition rules. For example:</p>\n\n'),a.buffer.push(u((o=s["code-snippet"]||t&&t["code-snippet"],r={hash:{name:"transition-arguments.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},o?o.call(t,r):h.call(t,"code-snippet",r)))),a.buffer.push("\n\n<p>You can define new transitions in terms of existing transitions\nby currying arguments:</p>\n\n"),a.buffer.push(u((o=s["code-snippet"]||t&&t["code-snippet"],r={hash:{name:"curried-transition.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},o?o.call(t,r):h.call(t,"code-snippet",r)))),a.buffer.push("\n\n"),l})}),define("dummy/templates/transitions/index",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){function o(e,t){t.buffer.push("template helper")}function r(e,t){t.buffer.push("transition map")}function l(e,t){t.buffer.push("predefined transitions")}function h(e,t){t.buffer.push("compose their own")}function u(e,t){t.buffer.push("lower-level pieces")}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{};var d,c,p,f="",m=this,b=s.helperMissing;return a.buffer.push("<h2>Transitions</h2>\n\n<p>Transitions implement animation between two states. When a\n"),c=s["link-to"]||t&&t["link-to"],p={hash:{},hashTypes:{},hashContexts:{},inverse:m.noop,fn:m.program(1,o,a),contexts:[t],types:["STRING"],data:a},d=c?c.call(t,"helpers-documentation.index",p):b.call(t,"link-to","helpers-documentation.index",p),(d||0===d)&&a.buffer.push(d),a.buffer.push(" undergoes a\nstate change, it consults the "),c=s["link-to"]||t&&t["link-to"],p={hash:{},hashTypes:{},hashContexts:{},inverse:m.noop,fn:m.program(3,r,a),contexts:[t],types:["STRING"],data:a},d=c?c.call(t,"transition-map.index",p):b.call(t,"link-to","transition-map.index",p),(d||0===d)&&a.buffer.push(d),a.buffer.push(" to see if there's a\nmatching transition. If it finds one, the transition is given the job\nof orchestrating the view animations to get from the old state to the\nnew state.</p>\n\n<p>The library ships with some "),c=s["link-to"]||t&&t["link-to"],p={hash:{},hashTypes:{},hashContexts:{},inverse:m.noop,fn:m.program(5,l,a),contexts:[t],types:["STRING"],data:a},d=c?c.call(t,"transitions.predefined",p):b.call(t,"link-to","transitions.predefined",p),(d||0===d)&&a.buffer.push(d),a.buffer.push(". But it's\nalso expected that people will want to "),c=s["link-to"]||t&&t["link-to"],p={hash:{},hashTypes:{},hashContexts:{},inverse:m.noop,fn:m.program(7,h,a),contexts:[t],types:["STRING"],data:a},d=c?c.call(t,"transitions.defining",p):b.call(t,"link-to","transitions.defining",p),(d||0===d)&&a.buffer.push(d),a.buffer.push(" out of\n"),c=s["link-to"]||t&&t["link-to"],p={hash:{},hashTypes:{},hashContexts:{},inverse:m.noop,fn:m.program(9,u,a),contexts:[t],types:["STRING"],data:a},d=c?c.call(t,"transitions.primitives",p):b.call(t,"link-to","transitions.primitives",p),(d||0===d)&&a.buffer.push(d),a.buffer.push(".</p>\n"),f})}),define("dummy/templates/transitions/predefined",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{},a.buffer.push('<h2>Predefined Transitions</h2>\n\n<p>So far, the library includes a small set of predefined transitions\nto get you started.</p>\n\n<dl class="dl-horizontal">\n  <dt>toLeft<br>toRight<br>toUp<br>toDown</dt>\n  <dd>These are slide animations powered by the\n  CSS <code>transform</code> property. They all accept an optional\n  hash that\'s passed onward to Velocity for both the outgoing and\n  incoming animations.</dd>\n\n  <dt>crossFade</dt>\n  <dd>Old content fades away toward opacity 0 while new content fades\n  in.</dd>\n\n  <dt>fade</dt>\n  <dd>Old content fades away toward opacity 0, then new content fades\n  in. This is a good example of a serial animation with support for\n  interruption.</dd>\n</dl>\n\n<p>It may be instructive to <a href="https://github.com/ef4/liquid-fire/tree/master/app-addon/transitions">read the source for these predefined transitions</a>.</p>\n')})}),define("dummy/templates/transitions/primitives",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){function o(e,t){t.buffer.push("One")}function r(e,t){t.buffer.push("Two")}function l(e,t){t.buffer.push("Three")}this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{};var h,u,d,c="",p=this,f=s.helperMissing,m=this.escapeExpression;return a.buffer.push('<h2>Animation Primitives</h2>\n\n<p>The library exports these animation primitives:</p>\n\n<dl>\n  <dt><code>animate(view, props, opts, <em>label</em>)</code></dt>\n\n  <dd>\n    This operates on the given <code>view</code>\'s element, and always\n    returns a promise (even if the view is undefined or otherwise\n    lacking an element). <code>props</code> and <code>opts</code> are\n    passed directly through\n    to <a href="http://julian.com/research/velocity/#arguments">Velocity\'s\n    animate function</a>. <code>label</code> is an optional string\n    that you can use to refer to this animation while it\'s running.\n  </dd>\n\n  <dt><code>stop(view)</code></dt>\n  <dd>\n    This stops any currently running animations on the given view.\n  </dd>\n\n  <dt><code>isAnimating(view, label)</code></dt>\n  <dd>Tests whether an animation with the given label is currently\n    running on this view.\n  </dd>\n\n  <dt><code>timeSpent(view, label)</code></dt>\n  <dd>\n    Returns the number of milliseconds already spent running the\n    labeled animation. Useful when adaptively interrupting in-progress\n    animations.\n  </dd>\n\n  <dt><code>timeRemaining(view, label)</code></dt>\n  <dd>\n    Returns the number of milliseconds remaining for the labeled\n    animation. Useful when adaptively interrupting in-progress\n    animations.\n  </dd>\n\n  <dt><code>finish(view, label)</code></dt>\n  <dd>Returns a promise that resolves when the running animation with\n  the given label on the given view completes.</dd>\n\n</dl>\n\n<h3>Demo</h3>\n\n<p>This shows a slow fade effect so you can experiment with\ninterrupting the transition. Notice that it has two different\nbehaviors depending on whether you interrupt the fade-out or\nfade-in.</p>\n\n<div id="interrupted-fade-demo">\n  '),u=s["link-to"]||t&&t["link-to"],d={hash:{},hashTypes:{},hashContexts:{},inverse:p.noop,fn:p.program(1,o,a),contexts:[t],types:["STRING"],data:a},h=u?u.call(t,"transitions.primitives.index",d):f.call(t,"link-to","transitions.primitives.index",d),(h||0===h)&&a.buffer.push(h),a.buffer.push("\n  "),u=s["link-to"]||t&&t["link-to"],d={hash:{},hashTypes:{},hashContexts:{},inverse:p.noop,fn:p.program(3,r,a),contexts:[t],types:["STRING"],data:a},h=u?u.call(t,"transitions.primitives.two",d):f.call(t,"link-to","transitions.primitives.two",d),(h||0===h)&&a.buffer.push(h),a.buffer.push("\n  "),u=s["link-to"]||t&&t["link-to"],d={hash:{},hashTypes:{},hashContexts:{},inverse:p.noop,fn:p.program(5,l,a),contexts:[t],types:["STRING"],data:a},h=u?u.call(t,"transitions.primitives.three",d):f.call(t,"link-to","transitions.primitives.three",d),(h||0===h)&&a.buffer.push(h),a.buffer.push("\n  "),h=s._triageMustache.call(t,"liquid-outlet",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:a}),(h||0===h)&&a.buffer.push(h),a.buffer.push("\n</div>\n\n"),a.buffer.push(m((u=s["code-snippet"]||t&&t["code-snippet"],d={hash:{name:"fade-definition.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},u?u.call(t,d):f.call(t,"code-snippet",d)))),a.buffer.push("\n"),c})}),define("dummy/templates/transitions/primitives/index",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{},a.buffer.push('<div class="one">One</div>\n')})}),define("dummy/templates/transitions/primitives/three",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{},a.buffer.push('<div class="three">Three</div>\n')})}),define("dummy/templates/transitions/primitives/two",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,s,i,a){this.compilerInfo=[4,">= 1.0.0"],s=this.merge(s,n.Handlebars.helpers),a=a||{},a.buffer.push('<div class="two">Two</div>\n')})}),define("dummy/transitions",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=function(){this.transition(this.fromRoute("helpers-documentation.liquid-outlet.index"),this.toRoute("helpers-documentation.liquid-outlet.other"),this.use("toLeft"),this.reverse("toRight")),this.transition(this.childOf("#liquid-bind-demo"),this.use("toUp")),this.transition(this.hasClass("vehicles"),this.toModel(!0),this.use("crossFade",{duration:1e3}),this.reverse("toLeft",{duration:1e3})),this.transition(this.childOf("#interrupted-fade-demo"),this.use("fade",{duration:n.testing?100:1500})),this.transition(this.childOf("#inline-serial-scenario"),this.use("fade",{duration:1e3})),this.transition(this.childOf("#inline-scenario"),this.toModel(!0),this.use("toLeft",{duration:1e3}),this.reverse("toRight",{duration:1e3})),this.transition(this.fromRoute("scenarios.nested-outlets.middle"),this.toRoute("scenarios.nested-outlets.middle2"),this.use("fade",{duration:n.testing?100:1e3}),this.reverse("fade",{duration:1e3})),this.transition(this.fromRoute("scenarios.nested-outlets.middle.index"),this.toRoute("scenarios.nested-outlets.middle.inner"),this.use("fade",{duration:1e3}),this.reverse("fade",{duration:1e3}))}}),define("dummy/transitions/cross-fade",["liquid-fire","exports"],function(e,t){"use strict";var n=e.animate,s=e.stop,i=e.Promise;t["default"]=function(e,t,a){return s(e),t().then(function(t){return i.all([n(e,{opacity:0},a),n(t,{opacity:[1,0]},a)])})}}),define("dummy/transitions/fade",["liquid-fire","exports"],function(e,t){"use strict";var n=e.isAnimating,s=e.finish,i=e.timeSpent,a=e.animate,o=e.stop;t["default"]=function(e,t,r){var l,h=r;return n(e,"fade-out")?l=s(e,"fade-out"):(n(e,"fade-in")&&(h={duration:i(e,"fade-in")}),o(e),l=a(e,{opacity:0},h,"fade-out")),l.then(t).then(function(e){return a(e,{opacity:[1,0]},r,"fade-in")})}}),define("dummy/transitions/flex-grow",["liquid-fire","exports"],function(e,t){"use strict";var n=e.animate,s=e.stop,i=e.Promise;t["default"]=function(e,t,a){return s(e),t().then(function(t){return i.all([n(e,{"flex-grow":0},a),n(t,{"flex-grow":[1,0]},a)])})}}),define("dummy/transitions/modal-popup",["ember","liquid-fire","exports"],function(e,t,n){"use strict";function s(e){var t,n;return e&&(t=e.$(".lm-container > div"))&&(t=t[0])&&(n=e.$(".lf-overlay"))&&(n=n[0])?o.all([r.animate(n,{opacity:[0,.5]},{duration:250}),r.animate(t,{scale:[0,1]},{duration:250})]):o.resolve()}function i(e){return e().then(function(e){var t,n;if(e&&(t=e.$(".lm-container > div")[0])&&(n=e.$(".lf-overlay")[0]))return a.$(t).css({display:"none"}),a.$(n).css({display:"none"}),e.$().css({display:"",visibility:""}),o.all([r.animate(n,{opacity:[.5,0]},{duration:250,display:""}),r.animate(t,{scale:[1,0]},{duration:250,display:""})])})}var a=e["default"],o=t.Promise,r=a.$.Velocity;n["default"]=function(e,t){return s(e).then(function(){return i(t)})}}),define("dummy/transitions/move-over",["liquid-fire","exports"],function(e,t){"use strict";var n=e.stop,s=e.animate,i=e.Promise,a=e.isAnimating,o=e.finish;t["default"]=function(e,t,r,l,h){var u,d,c,p={},f={};return"x"===r.toLowerCase()?(d="translateX",c="width"):(d="translateY",c="height"),a(e,"moving-in")?u=o(e,"moving-in"):(n(e),u=i.resolve()),u.then(t).then(function(t){if(t&&t.$()&&e&&e.$()){var n=[parseInt(t.$().css(c),10),parseInt(e.$().css(c),10)],a=Math.max.apply(null,n);p[d]=a*l+"px",f[d]=["0px",-1*a*l+"px"]}else p[d]=100*l+"%",f[d]=["0%",-100*l+"%"];return i.all([s(e,p,h),s(t,f,h,"moving-in")])})}}),define("dummy/transitions/rotate-below",["liquid-fire","exports"],function(e,t){"use strict";var n=e.stop,s=e.animate,i=e.Promise;t["default"]=function(e,t,a){var o=1;return a&&"cw"===a.direction&&(o=-1),n(e),t().then(function(t){return e&&e.$().css("transform-origin","50% 150%"),t&&t.$().css("transform-origin","50% 150%"),i.all([s(e,{rotateZ:-90*o+"deg"},a),s(t,{rotateZ:["0deg",90*o+"deg"]},a)])})}}),define("dummy/transitions/scroll-then",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=function(){n.assert("You must provide a transition name as the first argument to scrollThen. Example: this.use('scrollThen', 'toLeft')","string"==typeof arguments[2]);var e=document.getElementsByTagName("html"),t=Array.prototype.slice.call(arguments,0,2),s=this.lookup(arguments[2]),i=this,a=arguments[3]||{};return n.assert("The second argument to scrollThen is passed to Velocity's scroll function and must be an object","object"==typeof a),a=n.merge({duration:500,offset:0},a),t.push.apply(t,Array.prototype.slice.call(arguments,4)),window.$.Velocity(e,"scroll",a).then(function(){s.apply(i,t)})}}),define("dummy/transitions/to-down",["liquid-fire","exports"],function(e,t){"use strict";var n=e.curryTransition;t["default"]=n("move-over","y",1)}),define("dummy/transitions/to-left",["liquid-fire","exports"],function(e,t){"use strict";var n=e.curryTransition;t["default"]=n("move-over","x",-1)}),define("dummy/transitions/to-right",["liquid-fire","exports"],function(e,t){"use strict";var n=e.curryTransition;t["default"]=n("move-over","x",1)}),define("dummy/transitions/to-up",["liquid-fire","exports"],function(e,t){"use strict";var n=e.curryTransition;t["default"]=n("move-over","y",-1)}),define("dummy/views/application",["ember","exports"],function(e,t){"use strict";function n(e,t){var n=o(document).height()/e;s();for(var i=0;n>i;i++)o("body").append("<div class='grid' id='vgrid"+i+"'></div>"),o("#vgrid"+i).css({height:""+e+"px",width:"100%",position:"absolute",top:""+(e*i-1+t)+"px",left:"0px",borderTop:"1px solid black",zIndex:2e3,"pointer-events":"none",opacity:.2,"background-color":"transparent"})}function s(){o(".grid").remove()}function i(e,t){return null==t&&(t=0),o("#vgrid0").length>0?s():n(e,t)}var a=e["default"],o=a.$;t["default"]=a.View.extend({didInsertElement:function(){o(document).bind("keydown",function(e){e.ctrlKey&&e.altKey&&71===e.keyCode&&i(22)})}})}),define("dummy/views/liquid-child",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.ContainerView.extend({classNames:["liquid-child"],resolveInsertionPromise:n.on("didInsertElement",function(){this.$().css({visibility:"hidden"}).hide(),this._resolveInsertion&&this._resolveInsertion(this)})})}),define("dummy/views/liquid-if",["dummy/views/liquid-outlet","ember","exports"],function(e,t,n){"use strict";var s=e["default"],i=t["default"],a=!!i.HTMLBars;n["default"]=s.extend({liquidUpdate:i.on("init",i.observer("showFirst",function(){var e=this.get("templates")[this.get("showFirst")?0:1];if(!e||!a&&e===i.Handlebars.VM.noop)return void this.set("currentView",null);var t=i._MetamorphView.create({container:this.container,template:e,liquidParent:this,contextBinding:"liquidParent.context",liquidContext:this.get("showFirst"),hasLiquidContext:!0});this.set("currentView",t)}))})}),define("dummy/views/liquid-outlet",["ember","liquid-fire","exports"],function(e,t,n){"use strict";function s(e){return{width:e.width(),literalWidth:parseInt(e.css("width"),10),height:e.height(),literalHeight:parseInt(e.css("height"),10)}}var i=e["default"],a=t.Promise,o=t.animate,r=t.stop,l=i.String.capitalize;n["default"]=i.ContainerView.extend({classNames:["liquid-container"],growDuration:250,growPixelsPerSecond:200,growEasing:"slide",enableGrowth:!0,init:function(){this._super(),i.A(this._childViews).clear(),this.get("containerless")&&(this.set("innerClassNameBindings",this.get("classNameBindings")),this.set("classNameBindings",i.A()))},_currentViewWillChange:i.beforeObserver("currentView",function(){}),_currentViewDidChange:i.on("init",i.observer("currentView",function(){var e,t=this.get("childViews.lastObject"),n=this.get("currentView");if(e=!this._hasTransitioned,this._hasTransitioned=!0,!(!t&&!n||t&&t.get("currentView")===n||this._runningTransition&&this._runningTransition.oldView===t&&this._runningTransition.newContent===n)){var s=this.get("transitions").transitionFor(this,t,n,this.get("use"),e);this._runningTransition&&this._runningTransition.interrupt(),this._runningTransition=s,s.run()["catch"](function(e){i.RSVP.Promise.resolve()._onerror(e)})}})),_liquidChildFor:function(e){e&&!e.get("hasLiquidContext")&&e.set("liquidContext",e.get("context"));var t=this.container.lookupFactory("view:liquid-child"),n={currentView:e};return this.get("containerless")&&(n.classNames=this.get("classNames").without("liquid-container"),n.classNameBindings=this.get("innerClassNameBindings")),t.create(n)},_pushNewView:function(e){if(!e)return a.resolve();
var t=this._liquidChildFor(e),n=new a(function(e){t._resolveInsertion=e});return this.pushObject(t),n},cacheSize:function(){var e=this.$();e&&(this._cachedSize=s(e))},unlockSize:function(){function e(){var e=t.$();e&&e.css({width:"",height:""})}var t=this;this._scaling?this._scaling.then(e):e()},_durationFor:function(e,t){return Math.min(this.get("growDuration"),1e3*Math.abs(e-t)/this.get("growPixelsPerSecond"))},_adaptDimension:function(e,t,n){if(t[e]!==n[e]&&this.get("enableGrowth")){var s={};return s[e]=[n["literal"+l(e)],t["literal"+l(e)]],o(this,s,{duration:this._durationFor(t[e],n[e]),queue:!1,easing:this.get("growEasing")})}var i=this.$();return i&&i[e](n[e]),a.resolve()},adaptSize:function(){r(this);var e=this.$();if(e){var t=s(e);"undefined"==typeof this._cachedSize&&(this._cachedSize=t),e.width(this._cachedSize.width),e.height(this._cachedSize.height),this._scaling=a.all([this._adaptDimension("width",this._cachedSize,t),this._adaptDimension("height",this._cachedSize,t)])}}})}),define("dummy/views/liquid-with",["dummy/views/liquid-outlet","ember","exports"],function(e,t,n){"use strict";var s=e["default"],i=t["default"];n["default"]=s.extend({liquidUpdate:i.on("init",i.observer("boundContext",function(){var e=this.get("boundContext");if(i.isEmpty(e))return void this.set("currentView",null);var t=i._MetamorphView.create({container:this.container,templateName:"liquid-with",boundContext:e,liquidWithParent:this,liquidContext:e,hasLiquidContext:!0});this.set("currentView",t)}))})}),define("dummy/config/environment",["ember"],function(e){var t="dummy";try{var n=t+"/config/environment",s=e["default"].$('meta[name="'+n+'"]').attr("content"),i=JSON.parse(unescape(s));return{"default":i}}catch(a){throw new Error('Could not read config from meta tag with name "'+n+'".')}}),runningTests?require("dummy/tests/test-helper"):require("dummy/app")["default"].create({});