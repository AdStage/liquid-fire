define("liquid-fire/app",["ember","ember/resolver","ember/load-initializers","exports"],function(e,t,n,i){"use strict";var s=e["default"],a=t["default"],o=n["default"];s.MODEL_FACTORY_INJECTIONS=!0;var r=s.Application.extend({modulePrefix:"liquid-fire",Resolver:a});o(r,"liquid-fire"),i["default"]=r}),define("liquid-fire/components/code-snippet",["ember","liquid-fire/snippets","exports"],function(e,t,n){"use strict";var i=e["default"],s=t["default"],a=require("highlight.js");n["default"]=i.Component.extend({tagName:"pre",classNameBindings:["language"],unindent:!0,_unindent:function(e){if(!this.get("unindent"))return e;for(var t,n,i=e.split("\n"),s=0;s<i.length;s++)t=/^\s*/.exec(i[s]),t&&("undefined"==typeof n||n>t[0].length)&&(n=t[0].length);return"undefined"!=typeof n&&n>0&&(e=e.replace(new RegExp("(\\n|^)\\s{"+n+"}","g"),"$1")),e},source:function(){return this._unindent((s[this.get("name")]||"").replace(/^(\s*\n)*/,"").replace(/\s*$/,""))}.property("name"),didInsertElement:function(){a.highlightBlock(this.get("element"))},language:function(){var e=/\.(\w+)$/i.exec(this.get("name"));if(e)switch(e[1].toLowerCase()){case"js":return"javascript";case"hbs":return"handlebars"}}.property("name")})}),define("liquid-fire/snippets",["exports"],function(e){"use strict";e["default"]={"bind-demo-style.css":"#liquid-bind-demo {\n    font-size: 3em;\n    text-align: center;\n}\n\n#liquid-bind-demo > div {\n    display: inline-block;\n    height: 1.5em;\n    width: 1.15em;\n    text-align: center;\n    vertical-align: top;\n    overflow: hidden;\n\n    /* without this, overflow:hidden won't take effect because the things\n       we're trying to hide are on a separate accelerated\n       context. */\n    -webkit-transform: translateY(0);\n    -moz-transform: translateY(0);\n    transform: translateY(0);\n}\n","bind-demo-transition.js":"  this.transition(\n    this.childOf('#liquid-bind-demo > div'),\n    this.use('toUp')\n  );","child-of-example.js":"this.transition(\n  this.childOf('#main-container'),\n  this.use('toUp')\n);\n","child-of-example.hbs":'<div id="main-container">\n  {{liquid-outlet}}\n</div>\n',"cross-fade-definition.js":"  this.define('crossFade', function(oldView, insertNewView, opts) {\n    stop(oldView);\n    return insertNewView().then(function(newView) {\n      return Promise.all([\n        animate(oldView, {opacity: 0}, opts),\n        animate(newView, {opacity: [1, 0]}, opts)\n      ]);\n    });\n  });","has-class-example-dom.hbs":'<div class="ember-view liquid-child magical">\n  It\'s a unicorn!\n</div>\n',"has-class-example.hbs":"{{#liquid-if isUnicorn class=\"magical\"}}\n  It's a unicorn!\n{{else}}\n  It's something else!\n{{/liquid-if}}\n","has-class-example.js":"this.transition(\n  this.hasClass('magical'),\n  this.use('crossFade')\n);\n","liquid-bind-demo.hbs":'<div id="liquid-bind-demo">\n  <div>{{liquid-bind hours}}</div>:\n  <div>{{liquid-bind minutes}}</div>:\n  <div>{{liquid-bind seconds}}</div>\n</div>',"liquid-box-demo-transition.js":"  this.transition(\n    // hasClass('vehicles') is true even during the first render, so\n    // we also require fromNonEmptyModel to prevent an animation when\n    // the page first loads.\n    this.fromNonEmptyModel(),\n    this.hasClass('vehicles'),\n    this.use('crossFade')\n  );","liquid-box-demo.hbs":'<div id="liquid-box-demo">\n  <label>I\'m renting a </label>\n  {{view Ember.Select value=vehicle content=vehicles}}\n\n  {{#liquid-box measure="lastChild"}}\n    {{#liquid-if isBike class="vehicles"}}\n      <label>\n        Would you like a helmet? {{input type="checkbox" value="helmet"}}\n      </label>\n    {{else}}\n      <label>License Number</label>\n      {{input type="text" value=license}}\n      <label>License State</label>\n      {{view Ember.Select value=state content=states}}\n    {{/liquid-if}}\n  {{/liquid-box}}\n  <button type="button" class="btn btn-success">Yay, let\'s go!</button>\n</div>',"liquid-if-demo-transition.js":"  this.transition(\n    this.withinRoute('helpers.liquid-if'),\n    this.use('crossFade')\n  );","liquid-if-demo.hbs":'<div id="liquid-if-demo">\n  <div>\n    <label>Are you a parent?\n      {{input type="checkbox" checked=isParent}}\n    </label>\n  </div>\n  <div>\n    {{#liquid-if isParent}}\n      <label>How many children do you have?</label>\n      {{input type="number" value=numKids}}\n    {{else}}\n      I bet you get a lot of nice sleep.\n    {{/liquid-if}}\n  </div>\n</div>',"liquid-measure-demo.hbs":'<div id="liquid-measure-demo">\n  <div>\n    <h4>Editor</h4>\n    {{input value=title placeholder="Your Title"}}\n    {{textarea rows=3 value=body placeholder="Your post goes here..."}}\n  </div>\n  <div>\n    <h4>Preview</h4>\n    {{#liquid-measure height=postHeight width=postWidth class="post"}}\n      <span class="title">{{title}}</span>\n      <p>{{body}}</p>\n    {{/liquid-measure}}\n    <div class="size">\n      {{postWidth}}px\n      by \n      {{postHeight}}px\n    </div>\n  </div>\n</div>',"outlet.hbs":'<div class="demo-container">\n  {{liquid-outlet}}\n</div>',"model-match-examples.js":"// Matches any transition that ends up with a model that's a Person.\nthis.transition(\n  this.toModel(function(){ this instanceof Person }),\n  this.use('toLeft')\n);\n\n// Instance checks are common so there's a shorthand. This is\n// equivalent to the previous example.\nthis.transition(\n  this.toModel({instanceOf: Person}),\n  this.use('toLeft')\n);\n\n// You can list multiple constraints and they will be tested in order\n// and all must pass.\nthis.transition(\n  this.toModel({instanceOf: Person}),\n  this.toModel(function(){ return this.get('age') > 21 }),\n  this.use('toLeft')\n);\n\n// You can constrain the from-model too.\nthis.transition(\n  this.fromModel({instanceOf: Person}),\n  this.toModel({instanceOf: Pet}),\n  this.use('toLeft')\n);\n\n// When they're both the same, you can use shorthand:\nthis.transition(\n  this.betweenModels({instanceOf: Person}),\n  this.use('toLeft')\n);\n\n// `null` matches an undefined model. The from-model will be undefined\n// during the initial render.\nthis.transition(\n  this.fromModel(null),\n  this.toModel({instanceOf: Person}),\n  this.use('fade')\n);\n\n// Your test functions also receive an argument containing the \"other\"\n// model, so you can do direct comparisons between them:\nthis.transition(\n  // First ensure that both models are defined, so that we know we can\n  // safely do a comparison at all.\n  this.toModel(function(){return typeof(this) !== 'undefined'; }),\n  this.fromModel(function(){return typeof(this) !== 'undefined'; }),\n\n  // Then compare them by id and only run this animation if we're\n  // moving to a model with a higher id.\n  this.toModel(function(fromModel) {\n    return this.get('id') > fromModel.get('id');\n  }),\n\n  this.use('toLeft')\n);\n\n// The above pattern of testing for non-undefined models is common, so\n// there's are shorthand methods fromNonEmptyModel, toNonEmptyModel,\n// and betweenNonEmptyModels:\nthis.transition(\n  this.betweenNonEmptyModels(),\n  this.toModel(function(fromModel) {\n    return this.get('id') > fromModel.get('id');\n  }),\n  this.use('toLeft')\n);\n","route-match-examples.js":"// Matches any transition that ends up in the route named 'foo', no\n// matter where it came from.\nthis.transition(\n  this.toRoute('foo'),\n  this.use('toLeft')\n);\n\n// This is equivalent to the previous example, but showing a more\n// generic form that lets you provide an arbitrary test.\nthis.transition(\n  this.toRoute(function(){ return this === 'foo'; }),\n  this.use('toLeft')\n);\n\n// You can list multiple routes, and the constraint will be satisfied\n// by any of them. This wil match any transition that ends up in 'foo'\n// or 'bar'.\nthis.transition(\n  this.toRoute('foo', 'bar'),\n  this.use('toLeft')\n);\n\n// You can mix and match strings and functions. This is equivalent to\n// the previous example.\nthis.transition(\n  this.toRoute('foo', function(){ return this === 'bar'; }),\n  this.use('toLeft')\n);\n\n// All of these examples apply to fromRoute too. This will match any\n// transition from 'foo' to 'bar', or from 'foo' to any route name\n// starting with 'q'.\nthis.transition(\n  this.fromRoute('foo'),\n  this.toRoute('bar', function(){ return /^q/.test(this); }),\n  this.use('toLeft')\n);\n\n// withinRoute is just a shorthand. Instead of saying this:\nthis.transition(\n  this.fromRoute('foo'),\n  this.toRoute('foo'),\n  this.use('toLeft')\n);\n// you can say this:\nthis.transition(\n  this.withinRoute('foo'),\n  this.use('toLeft')\n);\n\n// All of the route constraints also accept null to match the empty\n// route. The empty route is the initial route the very first time an\n// outlet is rendered.  So this example causes the 'foo' route to fade\n// in during the initial render:\nthis.transition(\n  this.fromRoute(null),\n  this.toRoute('foo'),\n  this.use('fade')\n);\n","simple-transition-map.js":"export default function(){\n  this.transition(\n    this.fromRoute('people.index'),\n    this.toRoute('people.detail'),\n    this.use('toLeft')\n  );\n  this.transition(\n    this.fromRoute('people.detail'),\n    this.toRoute('people.index'),\n    this.use('toRight')\n  );\n};\n","transition-definitions.js":'import { animate, stop } from "libs/liquid-fire";\n\nexport function crossFade(oldView, insertNewView, opts) {\n  stop(oldView);\n  return insertNewView().then(function(newView) {\n    return Promise.all([\n      animate(oldView, {opacity: 0}, opts),\n      animate(newView, {opacity: [1, 0]}, opts)\n    ]);\n  });\n});\n\nexport function fade(oldView, insertNewView) {\n  stop(oldView);\n  return animate(oldView, {opacity: 0})\n    .then(insertNewView)\n    .then(function(newView){\n      return animate(newView, {opacity: [1, 0]});\n    });\n});  \n\n',"transition-demo.js":"  this.transition(\n    this.fromRoute('helpers.liquid-outlet.index'),\n    this.toRoute('helpers.liquid-outlet.other'),\n    this.use('toLeft')\n  );","with-demo.hbs":'<div id="liquid-with-demo" class="demo-container">\n  {{#liquid-with model controller="demo"}}\n    {{id}}\n    <button {{action "higher"}}>Go</button>\n  {{/liquid-with}}\n</div>',"with-demo.js":"  this.transition(\n    this.withinRoute('helpers.liquid-with.page'),\n    this.use('rotateBelow')\n  );"}}),define("liquid-fire/components/liquid-box",["ember","liquid-fire/libs/liquid-fire","exports"],function(e,t,n){"use strict";var i=e["default"],s=t.animate,a=t.stop;n["default"]=i.Component.extend({classNames:["liquid-box"],duration:250,initialSize:function(){var e=this.$(),t=this._childViews[0];t.updateMeasurements(),e.css({height:t.get("height"),width:t.get("width")})}.on("didInsertElement"),resize:i.observer("contentHeight","contentWidth",function(){i.run.debounce(this,"_resize",100)}),_resize:function(){a(this),s(this,{width:this.get("contentWidth"),height:this.get("contentHeight")},{duration:this.get("duration")})}})}),define("liquid-fire/libs/liquid-fire",["liquid-fire/libs/liquid-fire/transitions","liquid-fire/libs/liquid-fire/animate","liquid-fire/libs/liquid-fire/promise","liquid-fire/libs/liquid-fire/initialize","exports"],function(e,t,n,i,s){"use strict";var a=e["default"],o=t.animate,r=t.stop,l=n["default"],h=i["default"];s.Transitions=a,s.animate=o,s.stop=r,s.Promise=l,s.initialize=h}),define("liquid-fire/libs/liquid-fire/transitions",["liquid-fire/libs/liquid-fire/transition","liquid-fire/libs/liquid-fire/dsl","liquid-fire/libs/liquid-fire/predefined_transitions","exports"],function(e,t,n,i){"use strict";function s(){this._namedTransitions={},this._map={},this.map(r)}var a=e["default"],o=t["default"],r=n["default"];s.prototype={lookup:function(e){var t=this._namedTransitions[e];if(!t)throw new Error("unknown transition name: "+e);return t},transitionFor:function(e,t,n){var i,s=this.match(e,t,n);return s&&"function"==typeof s.method?i=s.method:s&&(i=this.lookup(s.method)),new a(e,t,n,i,s?s.args:void 0,this)},map:function(e){return e&&e.apply(new o(this)),this},register:function(e,t,n,i){this._register(this._map,[e.from,e.to,n,t.from,t.to],i)},_register:function(e,t,n){for(var i=t[0],s=0;s<i.length;s++){var a=i[s];if("function"==typeof a)if(e.__functions||(e.__functions=[]),1===t.length)e.__functions.push([a,n]);else{var o={};this._register(o,t.slice(1),n),e.__functions.push([a,o])}else 1===t.length?e[a]=n:(e[a]||(e[a]={}),this._register(e[a],t.slice(1),n))}},_viewProperties:function(e,t){return e&&t&&(e=e.get(t)),e?{route:e.get("renderedName"),context:e.get("liquidContext")}:{}},_ancestorsRenderedName:function(e){for(;e&&!e.get("renderedName");)e=e.get("_parentView");return e?e.get("renderedName"):void 0},match:function(e,t,n){var i={leaving:this._viewProperties(t,"currentView"),entering:this._viewProperties(n),parentView:e};return t&&!i.leaving.route&&(i.leaving.route=this._ancestorsRenderedName(e)),n&&!i.entering.route&&(i.entering.route=i.leaving.route||this._ancestorsRenderedName(e)),this._match(i,this._map,[i.leaving.route,i.entering.route,e,i.leaving.context,i.entering.context])},_match:function(e,t,n){var i,s,a,r=0,l=n[0],h=n.slice(1),u=[l||o.EMPTY].concat(t.__functions).concat(o.ANY);for(r=0;r<u.length;r++)if(i=u[r],i&&(s="function"==typeof i[0]?i[0].apply(l,this._predicateArgs(e,n.length))?i[1]:null:t[i])){if(0===h.length)return s;if(a=this._match(e,s,h))return a}},_predicateArgs:function(e,t){var n=5-t;switch(n){case 0:return[e.entering.route];case 1:return[e.leaving.route];case 2:return[];case 3:return[e.entering.context];case 4:return[e.leaving.context]}}},s.map=function(e){var t=new s;return t.map(e),t},i["default"]=s}),define("liquid-fire/libs/liquid-fire/transition",["liquid-fire/libs/liquid-fire/promise","exports"],function(e,t){"use strict";function n(e,t,n,i,s,a){this.parentView=e,this.oldView=t,this.newContent=n,this.animation=i,this.animationArgs=s,this.transitionMap=a}var i=e["default"];n.prototype={run:function(){function e(){return t.inserted?t.inserted:t.inserted=t.parentView._pushNewView(t.newContent)}if(!this.animation)return this.oldView&&this.oldView.destroy(),this.parentView._pushNewView(this.newContent).then(function(e){var t;e&&(t=e.$())&&t.show()});var t=this;return this.animation.apply(this,[this.oldView,e].concat(this.animationArgs)).then(function(){t.maybeDestroyOldView()})},maybeDestroyOldView:function(){!this.interrupted&&this.oldView&&this.oldView.destroy()},interrupt:function(){this.inserted||(this.inserted=i.cast(null),this.interrupted=!0)},lookup:function(e){return this.transitionMap.lookup(e)}},t["default"]=n}),define("liquid-fire/libs/liquid-fire/promise",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.RSVP.Promise}),define("liquid-fire/libs/liquid-fire/dsl",["liquid-fire/libs/liquid-fire/animate","exports"],function(e,t){"use strict";function n(e){this.map=e}function i(e){if(!e)return n.EMPTY;if("function"==typeof e)return e;if(e.instanceOf)return function(){return this instanceof e.instanceOf||this&&this.get&&this.get("model")&&this.get("model")instanceof e.instanceOf};throw new Error("unknown context matcher: "+JSON.stringify(e))}var s=e.setDefaults;n.prototype={setDefault:function(e){s(e)},define:function(e,t){this.map._namedTransitions[e]=t},_withEmpty:function(e){return e||n.EMPTY},_combineMatchers:function(e){return[e.reduce(function(e,t){if("function"!=typeof e||"function"!=typeof t)throw new Error("cannot combine empty model matcher with any other constraints");return function(){return e.apply(this,arguments)&&t.apply(this,arguments)}})]},transition:function(){for(var e,t=[],i={},s={},a=Array.prototype.slice.apply(arguments).reduce(function(e,t){return e.concat(t)},[]),o=0;o<a.length;o++){var r=a[o];if("action"===r.type){if(e)throw new Error("each transition definition must contain exactly one 'use' statement");e={method:r.payload,args:r.args}}else if("route"===r.type){if(i[r.side])throw new Error("A transition definition contains multiple constraints on "+r.side+"Route");i[r.side]=r.payload.map(this._withEmpty)}else"parent"===r.type?t.push(r.payload):(s[r.side]||(s[r.side]=[]),s[r.side].push(r.payload))}if(!e)throw new Error("a transition definition contains no 'use' statement");i.from||(i.from=[n.ANY]),i.to||(i.to=[n.ANY]),0===t.length&&t.push(n.ANY),s.from||(s.from=[n.ANY]),s.to||(s.to=[n.ANY]),t=this._combineMatchers(t),s.from=this._combineMatchers(s.from),s.to=this._combineMatchers(s.to),this.map.register(i,s,t,e)},fromRoute:function(){return{side:"from",type:"route",payload:Array.prototype.slice.apply(arguments)}},toRoute:function(){return{side:"to",type:"route",payload:Array.prototype.slice.apply(arguments)}},withinRoute:function(){return[this.fromRoute.apply(this,arguments),this.toRoute.apply(this,arguments)]},fromModel:function(e){return{side:"from",type:"context",payload:i(e)}},toModel:function(e){return{side:"to",type:"context",payload:i(e)}},betweenModels:function(e){return[this.fromModel(e),this.toModel(e)]},hasClass:function(e){return{type:"parent",payload:function(){return this&&-1!==this.get("classNames").indexOf(e)}}},childOf:function(e){return{type:"parent",payload:function(){return this&&Ember.$("#"+this.morph.start).parent().is(e)}}},fromNonEmptyModel:function(){return this.fromModel(function(){return"undefined"!=typeof this})},toNonEmptyModel:function(){return this.toModel(function(){return"undefined"!=typeof this})},betweenNonEmptyModels:function(){return this.betweenModels(function(){return"undefined"!=typeof this})},use:function(e){return{type:"action",payload:e,args:Array.prototype.slice.apply(arguments,[1])}}},n.ANY="__liquid-fire-ANY",n.EMPTY="__liquid-fire-EMPTY",t["default"]=n}),define("liquid-fire/libs/liquid-fire/animate",["liquid-fire/libs/liquid-fire/promise","exports"],function(e,t){"use strict";function n(e,t,n){return new a(function(i){var s;return e&&(s=e.$())?(n||(n={}),"undefined"==typeof n.display&&(n.display="auto"),e._velocityAnimations||(e._velocityAnimations=[]),e._velocityAnimations.push(i),n.begin=function(e){for(var t=0;t<e.length;t++)e[t].style.display=""},n.complete=function(){var t=e._velocityAnimations.indexOf(i);t>=0&&e._velocityAnimations.splice(t,1),i()},void s.velocity(t,n)):void i()})}function i(e){var t,n;if(e&&(t=e.$())&&(t.velocity("stop",!0),n=e._velocityAnimations)){for(var i=0;i<n.length;i++)n[i]();e._velocityAnimations=[]}}function s(e){for(var t in e)e.hasOwnProperty(t)&&($.Velocity.defaults[t]=e[t])}var a=e["default"];t.animate=n,t.stop=i,t.setDefaults=s}),define("liquid-fire/libs/liquid-fire/predefined_transitions",["liquid-fire/libs/liquid-fire/animate","liquid-fire/libs/liquid-fire/promise","exports"],function(e,t,n){"use strict";var i=e.animate,s=e.stop,a=t["default"];n["default"]=function(){function e(e,t){return function(n,o,r){var l={},h={};return l[e]=100*t+"%",h[e]=["0%",-100*t+"%"],s(n),o().then(function(e){return a.all([i(n,l,r),i(e,h,r)])})}}this.setDefault({duration:250}),this.define("toRight",e("translateX",1)),this.define("toLeft",e("translateX",-1)),this.define("toUp",e("translateY",-1)),this.define("toDown",e("translateY",1)),this.define("crossFade",function(e,t,n){return s(e),t().then(function(t){return a.all([i(e,{opacity:0},n),i(t,{opacity:[1,0]},n)])})}),this.define("fade",function(e,t){return s(e),i(e,{opacity:0}).then(t).then(function(e){return i(e,{opacity:[1,0]})})}),this.define("rotateBelow",function(e,t,n){var o=1;return n&&"cw"===n.direction&&(o=-1),s(e),t().then(function(t){return e.$().css("transform-origin","50% 150%"),t.$().css("transform-origin","50% 150%"),a.all([i(e,{rotateZ:-90*o+"deg"},n),i(t,{rotateZ:["0deg",90*o+"deg"]},n)])})})}}),define("liquid-fire/libs/liquid-fire/initialize",["liquid-fire/libs/liquid-fire/transitions","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=function(e,t){e.register("transitions:map",n.map(t),{instantiate:!1}),["outlet","with","if"].forEach(function(t){e.injection("view:liquid-"+t,"transitions","transitions:map")})}}),define("liquid-fire/components/liquid-measure",["ember","liquid-fire/libs/liquid-fire/mutation-observer","exports"],function(e,t,n){"use strict";var i=e["default"],s=t["default"];n["default"]=i.Component.extend({attributeBindings:["style"],style:"display: inline-block;",didInsertElement:function(){var e=this;this.updateMeasurements(),this.observer=new s(function(){e.updateMeasurements()}),this.observer.observe(this.get("element"),{attributes:!0,subtree:!0,childList:!0}),this.destroyer=function(){e.willDestroyElement()},window.addEventListener("unload",this.destroyer)},willDestroyElement:function(){this.destroyer&&(window.removeEventListener("unload",this.destroyer),this.destroyer=null),this.observer&&(this.observer.disconnect(),this.observer=null)},updateMeasurements:function(){var e,t=this.$();if(t||t[0]){switch(this.get("method")){case"biggestChild":e=this._measureBiggestChild(t);break;case"lastChild":e=this._measureLastChild(t);break;default:e=this._measure(t)}this.setProperties(e)}},_measure:function(e){var t,n;return t=0===e[0].offsetWidth?0:e.width(),n=0===e[0].offsetHeight?0:e.height(),{width:t,height:n}},_measureBiggestChild:function(e){var t=this,n={width:0,height:0};return e.children().each(function(){var e=t._measure(i.$(this));e.width>n.width&&(n.width=e.width),e.height>n.height&&(n.height=e.height)}),n},_measureLastChild:function(e){return this._measure(e.children().not("script").last())}})}),define("liquid-fire/libs/liquid-fire/mutation-observer",["exports"],function(e){"use strict";function t(e){this.callback=e}t.prototype={observe:function(){this.interval=setInterval(this.callback,100)},disconnect:function(){clearInterval(this.interval)}};var n=window.MutationObserver||window.WebkitMutationObserver||t;e["default"]=n}),define("liquid-fire/components/nav-link",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Component.extend({classNames:["nav-link"],classNameBindings:["direction"],preGlyphicon:function(){return this.get("topic")&&"back"===this.get("direction")?"glyphicon-chevron-left":void 0}.property("direction","topic"),postGlyphicon:function(){return this.get("topic")&&"forward"===this.get("direction")?"glyphicon-chevron-right":void 0}.property("direction","topic")})}),define("liquid-fire/controllers/application",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Controller.extend({tableOfContents:function(){return[{route:"index",title:"Introduction"},{route:"helpers",title:"Template Helpers",children:[{route:"helpers.liquid-outlet",title:"liquid-outlet"},{route:"helpers.liquid-with",title:"liquid-with"},{route:"helpers.liquid-bind",title:"liquid-bind"},{route:"helpers.liquid-if",title:"liquid-if"},{route:"helpers.liquid-measure",title:"liquid-measure"},{route:"helpers.liquid-box",title:"liquid-box"}]},{route:"transition-map",title:"Transition Map",children:[{route:"transition-map.route-constraints",title:"Matching by route"},{route:"transition-map.model-constraints",title:"Matching by model"},{route:"transition-map.dom-constraints",title:"Matching by DOM context"},{route:"transition-map.defining-transitions",title:"Defining transition animations"}]},{title:"Transitions",children:["Predefined transitions","Custom transitions","animate","stop"]}]}.property(),flatContents:function(){var e=[];return this.get("tableOfContents").forEach(function(t){e.push(t),t.children&&(e=e.concat(t.children))}),e}.property("tableOfContents"),currentIndex:function(){for(var e,t,n=this.get("flatContents"),i=this.get("currentRouteName"),s=0;s<n.length;s++)t=n[s],t.route&&new RegExp("^"+t.route.replace(/\./g,"\\.")).test(i)&&("undefined"==typeof e||n[e].route.length<t.route.length)&&(e=s);return e}.property("currentRouteName","flatContents"),nextTopic:function(){var e=this.get("flatContents"),t=this.get("currentIndex");return"undefined"!=typeof t?e[t+1]:void 0}.property("currentIndex","flatContents"),prevTopic:function(){var e=this.get("flatContents"),t=this.get("currentIndex");return"undefined"!=typeof t?e[t-1]:void 0}.property("currentIndex","flatContents")})}),define("liquid-fire/controllers/demo",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.ObjectController.extend({actions:{higher:function(){var e=this.get("model");this.transitionToRoute("helpers.liquid-with.page",e.get("id")+1)}}})}),define("liquid-fire/controllers/helpers/liquid-bind",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Controller.extend({start:function(){var e=this;this.interval=setInterval(function(){e.tick()},1e3),this.tick()}.on("init"),stop:function(){clearInterval(this.interval)}.on("willDestroy"),tick:function(){var e=moment();this.set("hours",e.format("hh")),this.set("minutes",e.format("mm")),this.set("seconds",e.format("ss"))}})}),define("liquid-fire/controllers/helpers/liquid-box",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Controller.extend({vehicle:"bike",vehicles:["bike","car"],states:["","AL","AK","AZ","AR","CA","CO","CT"],isBike:n.computed.equal("vehicle","bike")})}),define("liquid-fire/controllers/helpers/liquid-if",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Controller.extend({numKids:1})}),define("liquid-fire/controllers/sample",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.ObjectController.extend({usingSampleController:!0})}),define("liquid-fire/controllers/test-bind",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Controller.extend({counter:0,init:function(){var e=this;this.interval=setInterval(function(){e.tick()},1e3),this.tick()},willDestroy:function(){clearInterval(this.interval)},tick:function(){this.set("counter",this.get("counter")+1)}})}),define("liquid-fire/controllers/test-if",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Controller.extend({message:"Hello"})}),define("liquid-fire/controllers/test-with",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.ObjectController.extend({actions:{increment:function(){this.transitionToRoute("test-with",parseInt(this.get("model.id"))+1)},decrement:function(){this.transitionToRoute("test-with",parseInt(this.get("model.id"))-1)}}})}),define("liquid-fire/helpers/liquid-bind",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=function(e,t){var i=t.data.view.container.lookupFactory("view:liquid-bind");return t.hash.boundContextBinding=e,n.Handlebars.helpers.view.call(this,i,t)}}),define("liquid-fire/helpers/liquid-if",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=function(e,t){var i=t.data.view.container.lookupFactory("view:liquid-if");return t.hash.firstTemplate=t.fn,delete t.fn,t.hash.secondTemplate=t.inverse,delete t.inverse,t.hash.showFirstBinding=e,n.Handlebars.helpers.view.call(this,i,t)}}),define("liquid-fire/helpers/liquid-outlet",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=function(e,t){return e&&e.data&&e.data.isRenderData&&(t=e,e="main"),t.hash.view="liquid-outlet",n.Handlebars.helpers.outlet.call(this,e,t)}}),define("liquid-fire/helpers/liquid-with",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=function(){var e=arguments[0],t=arguments[arguments.length-1],i=t.data.view.container.lookupFactory("view:liquid-with"),s={data:t.data,hash:{},hashTypes:{}};return i=i.extend({originalArgs:Array.prototype.slice.apply(arguments,[0,-1]),originalHash:t.hash,originalHashTypes:t.hashTypes,innerTemplate:t.fn}),s.hash.boundContextBinding=e,["class","classNames","classNameBindings"].forEach(function(e){t.hash[e]&&(s.hash[e]=t.hash[e],s.hashTypes[e]=t.hashTypes[e])}),n.Handlebars.helpers.view.call(this,i,s)}}),define("liquid-fire/helpers/with-apply",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=function(e){var t=e.data.view,i=t.get("liquidWithParent"),s=i.get("originalArgs").slice();return s[0]="lwith-view.boundContext",e=n.copy(e),e.data.keywords["lwith-view"]=t,e.fn=i.get("innerTemplate"),e.hash=i.get("originalHash"),e.hashTypes=i.get("originalHashTypes"),s.push(e),n.Handlebars.helpers["with"].apply(this,s)}}),define("liquid-fire/initializers/liquid-fire",["liquid-fire/libs/liquid-fire","liquid-fire/transitions","exports"],function(e,t,n){"use strict";var i=e.initialize,s=t["default"];n["default"]={name:"liquid-fire",initialize:function(e){i(e,s)}}}),define("liquid-fire/transitions",["exports"],function(e){"use strict";e["default"]=function(){this.transition(this.fromRoute("helpers.liquid-outlet.index"),this.toRoute("helpers.liquid-outlet.other"),this.use("toLeft")),this.transition(this.fromRoute("helpers.liquid-outlet.other"),this.toRoute("helpers.liquid-outlet.index"),this.use("toRight")),this.transition(this.withinRoute("helpers.liquid-with.page"),this.use("rotateBelow")),this.transition(this.childOf("#liquid-bind-demo > div"),this.use("toUp")),this.transition(this.withinRoute("helpers.liquid-if"),this.use("crossFade")),this.transition(this.fromNonEmptyModel(),this.hasClass("vehicles"),this.use("crossFade"))}}),define("liquid-fire/mixins/reset-scroll",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Mixin.create({activate:function(){this._super(),console.log("resetting scroll"),window.scrollTo(0,0)}})}),define("liquid-fire/router",["ember","exports"],function(e,t){"use strict";var n=e["default"],i=n.Router.extend({location:LiquidFireENV.locationType});i.map(function(){this.resource("helpers",function(){this.resource("helpers.liquid-outlet",{path:"liquid-outlet"},function(){this.route("other")}),this.resource("helpers.liquid-with",{path:"liquid-with"},function(){this.route("page",{path:"/:id"})}),this.resource("helpers.liquid-bind",{path:"liquid-bind"}),this.resource("helpers.liquid-if",{path:"liquid-if"}),this.resource("helpers.liquid-measure",{path:"liquid-measure"}),this.resource("helpers.liquid-box",{path:"liquid-box"}),this.resource("transition-map",function(){this.route("route-constraints"),this.route("model-constraints"),this.route("dom-constraints"),this.route("defining-transitions")})})}),t["default"]=i}),define("liquid-fire/routes/helpers/liquid-bind",["ember","liquid-fire/mixins/reset-scroll","exports"],function(e,t,n){"use strict";var i=e["default"],s=t["default"];n["default"]=i.Route.extend(s)}),define("liquid-fire/routes/helpers/liquid-box",["ember","liquid-fire/mixins/reset-scroll","exports"],function(e,t,n){"use strict";var i=e["default"],s=t["default"];n["default"]=i.Route.extend(s)}),define("liquid-fire/routes/helpers/liquid-if",["ember","liquid-fire/mixins/reset-scroll","exports"],function(e,t,n){"use strict";var i=e["default"],s=t["default"];n["default"]=i.Route.extend(s)}),define("liquid-fire/routes/helpers/liquid-measure",["ember","liquid-fire/mixins/reset-scroll","exports"],function(e,t,n){"use strict";var i=e["default"],s=t["default"];n["default"]=i.Route.extend(s)}),define("liquid-fire/routes/helpers/liquid-outlet",["ember","liquid-fire/mixins/reset-scroll","exports"],function(e,t,n){"use strict";var i=e["default"],s=t["default"];n["default"]=i.Route.extend(s)}),define("liquid-fire/routes/helpers/liquid-with",["ember","liquid-fire/mixins/reset-scroll","exports"],function(e,t,n){"use strict";var i=e["default"],s=t["default"];n["default"]=i.Route.extend(s)}),define("liquid-fire/routes/helpers/liquid-with/index",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Route.extend({beforeModel:function(){this.transitionTo("helpers.liquid-with.page",1)}})}),define("liquid-fire/routes/helpers/liquid-with/page",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Route.extend({model:function(e){return n.Object.create({id:parseInt(e.id)})}})}),define("liquid-fire/routes/index",["ember","liquid-fire/mixins/reset-scroll","exports"],function(e,t,n){"use strict";var i=e["default"],s=t["default"];
n["default"]=i.Route.extend(s)}),define("liquid-fire/routes/transition-map/dom-constraints",["ember","liquid-fire/mixins/reset-scroll","exports"],function(e,t,n){"use strict";var i=e["default"],s=t["default"];n["default"]=i.Route.extend(s)}),define("liquid-fire/routes/transition-map/model-constraints",["ember","liquid-fire/mixins/reset-scroll","exports"],function(e,t,n){"use strict";var i=e["default"],s=t["default"];n["default"]=i.Route.extend(s)}),define("liquid-fire/routes/transition-map/route-constraints",["ember","liquid-fire/mixins/reset-scroll","exports"],function(e,t,n){"use strict";var i=e["default"],s=t["default"];n["default"]=i.Route.extend(s)}),define("liquid-fire/templates/application",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,a){function o(e,t){var n,s="";return t.buffer.push("\n      <li>\n        "),n=i["if"].call(e,"route",{hash:{},hashTypes:{},hashContexts:{},inverse:x.program(5,h,t),fn:x.program(2,r,t),contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n\n        "),n=i["if"].call(e,"children",{hash:{},hashTypes:{},hashContexts:{},inverse:x.noop,fn:x.program(7,u,t),contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n      </li>\n      "),s}function r(e,t){var n,s,a,o="";return t.buffer.push("\n          "),s=i["link-to"]||e&&e["link-to"],a={hash:{},hashTypes:{},hashContexts:{},inverse:x.noop,fn:x.program(3,l,t),contexts:[e],types:["ID"],data:t},n=s?s.call(e,"route",a):g.call(e,"link-to","route",a),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n        "),o}function l(e,t){var n;n=i._triageMustache.call(e,"title",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),t.buffer.push(n||0===n?n:"")}function h(e,t){var n,s="";return t.buffer.push("\n          "),n=i._triageMustache.call(e,"title",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n        "),s}function u(e,t){var n,s="";return t.buffer.push("\n          <ul>\n          "),n=i.each.call(e,"child","in","children",{hash:{},hashTypes:{},hashContexts:{},inverse:x.noop,fn:x.program(8,d,t),contexts:[e,e,e],types:["ID","ID","ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n          </ul>\n        "),s}function d(e,t){var n,s="";return t.buffer.push("\n            <li>\n              "),n=i["if"].call(e,"child.route",{hash:{},hashTypes:{},hashContexts:{},inverse:x.program(12,f,t),fn:x.program(9,p,t),contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n            </li>\n          "),s}function p(e,t){var n,s,a,o="";return t.buffer.push("\n                "),s=i["link-to"]||e&&e["link-to"],a={hash:{},hashTypes:{},hashContexts:{},inverse:x.noop,fn:x.program(10,c,t),contexts:[e],types:["ID"],data:t},n=s?s.call(e,"child.route",a):g.call(e,"link-to","child.route",a),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n              "),o}function c(e,t){var n;n=i._triageMustache.call(e,"child.title",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),t.buffer.push(n||0===n?n:"")}function f(e,t){var n,s="";return t.buffer.push("\n                "),n=i._triageMustache.call(e,"child",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n              "),s}this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),a=a||{};var m,b,v,y="",x=this,g=i.helperMissing,q=this.escapeExpression;return a.buffer.push('<div class="header">\n  <div class="container">\n    <div class="row">\n      <div class="col-xs-6">Liquid Fire</div>\n      <div class="col-xs-6" style="text-align: right">\n        <a href="https://github.com/ef4/liquid-fire">\n          <img src="GitHub-Mark-Light-32px-aa8455ab6817de2b70a085b6d7e407f6.png">\n        </a>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class="container main">\n  <div>\n    <div class="content">\n      <div class="clearfix">\n        '),a.buffer.push(q((b=i["nav-link"]||t&&t["nav-link"],v={hash:{topic:"prevTopic",direction:"back"},hashTypes:{topic:"ID",direction:"STRING"},hashContexts:{topic:t,direction:t},contexts:[],types:[],data:a},b?b.call(t,v):g.call(t,"nav-link",v)))),a.buffer.push("\n        "),a.buffer.push(q((b=i["nav-link"]||t&&t["nav-link"],v={hash:{topic:"nextTopic",direction:"forward"},hashTypes:{topic:"ID",direction:"STRING"},hashContexts:{topic:t,direction:t},contexts:[],types:[],data:a},b?b.call(t,v):g.call(t,"nav-link",v)))),a.buffer.push("\n      </div>\n      "),m=i._triageMustache.call(t,"outlet",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:a}),(m||0===m)&&a.buffer.push(m),a.buffer.push('\n      <div class="clearfix">\n        '),a.buffer.push(q((b=i["nav-link"]||t&&t["nav-link"],v={hash:{topic:"prevTopic",direction:"back"},hashTypes:{topic:"ID",direction:"STRING"},hashContexts:{topic:t,direction:t},contexts:[],types:[],data:a},b?b.call(t,v):g.call(t,"nav-link",v)))),a.buffer.push("\n        "),a.buffer.push(q((b=i["nav-link"]||t&&t["nav-link"],v={hash:{topic:"nextTopic",direction:"forward"},hashTypes:{topic:"ID",direction:"STRING"},hashContexts:{topic:t,direction:t},contexts:[],types:[],data:a},b?b.call(t,v):g.call(t,"nav-link",v)))),a.buffer.push("\n      </div>\n    </div>\n\n    <ul>\n      "),m=i.each.call(t,"tableOfContents",{hash:{},hashTypes:{},hashContexts:{},inverse:x.noop,fn:x.program(1,o,a),contexts:[t],types:["ID"],data:a}),(m||0===m)&&a.buffer.push(m),a.buffer.push("\n    </ul>\n  </div>\n</div>\n\n\n"),y})}),define("liquid-fire/templates/components/code-snippet",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,a){this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),a=a||{};var o,r="";return o=i._triageMustache.call(t,"source",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:a}),(o||0===o)&&a.buffer.push(o),a.buffer.push("\n"),r})}),define("liquid-fire/templates/components/liquid-box",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,a){function o(e,t){var n,s="";return t.buffer.push("\n  "),n=i._triageMustache.call(e,"yield",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n"),s}this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),a=a||{};var r,l,h,u="",d=this,p=i.helperMissing;return l=i["liquid-measure"]||t&&t["liquid-measure"],h={hash:{height:"contentHeight",width:"contentWidth",method:"measure"},hashTypes:{height:"ID",width:"ID",method:"ID"},hashContexts:{height:t,width:t,method:t},inverse:d.noop,fn:d.program(1,o,a),contexts:[],types:[],data:a},r=l?l.call(t,h):p.call(t,"liquid-measure",h),(r||0===r)&&a.buffer.push(r),a.buffer.push("\n"),u})}),define("liquid-fire/templates/components/nav-link",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,a){function o(e,t){var n,s="";return t.buffer.push("\n  "),n=i["if"].call(e,"topic.route",{hash:{},hashTypes:{},hashContexts:{},inverse:x.program(8,d,t),fn:x.program(2,r,t),contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n"),s}function r(e,t){var n,s,a,o="";return t.buffer.push("\n    "),s=i["link-to"]||e&&e["link-to"],a={hash:{},hashTypes:{},hashContexts:{},inverse:x.noop,fn:x.program(3,l,t),contexts:[e],types:["ID"],data:t},n=s?s.call(e,"topic.route",a):g.call(e,"link-to","topic.route",a),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n  "),o}function l(e,t){var n,s="";return t.buffer.push("\n      "),n=i["if"].call(e,"preGlyphicon",{hash:{},hashTypes:{},hashContexts:{},inverse:x.noop,fn:x.program(4,h,t),contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n      "),n=i._triageMustache.call(e,"topic.title",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n      "),n=i["if"].call(e,"postGlyphicon",{hash:{},hashTypes:{},hashContexts:{},inverse:x.noop,fn:x.program(6,u,t),contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n    "),s}function h(e,t){var n="";return t.buffer.push("\n        <div "),t.buffer.push(y(i["bind-attr"].call(e,{hash:{"class":":glyphicon preGlyphicon"},hashTypes:{"class":"STRING"},hashContexts:{"class":e},contexts:[],types:[],data:t}))),t.buffer.push("></div>\n      "),n}function u(e,t){var n="";return t.buffer.push("\n        <div "),t.buffer.push(y(i["bind-attr"].call(e,{hash:{"class":":glyphicon postGlyphicon"},hashTypes:{"class":"STRING"},hashContexts:{"class":e},contexts:[],types:[],data:t}))),t.buffer.push("></div>\n      "),n}function d(e,t){var n,s="";return t.buffer.push("\n    "),n=i["if"].call(e,"preGlyphicon",{hash:{},hashTypes:{},hashContexts:{},inverse:x.noop,fn:x.program(9,p,t),contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n    "),n=i["if"].call(e,"topic.title",{hash:{},hashTypes:{},hashContexts:{},inverse:x.program(13,f,t),fn:x.program(11,c,t),contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n    "),n=i["if"].call(e,"postGlyphicon",{hash:{},hashTypes:{},hashContexts:{},inverse:x.noop,fn:x.program(15,m,t),contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n  "),s}function p(e,t){var n="";return t.buffer.push("\n      <div "),t.buffer.push(y(i["bind-attr"].call(e,{hash:{"class":":glyphicon preGlyphicon"},hashTypes:{"class":"STRING"},hashContexts:{"class":e},contexts:[],types:[],data:t}))),t.buffer.push("></div>\n    "),n}function c(e,t){var n;n=i._triageMustache.call(e,"topic.title",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),t.buffer.push(n||0===n?n:"")}function f(e,t){var n;n=i._triageMustache.call(e,"topic",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),t.buffer.push(n||0===n?n:"")}function m(e,t){var n="";return t.buffer.push("\n      <div "),t.buffer.push(y(i["bind-attr"].call(e,{hash:{"class":":glyphicon postGlyphicon"},hashTypes:{"class":"STRING"},hashContexts:{"class":e},contexts:[],types:[],data:t}))),t.buffer.push("></div>\n    "),n}this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),a=a||{};var b,v="",y=this.escapeExpression,x=this,g=i.helperMissing;return b=i["if"].call(t,"topic",{hash:{},hashTypes:{},hashContexts:{},inverse:x.noop,fn:x.program(1,o,a),contexts:[t],types:["ID"],data:a}),(b||0===b)&&a.buffer.push(b),a.buffer.push("\n\n"),v})}),define("liquid-fire/templates/helpers",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,a){this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),a=a||{};var o,r="";return o=i._triageMustache.call(t,"outlet",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:a}),(o||0===o)&&a.buffer.push(o),a.buffer.push("\n"),r})}),define("liquid-fire/templates/helpers/index",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,a){function o(e,t){t.buffer.push("{{#liquid-outlet}}")}function r(e,t){t.buffer.push("{{#liquid-with}}")}function l(e,t){t.buffer.push("{{#liquid-bind}}")}function h(e,t){t.buffer.push("{{#liquid-if}}")}function u(e,t){t.buffer.push("{{#liquid-measure}}")}function d(e,t){t.buffer.push("{{#liquid-box}}")}this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),a=a||{};var p,c,f,m="",b=this,v=i.helperMissing;return a.buffer.push('<h2>Template Helpers</h2>\n\n<dl class="dl-horizontal">\n  <dt>'),c=i["link-to"]||t&&t["link-to"],f={hash:{},hashTypes:{},hashContexts:{},inverse:b.noop,fn:b.program(1,o,a),contexts:[t],types:["STRING"],data:a},p=c?c.call(t,"helpers.liquid-outlet",f):v.call(t,"link-to","helpers.liquid-outlet",f),(p||0===p)&&a.buffer.push(p),a.buffer.push("</dt>\n  <dd>Transitions between routes.</dd>\n\n  <dt>"),c=i["link-to"]||t&&t["link-to"],f={hash:{},hashTypes:{},hashContexts:{},inverse:b.noop,fn:b.program(3,r,a),contexts:[t],types:["STRING"],data:a},p=c?c.call(t,"helpers.liquid-with",f):v.call(t,"link-to","helpers.liquid-with",f),(p||0===p)&&a.buffer.push(p),a.buffer.push("</dt>\n  <dd>Transitions between models or contexts within a single route.</dd>\n\n  <dt>"),c=i["link-to"]||t&&t["link-to"],f={hash:{},hashTypes:{},hashContexts:{},inverse:b.noop,fn:b.program(5,l,a),contexts:[t],types:["STRING"],data:a},p=c?c.call(t,"helpers.liquid-bind",f):v.call(t,"link-to","helpers.liquid-bind",f),(p||0===p)&&a.buffer.push(p),a.buffer.push("</dt>\n  <dd>Updates to simple bound values.</dd>\n\n  <dt>"),c=i["link-to"]||t&&t["link-to"],f={hash:{},hashTypes:{},hashContexts:{},inverse:b.noop,fn:b.program(7,h,a),contexts:[t],types:["STRING"],data:a},p=c?c.call(t,"helpers.liquid-if",f):v.call(t,"link-to","helpers.liquid-if",f),(p||0===p)&&a.buffer.push(p),a.buffer.push("</dt>\n  <dd>Switching between true and false branches in an #if statement.</dd>\n\n  <dt>"),c=i["link-to"]||t&&t["link-to"],f={hash:{},hashTypes:{},hashContexts:{},inverse:b.noop,fn:b.program(9,u,a),contexts:[t],types:["STRING"],data:a},p=c?c.call(t,"helpers.liquid-measure",f):v.call(t,"link-to","helpers.liquid-measure",f),(p||0===p)&&a.buffer.push(p),a.buffer.push("</dt>\n  <dd>Provides bindable properties that track the size (in pixels) of its content.</dd>\n\n  <dt>"),c=i["link-to"]||t&&t["link-to"],f={hash:{},hashTypes:{},hashContexts:{},inverse:b.noop,fn:b.program(11,d,a),contexts:[t],types:["STRING"],data:a},p=c?c.call(t,"helpers.liquid-box",f):v.call(t,"link-to","helpers.liquid-box",f),(p||0===p)&&a.buffer.push(p),a.buffer.push("</dt>\n  <dd>Grows and shrinks based on the size of its content.</dd>\n  \n\n</dl>\n"),m})}),define("liquid-fire/templates/helpers/liquid-bind",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,a){this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),a=a||{};var o,r,l="",h=i.helperMissing,u=this.escapeExpression;return a.buffer.push('<h2>{{liquid-bind}}</h2>\n\n<p>Renders a bound value into your template, and uses the transition\nmap to decide how to animate when the bound value changes.</p>\n\n<p>Saying <code>{{liquid-bind someValue}}</code> is a drop-in\nreplacement for <code>{{someValue}}</code>, except this wraps the\ncontent in <code>&lt;div class="liquid-child"&gt;</code>, so that it\ncan be targeted for animation.</p>\n\n<p>By default, <code>.liquid-child</code> elements\nhave <code>{position: absolute}</code>, which is almost always what\nyou want. This implies that you need to provide positioned containers\nfor them.</p>\n\n<h3>Demo</h3>\n\n\n<div id="liquid-bind-demo">\n  <div>'),a.buffer.push(u((o=i["liquid-bind"]||t&&t["liquid-bind"],r={hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:a},o?o.call(t,"hours",r):h.call(t,"liquid-bind","hours",r)))),a.buffer.push("</div>:\n  <div>"),a.buffer.push(u((o=i["liquid-bind"]||t&&t["liquid-bind"],r={hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:a},o?o.call(t,"minutes",r):h.call(t,"liquid-bind","minutes",r)))),a.buffer.push("</div>:\n  <div>"),a.buffer.push(u((o=i["liquid-bind"]||t&&t["liquid-bind"],r={hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:a},o?o.call(t,"seconds",r):h.call(t,"liquid-bind","seconds",r)))),a.buffer.push("</div>\n</div>\n\n\n"),a.buffer.push(u((o=i["code-snippet"]||t&&t["code-snippet"],r={hash:{name:"liquid-bind-demo.hbs"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},o?o.call(t,r):h.call(t,"code-snippet",r)))),a.buffer.push("\n\n"),a.buffer.push(u((o=i["code-snippet"]||t&&t["code-snippet"],r={hash:{name:"bind-demo-transition.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},o?o.call(t,r):h.call(t,"code-snippet",r)))),a.buffer.push("\n\n"),a.buffer.push(u((o=i["code-snippet"]||t&&t["code-snippet"],r={hash:{name:"bind-demo-style.css"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},o?o.call(t,r):h.call(t,"code-snippet",r)))),a.buffer.push("\n"),l})}),define("liquid-fire/templates/helpers/liquid-box",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,a){function o(e,t){var n="";return t.buffer.push("\n  {{#liquid-measure}} "),n}function r(e,t){var n,s,a,o="";return t.buffer.push("\n    "),s=i["liquid-if"]||e&&e["liquid-if"],a={hash:{"class":"vehicles"},hashTypes:{"class":"STRING"},hashContexts:{"class":e},inverse:b.program(6,h,t),fn:b.program(4,l,t),contexts:[e],types:["ID"],data:t},n=s?s.call(e,"isBike",a):f.call(e,"liquid-if","isBike",a),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n  "),o}function l(e,t){var n,s,a="";return t.buffer.push("\n      <label>\n        Would you like a helmet? "),t.buffer.push(m((n=i.input||e&&e.input,s={hash:{type:"checkbox",value:"helmet"},hashTypes:{type:"STRING",value:"STRING"},hashContexts:{type:e,value:e},contexts:[],types:[],data:t},n?n.call(e,s):f.call(e,"input",s)))),t.buffer.push("\n      </label>\n    "),a}function h(e,t){var n,s,a="";return t.buffer.push("\n      <label>License Number</label>\n      "),t.buffer.push(m((n=i.input||e&&e.input,s={hash:{type:"text",value:"license"},hashTypes:{type:"STRING",value:"ID"},hashContexts:{type:e,value:e},contexts:[],types:[],data:t},n?n.call(e,s):f.call(e,"input",s)))),t.buffer.push("\n      <label>License State</label>\n      "),t.buffer.push(m(i.view.call(e,"Ember.Select",{hash:{value:"state",content:"states"},hashTypes:{value:"ID",content:"ID"},hashContexts:{value:e,content:e},contexts:[e],types:["ID"],data:t}))),t.buffer.push("\n    "),a}this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),a=a||{};var u,d,p,c="",f=i.helperMissing,m=this.escapeExpression,b=this;return a.buffer.push('<h2>{{#liquid-box}}</h2>\n\n<p>This component creates an element that will alter its own size as\nits child elements change, optionally animating the size\nchange. It accepts these properties:</p>\n\n<dl class="dl-horizontal">\n  <dt>measure</dt>\n  <dd>How to measure the size of our children. This accepts all the\n  same values accepted by '),d=i["link-to"]||t&&t["link-to"],p={hash:{},hashTypes:{},hashContexts:{},inverse:b.noop,fn:b.program(1,o,a),contexts:[t],types:["STRING"],data:a},u=d?d.call(t,"helpers.liquid-measure",p):f.call(t,"link-to","helpers.liquid-measure",p),(u||0===u)&&a.buffer.push(u),a.buffer.push("'s <code>method</code> property.</dd>\n\n  <dt>duration</dt>\n  <dd>Duration in milliseconds to spend animating size\n  changes. Defaults to 250. Set it to 0 if you don't want to\n  animate.</dd>\n</dl>\n\n<p>Since this component can match its height to the height of\nabsolutely-positioned children, it allows you to work around one of\nthe annoying things about animating within the DOM: animated elements\noften need to be absolutely positioned, but you also often want to\nembed them in the document flow. You can achieve this with\n<code>{{#liquid-box}}</code> as demonstrated below.</p>\n\n<h3>Demo</h3>\n\n\n<div id=\"liquid-box-demo\">\n  <label>I'm renting a </label>\n  "),a.buffer.push(m(i.view.call(t,"Ember.Select",{hash:{value:"vehicle",content:"vehicles"},hashTypes:{value:"ID",content:"ID"},hashContexts:{value:t,content:t},contexts:[t],types:["ID"],data:a}))),a.buffer.push("\n\n  "),d=i["liquid-box"]||t&&t["liquid-box"],p={hash:{measure:"lastChild"},hashTypes:{measure:"STRING"},hashContexts:{measure:t},inverse:b.noop,fn:b.program(3,r,a),contexts:[],types:[],data:a},u=d?d.call(t,p):f.call(t,"liquid-box",p),(u||0===u)&&a.buffer.push(u),a.buffer.push('\n  <button type="button" class="btn btn-success">Yay, let\'s go!</button>\n</div>\n\n\n'),a.buffer.push(m((d=i["code-snippet"]||t&&t["code-snippet"],p={hash:{name:"liquid-box-demo.hbs"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},d?d.call(t,p):f.call(t,"code-snippet",p)))),a.buffer.push("\n\n"),a.buffer.push(m((d=i["code-snippet"]||t&&t["code-snippet"],p={hash:{name:"liquid-box-demo-transition.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},d?d.call(t,p):f.call(t,"code-snippet",p)))),a.buffer.push("\n"),c})}),define("liquid-fire/templates/helpers/liquid-if",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,a){function o(e,t){var n,s,a="";return t.buffer.push("\n      <label>How many children do you have?</label>\n      "),t.buffer.push(c((n=i.input||e&&e.input,s={hash:{type:"number",value:"numKids"},hashTypes:{type:"STRING",value:"ID"},hashContexts:{type:e,value:e},contexts:[],types:[],data:t},n?n.call(e,s):p.call(e,"input",s)))),t.buffer.push("\n    "),a}function r(e,t){t.buffer.push("\n      I bet you get a lot of nice sleep.\n    ")}this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),a=a||{};var l,h,u,d="",p=i.helperMissing,c=this.escapeExpression,f=this;return a.buffer.push('<h2>{{#liquid-if}}</h2>\n\n<p><code>{{#liquid-if}}</code> is a replacement for Ember\'s\nnormal <code>{{#if}}</code>, except it:</p>\n\n<ul>\n  <li>respects the transition map so you can animate changes between its <code>true</code>\nand <code>false</code> states.</li>\n  <li>wraps its content in <code>&lt;div\n  class="liquid-child"&gt;</code> to facilitate animation.\n</ul>\n\n<h3>Demo</h3>\n\n\n<div id="liquid-if-demo">\n  <div>\n    <label>Are you a parent?\n      '),a.buffer.push(c((h=i.input||t&&t.input,u={hash:{type:"checkbox",checked:"isParent"},hashTypes:{type:"STRING",checked:"ID"},hashContexts:{type:t,checked:t},contexts:[],types:[],data:a},h?h.call(t,u):p.call(t,"input",u)))),a.buffer.push("\n    </label>\n  </div>\n  <div>\n    "),h=i["liquid-if"]||t&&t["liquid-if"],u={hash:{},hashTypes:{},hashContexts:{},inverse:f.program(3,r,a),fn:f.program(1,o,a),contexts:[t],types:["ID"],data:a},l=h?h.call(t,"isParent",u):p.call(t,"liquid-if","isParent",u),(l||0===l)&&a.buffer.push(l),a.buffer.push("\n  </div>\n</div>\n\n\n"),a.buffer.push(c((h=i["code-snippet"]||t&&t["code-snippet"],u={hash:{name:"liquid-if-demo.hbs"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},h?h.call(t,u):p.call(t,"code-snippet",u)))),a.buffer.push("\n\n"),a.buffer.push(c((h=i["code-snippet"]||t&&t["code-snippet"],u={hash:{name:"liquid-if-demo-transition.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},h?h.call(t,u):p.call(t,"code-snippet",u)))),a.buffer.push("\n\n"),d})}),define("liquid-fire/templates/helpers/liquid-measure",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,a){function o(e,t){t.buffer.push("{{#liquid-box}}")}function r(e,t){var n,s="";return t.buffer.push('\n      <span class="title">'),n=i._triageMustache.call(e,"title",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("</span>\n      <p>"),n=i._triageMustache.call(e,"body",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("</p>\n    "),s}this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),a=a||{};var l,h,u,d="",p=this,c=i.helperMissing,f=this.escapeExpression;return a.buffer.push('<h2>{{#liquid-measure}}</h2>\n\n<p>This component creates an element that exposes\nbindable <code>height</code> and <code>width</code> properties. It is\na lower-level building block to help build more complex dynamic\nlayouts.</p>\n\n<p>It supports several methods of measuring the size of its\ncontent. Pass one of the following strings as the <code>method</code>\nproperty:</p>\n\n<dl class="dl-horizontal">\n  <dt>self</dt>\n  <dd>This is the default. The element measures its own size.</dd>\n\n  <dt>biggestChild</dt>\n  <dd>Use <code>{{#liquid-with method="biggestChild"}}</code> to make\n    the element measure its largest child.\n  </dd>\n\n  <dt>lastChild</dt>\n  <dd>\n    Use <code>{{#liquid-with method="lastChild"}}</code> to make the\n    element measure its last child element. This works well in\n    conjunction with the other animated helpers, because when they\'re\n    animating they will always insert new content after old content,\n    so you can measure how big the final content will be even before\n    it has finished animating.\n  </dd>\n</dl>\n\n\n<p>It styles itself with <code>{display: inline-block}</code> so it\ncan measure both the height and width of its content, but you can\napply your own CSS to constrain one dimension if you want.</p>\n\n<div class="callout callout-info">\n  For a more practical component built on top\n  of <code>{{#liquid-measure}}</code>, see '),h=i["link-to"]||t&&t["link-to"],u={hash:{},hashTypes:{},hashContexts:{},inverse:p.noop,fn:p.program(1,o,a),contexts:[t],types:["STRING"],data:a},l=h?h.call(t,"helpers.liquid-box",u):c.call(t,"link-to","helpers.liquid-box",u),(l||0===l)&&a.buffer.push(l),a.buffer.push('.\n</div>\n\n<h3>Demo</h3>\n\n<p>As you edit, the measurements update to reflect the size of the\nresulting post.</p>\n\n\n<div id="liquid-measure-demo">\n  <div>\n    <h4>Editor</h4>\n    '),a.buffer.push(f((h=i.input||t&&t.input,u={hash:{value:"title",placeholder:"Your Title"},hashTypes:{value:"ID",placeholder:"STRING"},hashContexts:{value:t,placeholder:t},contexts:[],types:[],data:a},h?h.call(t,u):c.call(t,"input",u)))),a.buffer.push("\n    "),a.buffer.push(f((h=i.textarea||t&&t.textarea,u={hash:{rows:3,value:"body",placeholder:"Your post goes here..."},hashTypes:{rows:"INTEGER",value:"ID",placeholder:"STRING"},hashContexts:{rows:t,value:t,placeholder:t},contexts:[],types:[],data:a},h?h.call(t,u):c.call(t,"textarea",u)))),a.buffer.push("\n  </div>\n  <div>\n    <h4>Preview</h4>\n    "),h=i["liquid-measure"]||t&&t["liquid-measure"],u={hash:{height:"postHeight",width:"postWidth","class":"post"},hashTypes:{height:"ID",width:"ID","class":"STRING"},hashContexts:{height:t,width:t,"class":t},inverse:p.noop,fn:p.program(3,r,a),contexts:[],types:[],data:a},l=h?h.call(t,u):c.call(t,"liquid-measure",u),(l||0===l)&&a.buffer.push(l),a.buffer.push('\n    <div class="size">\n      '),l=i._triageMustache.call(t,"postWidth",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:a}),(l||0===l)&&a.buffer.push(l),a.buffer.push("px\n      by \n      "),l=i._triageMustache.call(t,"postHeight",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:a}),(l||0===l)&&a.buffer.push(l),a.buffer.push("px\n    </div>\n  </div>\n</div>\n\n\n"),a.buffer.push(f((h=i["code-snippet"]||t&&t["code-snippet"],u={hash:{name:"liquid-measure-demo.hbs"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},h?h.call(t,u):c.call(t,"code-snippet",u)))),a.buffer.push("\n"),d})}),define("liquid-fire/templates/helpers/liquid-outlet",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,a){function o(e,t){t.buffer.push("{{#liquid-with}}")}this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),a=a||{};var r,l,h,u="",d=this,p=i.helperMissing,c=this.escapeExpression;return a.buffer.push('<h2>{{liquid-outlet}}</h2>\n\n<p>Acts just like a normal Ember <code>{{outlet}}</code>, with only\nthree exceptions:</p>\n\n<ul>\n  <li>it respects the transition map and lets you animate between routes.</li>\n  <li>it wraps its content in a non-virtual view, meaning that it adds\n  one layer of <code>&lt;div class="liquid-child"&gt;</code>\n  markup. These divs are the ones that the animations will target. You\n  can pass a <code>class</code> argument\n  to <code>{{liquid-outlet}}</code> to set both bound and static\n  class names on the liquid-child, in the usual Ember way.</li>\n  <li>it does not support the <code>view</code> option to override its view class.</li>\n</ul>\n\n<p>It otherwise does everything <code>{{outlet}}</code> does,\nincluding named outlets (like <code>{{liquid-outlet sidebar}}</code>).</p>\n\n<h3>When to use it</h3>\n\n<p>Use this when you want to animate the transitions between\nroutes.</p>\n\n<div class="callout callout-danger">This won\'t let you animate between\ntwo different models on the same route, because outlets are not\ninvolved in that process. Instead, see '),l=i["link-to"]||t&&t["link-to"],h={hash:{},hashTypes:{},hashContexts:{},inverse:d.noop,fn:d.program(1,o,a),contexts:[t],types:["STRING"],data:a},r=l?l.call(t,"helpers.liquid-with",h):p.call(t,"link-to","helpers.liquid-with",h),(r||0===r)&&a.buffer.push(r),a.buffer.push('.</div>\n\n<h3>Demo</h3>\n\n<p>Notice that the URL changes when you click the links &mdash; these are real route transitions.</p>\n\n\n<div class="demo-container">\n  '),r=i._triageMustache.call(t,"liquid-outlet",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:a}),(r||0===r)&&a.buffer.push(r),a.buffer.push("\n</div>\n\n\n<h4>Demo template:</h4>\n\n"),a.buffer.push(c((l=i["code-snippet"]||t&&t["code-snippet"],h={hash:{name:"outlet.hbs"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},l?l.call(t,h):p.call(t,"code-snippet",h)))),a.buffer.push("\n\n<h4>Demo transition map:</h4>\n\n"),a.buffer.push(c((l=i["code-snippet"]||t&&t["code-snippet"],h={hash:{name:"transition-demo.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},l?l.call(t,h):p.call(t,"code-snippet",h)))),a.buffer.push("\n\n"),u})}),define("liquid-fire/templates/helpers/liquid-outlet/index",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,a){function o(e,t){t.buffer.push("Click me!")}this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),a=a||{};var r,l,h,u="",d=this,p=i.helperMissing;return l=i["link-to"]||t&&t["link-to"],h={hash:{},hashTypes:{},hashContexts:{},inverse:d.noop,fn:d.program(1,o,a),contexts:[t],types:["STRING"],data:a},r=l?l.call(t,"helpers.liquid-outlet.other",h):p.call(t,"link-to","helpers.liquid-outlet.other",h),(r||0===r)&&a.buffer.push(r),a.buffer.push("\n"),u})}),define("liquid-fire/templates/helpers/liquid-outlet/other",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,a){function o(e,t){t.buffer.push("Go back!")}this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),a=a||{};var r,l,h,u="",d=this,p=i.helperMissing;return l=i["link-to"]||t&&t["link-to"],h={hash:{},hashTypes:{},hashContexts:{},inverse:d.noop,fn:d.program(1,o,a),contexts:[t],types:["STRING"],data:a},r=l?l.call(t,"helpers.liquid-outlet.index",h):p.call(t,"link-to","helpers.liquid-outlet.index",h),(r||0===r)&&a.buffer.push(r),a.buffer.push("\n"),u})}),define("liquid-fire/templates/helpers/liquid-with",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,a){this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),a=a||{};var o,r="";return o=i._triageMustache.call(t,"outlet",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:a}),(o||0===o)&&a.buffer.push(o),a.buffer.push("\n"),r})}),define("liquid-fire/templates/helpers/liquid-with/page",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,a){function o(e,t){var n,s="";return t.buffer.push("\n    "),n=i._triageMustache.call(e,"id",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n    <button "),t.buffer.push(d(i.action.call(e,"higher",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["STRING"],data:t}))),t.buffer.push(">Go</button>\n  "),s}this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),a=a||{};var r,l,h,u="",d=this.escapeExpression,p=this,c=i.helperMissing;
return a.buffer.push('<h2>{{#liquid-with}}</h2>\n\n<p>Acts just like a normal Ember <code>{{with}}</code>, except:</p>\n\n<ul>\n  <li>it respects the transition map and lets you animate between contexts.</li>\n  <li>it wraps its content in a non-virtual view, meaning that it adds\n  one layer of <code>&lt;div class="liquid-child"&gt;</code>\n  markup. These divs are the ones that the animations will target. You\n  can pass a <code>class</code> argument which will apply to the\n  liquid-child.</li>\n</ul>\n\n<p>This helper will grab whatever context you pass it, and when that\ncontext changes, the helper will hold on to a copy of the old value\nlong enough to gracefully transition away.</p>\n\n<p>Binding to a singleton controller\'s <code>model</code> works great,\nbecause future changes to the model will be captured and\nanimated. Binding directly to a singleton controller won\'t animate\nbecause the controller never changes. If you need a controller inside\nthe <code>{{#liquid-with}}</code>, it\'s best to instantiate one\nexplicitly with the <code>controller</code> option, so that a fresh\ncontroller will be instantiated for each update to your bound\ncontext.</p>\n\n<h3>When to use it</h3>\n\n<p>Use this when you want to animate the transitions between\ndifferent models on the same route.</p>\n\n<div class="callout callout-danger"><code>{{#liquid-with foo as\nbar}}</code> is supported, but it depends on a <a href="https://github.com/emberjs/ember.js/pull/5115">bugfix</a> in Ember\n1.7.0-beta.2 and may not work with earlier releases of Ember.</div>\n\n<h3>Demo</h3>\n\n<p>Notice that the ID being rendered maps correctly to the URL in both\ndirections.</p>\n\n\n<div id="liquid-with-demo" class="demo-container">\n  '),l=i["liquid-with"]||t&&t["liquid-with"],h={hash:{controller:"demo"},hashTypes:{controller:"STRING"},hashContexts:{controller:t},inverse:p.noop,fn:p.program(1,o,a),contexts:[t],types:["ID"],data:a},r=l?l.call(t,"model",h):c.call(t,"liquid-with","model",h),(r||0===r)&&a.buffer.push(r),a.buffer.push("\n</div>\n\n\n<h4>Template</h4>\n\n"),a.buffer.push(d((l=i["code-snippet"]||t&&t["code-snippet"],h={hash:{name:"with-demo.hbs"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},l?l.call(t,h):c.call(t,"code-snippet",h)))),a.buffer.push("\n\n<h4>Transition Map</h4>\n\n"),a.buffer.push(d((l=i["code-snippet"]||t&&t["code-snippet"],h={hash:{name:"with-demo.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},l?l.call(t,h):c.call(t,"code-snippet",h)))),a.buffer.push("\n"),u})}),define("liquid-fire/templates/index",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,a){this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),a=a||{};var o,r,l="",h=i.helperMissing,u=this.escapeExpression;return a.buffer.push("<h2>Liquid Fire: Animations & Transitions for Ember Apps</h2>\n\n<p>Liquid Fire is a toolkit for managing animated transitions in an\nEmber application. Like Ember itself, our goal is to cultivate shared\nabstractions so we're free to focus on bigger and better\nideas. <em>Good defaults. Convention over configuration. Composable\npieces all the way down.</em></p>\n\n<h3>Getting Started</h3>\n\n<p>If you're using <a href=\"http://iamstef.net/ember-cli/\">ember-cli</a>\n(and for any new project, you should!), you can install the\nliquid-fire addon with:</p>\n\n<pre>\n  npm install --save-dev liquid-fire\n</pre>\n\n<div class=\"callout callout-danger\">For a non-ember-cli app, you'll\nwant to grab a prebuilt version of liquid-fire. This build\nconfiguration is not yet implemented, PRs welcome.</div>\n\n<h3>Key Ideas</h3>\n\n<p>Transitions need to be implemented within the view layer, but deciding\n<em>what kind</em> of transition to do at any given time is a\nhigher-level question, dependent on the relationships between\ndifferent routes and models.</p>\n\n<p>Therefore, we split the responsibility between three key pieces:\ntemplate helpers, the transition map, and transitions.</p>\n\n\n<h4>Template Helpers</h4>\n\n<p>The library provides helpers\nlike <code>{{liquid-outlet}}</code>, <code>{{liquid-with}}</code>,\netc, that are nearly drop-in replacements for the equivalent normal\nEmber helpers. The key difference is that they don't update\ninstantly when bound data changes. Instead they consult your\napplication's transition map, and if they discover a matching\ntransition, they give the transition control over <em>both the old\nand new content</em> simultaneously.</p>\n\n<h4>Transition Map</h4>\n\n<p>The transition map is analogous to your normal Ember router\nmap. It's a single place to declaratively capture rules about how\nthe pieces of your application relate to each other. By convention,\nthe transition map goes in <code>app/transitions.js</code>, and it\nlooks something like this:</p>\n\n"),a.buffer.push(u((o=i["code-snippet"]||t&&t["code-snippet"],r={hash:{name:"simple-transition-map.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},o?o.call(t,r):h.call(t,"code-snippet",r)))),a.buffer.push("\n\n<h4>Transitions</h4>\n\n<p>The transition map above mentions two named\ntransitions: <code>toLeft</code> and <code>toRight</code>. These are\nboth predefined transitions that come with the library. But you can\ncompose new transitions too. They look like this:\n\n"),a.buffer.push(u((o=i["code-snippet"]||t&&t["code-snippet"],r={hash:{name:"transition-definitions.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},o?o.call(t,r):h.call(t,"code-snippet",r)))),a.buffer.push('\n\n<p><em>(In these examples, <code>opacity: [1, 0]</code>\nuses <a href="http://velocityjs.org">velocity</a>\'s "force-feeding"\ncapability to specify <code>[endValue, startValue]</code>, so the\nmeaning is "animate the opacity from 0 to 1".)</em></p>\n\n<p>Transitions are implemented with a promise-based API that gives you\ncontrol over all the relevant timing, including when to insert the new\nview into the DOM.</p>\n'),l})}),define("liquid-fire/templates/liquid-bind",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,a){function o(e,t){var n,s="";return t.buffer.push("\n  "),n=i._triageMustache.call(e,"",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n"),s}this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),a=a||{};var r,l,h,u="",d=this,p=i.helperMissing;return l=i["liquid-with"]||t&&t["liquid-with"],h={hash:{classNames:"_view.classNames",classNameBindings:"_view.classNameBindings"},hashTypes:{classNames:"ID",classNameBindings:"ID"},hashContexts:{classNames:t,classNameBindings:t},inverse:d.noop,fn:d.program(1,o,a),contexts:[t],types:["ID"],data:a},r=l?l.call(t,"_view.boundContext",h):p.call(t,"liquid-with","_view.boundContext",h),(r||0===r)&&a.buffer.push(r),a.buffer.push("\n\n"),u})}),define("liquid-fire/templates/liquid-with",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,a){this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),a=a||{};var o,r="";return o=i._triageMustache.call(t,"with-apply",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:a}),(o||0===o)&&a.buffer.push(o),a.buffer.push("\n\n\n"),r})}),define("liquid-fire/templates/test-bind",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,a){this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),a=a||{};var o,r,l="",h=i.helperMissing,u=this.escapeExpression;return a.buffer.push('<div id="bind-test-container" style="display: inline-block; position:relative; width: 3em; ">\n  '),a.buffer.push(u((o=i["liquid-bind"]||t&&t["liquid-bind"],r={hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:a},o?o.call(t,"counter",r):h.call(t,"liquid-bind","counter",r)))),a.buffer.push("\n</div>\n"),l})}),define("liquid-fire/templates/test-box",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,a){function o(e,t){var n,s="";return t.buffer.push("\n  "),n=i._triageMustache.call(e,"text",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n"),s}this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),a=a||{};var r,l,h,u="",d=i.helperMissing,p=this.escapeExpression,c=this;return a.buffer.push("<div>\n  "),a.buffer.push(p((l=i.textarea||t&&t.textarea,h={hash:{value:"text"},hashTypes:{value:"ID"},hashContexts:{value:t},contexts:[],types:[],data:a},l?l.call(t,h):d.call(t,"textarea",h)))),a.buffer.push("\n</div>\n\n"),l=i["liquid-box"]||t&&t["liquid-box"],h={hash:{"class":"demo-box"},hashTypes:{"class":"STRING"},hashContexts:{"class":t},inverse:c.noop,fn:c.program(1,o,a),contexts:[],types:[],data:a},r=l?l.call(t,h):d.call(t,"liquid-box",h),(r||0===r)&&a.buffer.push(r),a.buffer.push("\n\n"),u})}),define("liquid-fire/templates/test-if",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,a){function o(e,t){var n,s,a,o="";return t.buffer.push("\n"),s=i["liquid-if"]||e&&e["liquid-if"],a={hash:{"class":"demo-if"},hashTypes:{"class":"STRING"},hashContexts:{"class":e},inverse:c.program(4,l,t),fn:c.program(2,r,t),contexts:[e],types:["ID"],data:t},n=s?s.call(e,"checked",a):f.call(e,"liquid-if","checked",a),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n"),o}function r(e,t){var n,s="";return t.buffer.push("\ncontext says: "),n=i._triageMustache.call(e,"message",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push(". It's checked<br>\nThis one<br>\nis taller\n"),s}function l(e,t){var n,s="";return t.buffer.push("\ncontext says: "),n=i._triageMustache.call(e,"message",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push(". It's not checked.\n"),s}this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),a=a||{};var h,u,d,p="",c=this,f=i.helperMissing,m=this.escapeExpression;return a.buffer.push(m((u=i.input||t&&t.input,d={hash:{type:"checkbox",checked:"checked"},hashTypes:{type:"STRING",checked:"ID"},hashContexts:{type:t,checked:t},contexts:[],types:[],data:a},u?u.call(t,d):f.call(t,"input",d)))),a.buffer.push("\nMesage: "),h=i._triageMustache.call(t,"message",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:a}),(h||0===h)&&a.buffer.push(h),a.buffer.push("\n\n"),u=i["liquid-box"]||t&&t["liquid-box"],d={hash:{id:"test-if-container",measure:"biggestChild"},hashTypes:{id:"STRING",measure:"STRING"},hashContexts:{id:t,measure:t},inverse:c.noop,fn:c.program(1,o,a),contexts:[],types:[],data:a},h=u?u.call(t,d):f.call(t,"liquid-box",d),(h||0===h)&&a.buffer.push(h),a.buffer.push("\n\n"),p})}),define("liquid-fire/templates/test-measure",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,a){function o(e,t){var n,s="";return t.buffer.push("\n  "),n=i._triageMustache.call(e,"text",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n"),s}this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),a=a||{};var r,l,h,u="",d=i.helperMissing,p=this.escapeExpression,c=this;return a.buffer.push("<div>\n  "),a.buffer.push(p((l=i.textarea||t&&t.textarea,h={hash:{value:"text"},hashTypes:{value:"ID"},hashContexts:{value:t},contexts:[],types:[],data:a},l?l.call(t,h):d.call(t,"textarea",h)))),a.buffer.push("\n</div>\n\n"),l=i["liquid-measure"]||t&&t["liquid-measure"],h={hash:{height:"height",width:"width",id:"measure-demo-target"},hashTypes:{height:"ID",width:"ID",id:"STRING"},hashContexts:{height:t,width:t,id:t},inverse:c.noop,fn:c.program(1,o,a),contexts:[],types:[],data:a},r=l?l.call(t,h):d.call(t,"liquid-measure",h),(r||0===r)&&a.buffer.push(r),a.buffer.push("\n\n"),r=i._triageMustache.call(t,"height",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:a}),(r||0===r)&&a.buffer.push(r),a.buffer.push("x"),r=i._triageMustache.call(t,"width",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:a}),(r||0===r)&&a.buffer.push(r),a.buffer.push("\n"),u})}),define("liquid-fire/templates/test-outlet",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,a){this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),a=a||{};var o,r="";return a.buffer.push('<h1>Liquid Outlet</h1>\n<div class="container">\n  '),o=i._triageMustache.call(t,"liquid-outlet",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:a}),(o||0===o)&&a.buffer.push(o),a.buffer.push("\n</div>\n"),r})}),define("liquid-fire/templates/test-outlet/index",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,a){function o(e,t){t.buffer.push("Second Route")}function r(e,t){t.buffer.push("Third 1")}function l(e,t){t.buffer.push("Third 2")}this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),a=a||{};var h,u,d,p="",c=this,f=i.helperMissing;return a.buffer.push('<div style="background-color: red; height: 100%">\nHi\n\n'),u=i["link-to"]||t&&t["link-to"],d={hash:{},hashTypes:{},hashContexts:{},inverse:c.noop,fn:c.program(1,o,a),contexts:[t],types:["STRING"],data:a},h=u?u.call(t,"test-outlet.second",d):f.call(t,"link-to","test-outlet.second",d),(h||0===h)&&a.buffer.push(h),a.buffer.push("\n"),u=i["link-to"]||t&&t["link-to"],d={hash:{},hashTypes:{},hashContexts:{},inverse:c.noop,fn:c.program(3,r,a),contexts:[t,t],types:["STRING","INTEGER"],data:a},h=u?u.call(t,"test-outlet.third",1,d):f.call(t,"link-to","test-outlet.third",1,d),(h||0===h)&&a.buffer.push(h),a.buffer.push("\n"),u=i["link-to"]||t&&t["link-to"],d={hash:{},hashTypes:{},hashContexts:{},inverse:c.noop,fn:c.program(5,l,a),contexts:[t,t],types:["STRING","INTEGER"],data:a},h=u?u.call(t,"test-outlet.third",2,d):f.call(t,"link-to","test-outlet.third",2,d),(h||0===h)&&a.buffer.push(h),a.buffer.push("\n\n</div>\n"),p})}),define("liquid-fire/templates/test-outlet/second",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,a){function o(e,t){t.buffer.push("Back")}this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),a=a||{};var r,l,h,u="",d=this,p=i.helperMissing;return a.buffer.push('<div style="background-color: green; height: 100%">\nDetails\n\n'),l=i["link-to"]||t&&t["link-to"],h={hash:{},hashTypes:{},hashContexts:{},inverse:d.noop,fn:d.program(1,o,a),contexts:[t],types:["STRING"],data:a},r=l?l.call(t,"test-outlet.index",h):p.call(t,"link-to","test-outlet.index",h),(r||0===r)&&a.buffer.push(r),a.buffer.push("\n</div>\n"),u})}),define("liquid-fire/templates/test-outlet/third",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,a){function o(e,t){t.buffer.push("Back")}this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),a=a||{};var r,l,h,u="",d=this,p=i.helperMissing;return a.buffer.push('<div style="background-color: green; height: 100%">\nDetails for '),r=i._triageMustache.call(t,"id",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:a}),(r||0===r)&&a.buffer.push(r),a.buffer.push("\n\n"),l=i["link-to"]||t&&t["link-to"],h={hash:{},hashTypes:{},hashContexts:{},inverse:d.noop,fn:d.program(1,o,a),contexts:[t],types:["STRING"],data:a},r=l?l.call(t,"test-outlet.index",h):p.call(t,"link-to","test-outlet.index",h),(r||0===r)&&a.buffer.push(r),a.buffer.push("\n</div>\n"),u})}),define("liquid-fire/templates/test-with",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,a){function o(e,t){var n,s="";return t.buffer.push("\n    The model has "),n=i._triageMustache.call(e,"foo.id",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push(".\n    "),n=i["if"].call(e,"foo.usingSampleController",{hash:{},hashTypes:{},hashContexts:{},inverse:p.noop,fn:p.program(2,r,t),contexts:[e],types:["ID"],data:t}),(n||0===n)&&t.buffer.push(n),t.buffer.push("\n    <button "),t.buffer.push(c(i.action.call(e,"increment",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["STRING"],data:t}))),t.buffer.push(">Increment</button>\n    <button "),t.buffer.push(c(i.action.call(e,"decrement",{hash:{},hashTypes:{},hashContexts:{},contexts:[e],types:["STRING"],data:t}))),t.buffer.push(">Decrement</button>\n  "),s}function r(e,t){t.buffer.push("\n      Yay, have right controller.\n    ")}this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),a=a||{};var l,h,u,d="",p=this,c=this.escapeExpression,f=i.helperMissing;return a.buffer.push('<h2>Testing the liquid-with helper</h2>\n<div class="container">\n  '),h=i["liquid-with"]||t&&t["liquid-with"],u={hash:{controller:"sample"},hashTypes:{controller:"STRING"},hashContexts:{controller:t},inverse:p.noop,fn:p.program(1,o,a),contexts:[t,t,t],types:["ID","ID","ID"],data:a},l=h?h.call(t,"model","as","foo",u):f.call(t,"liquid-with","model","as","foo",u),(l||0===l)&&a.buffer.push(l),a.buffer.push("\n</div>\n"),d})}),define("liquid-fire/templates/transition-map",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,a){this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),a=a||{};var o,r="";return o=i._triageMustache.call(t,"outlet",{hash:{},hashTypes:{},hashContexts:{},contexts:[t],types:["ID"],data:a}),(o||0===o)&&a.buffer.push(o),a.buffer.push("\n"),r})}),define("liquid-fire/templates/transition-map/defining-transitions",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,a){this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),a=a||{};var o,r,l="",h=i.helperMissing,u=this.escapeExpression;return a.buffer.push("<h2>Defining Transition Animations</h2>\n\n<p>In most of the examples in this guide, we refer to predefined\ntransition animations like 'toLeft' and 'crossFade'. This section\nexplains how such animations are implemented so you can create your\nown.</p>\n\n<p>Here is the definition of 'crossFade':</p>\n\n"),a.buffer.push(u((o=i["code-snippet"]||t&&t["code-snippet"],r={hash:{name:"cross-fade-definition.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},o?o.call(t,r):h.call(t,"code-snippet",r)))),a.buffer.push("\n"),l})}),define("liquid-fire/templates/transition-map/dom-constraints",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,a){this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),a=a||{};var o,r,l="",h=i.helperMissing,u=this.escapeExpression;return a.buffer.push('<h2>DOM Constraints</h2>\n\n<p>These constraints let you target a transition rule based on the\nsurrounding DOM.</p>\n\n<dl class="dl-horizontal">\n  <dt>hasClass</dt>\n  <dd>\n    <p>Takes a class name and matches it against the animated\n    element. For example, this transition:</p>\n    \n    '),a.buffer.push(u((o=i["code-snippet"]||t&&t["code-snippet"],r={hash:{name:"has-class-example.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},o?o.call(t,r):h.call(t,"code-snippet",r)))),a.buffer.push("\n    \n    <p>Will match an animated element like this one:</p>\n    \n    "),a.buffer.push(u((o=i["code-snippet"]||t&&t["code-snippet"],r={hash:{name:"has-class-example.hbs"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},o?o.call(t,r):h.call(t,"code-snippet",r)))),a.buffer.push('\n\n    <div class="callout callout-info">\n    <p>Note that all the liquid helpers propagate\n    their <code>class</code> argument through to their liquid-child\n    elements. The above example results in DOM like this:\n\n    '),a.buffer.push(u((o=i["code-snippet"]||t&&t["code-snippet"],r={hash:{name:"has-class-example-dom.hbs"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},o?o.call(t,r):h.call(t,"code-snippet",r)))),a.buffer.push("\n    </div>\n      \n  </dd>\n\n  <dt>childOf</dt>\n  <dd>\n    <p>Takes a CSS selector and tests whether the animated element's\n    parent matches the selector. For example, this rule:</p>\n\n    "),a.buffer.push(u((o=i["code-snippet"]||t&&t["code-snippet"],r={hash:{name:"child-of-example.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},o?o.call(t,r):h.call(t,"code-snippet",r)))),a.buffer.push("\n\n    <p>Will match against this template:</p>\n\n    "),a.buffer.push(u((o=i["code-snippet"]||t&&t["code-snippet"],r={hash:{name:"child-of-example.hbs"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},o?o.call(t,r):h.call(t,"code-snippet",r)))),a.buffer.push('\n\n    <div class="callout callout-danger">\n      This constraint cannot match during the very first render of\n      your animated element, because Handlebars templates have no\n      knowledge of their DOM context until after they\'re inserted into\n      the document. This limitation should go away after Ember adopts\n      HTMLBars.\n    </div>\n  </dd>\n</dl>\n'),l})}),define("liquid-fire/templates/transition-map/index",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,a){this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),a=a||{},a.buffer.push("<h2>Using the Transition Map</h2>\n\n<p>The transition map is where you configure which transitions to run\nin which situations. In an ember-cli app, it is loaded automatically\nfrom <code>app/transitions.js</code>.</p>\n\n<div class=\"callout callout-info\">Instructions for non-ember-cli\nbuilds are still needed.</div>\n\n<p>When one of the liquid helpers detects an update that might need to\nanimate, it consults the transition map. The first matching rule that\nit finds will be applied.</p>\n\n<h3>Transition map top-level functions</h3>\n\n<dl class=\"dl-horizontal\">\n  <dt>transition</dt>\n  <dd>Creates a transition rule that governs when to apply a given\n  animation. The rule consists of one or more constraints and\n  a <code>use</code> statement. The animation named\n  by <code>use</code> will only run if all the constraints match.</dd>\n\n  <dt>define</dt>\n  <dd>\n    <p>Assigns a name to a given animation so that it can be targeted\n    by <code>use()</code> in transition rules. If you're sticking to\n    predefined aniations like <code>'toLeft'</code>, you don't need\n    this.</p>\n    </p>\n  </dd>\n\n</dl>\n\n<p>The next sections cover the kinds of constraints that can go inside\na transition rule.</p>\n\n\n")})}),define("liquid-fire/templates/transition-map/model-constraints",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,a){this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),a=a||{};var o,r,l="",h=i.helperMissing,u=this.escapeExpression;return a.buffer.push('<h2>Model Constraints</h2>\n\n<p>The constraints in this section apply to models. What constitutes\nthe from-model and to-model depends on which liquid helpers you\'re\nusing.</p>\n\n<ul>\n  <li><code>{{liquid-outlet}}</code> matches against the actual\n  router-provided models before and after the transition.</li>\n  <li><code>{{#liquid-with}}</code> and <code>{{liquid-bind}}</code>\n    match against their own bound contexts.</li>\n  <li><code>{{#liquid-if}}</code> matches against its predicate.</li>\n</ul>\n\n<p>These are the three model constraint methods:</p>\n\n<dl class="dl-horizontal">\n  <dt>fromModel</dt>\n  <dd>Matches the model before the transition.</dd>\n  <dt>toModel</dt>\n  <dd>Matches the model after the transition.</dd>\n  <dt>betweenModels</dt>\n  <dd>Matches the model both before and after the transition.</dd>\n</dl>\n\n<p>Here are examples to illustrate their use:</p>\n\n'),a.buffer.push(u((o=i["code-snippet"]||t&&t["code-snippet"],r={hash:{name:"model-match-examples.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},o?o.call(t,r):h.call(t,"code-snippet",r)))),a.buffer.push("\n"),l})}),define("liquid-fire/templates/transition-map/route-constraints",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.Handlebars.template(function(e,t,i,s,a){this.compilerInfo=[4,">= 1.0.0"],i=this.merge(i,n.Handlebars.helpers),a=a||{};var o,r,l="",h=i.helperMissing,u=this.escapeExpression;return a.buffer.push('<h2>Route Constraints</h2>\n\n<p>The following three constraints apply to route names. They all\naccept the same arguments.</p>\n\n<dl class="dl-horizontal">\n  <dt>fromRoute</dt>\n  <dd>Matches the route name at the start of a transition.</dd>\n\n  <dt>toRoute</dt>\n  <dd>Matches the route name at the end of a transition.</dd>\n\n  <dt>withinRoute</dt>\n  <dd>Matches the same name at both the start and end of the\n    transition. This is good for matching transitions that are not\n    route changes.\n  </dd>\n</dl>\n\n<p>Each of them accepts one or more arguments. The arguments can be\nstrings containing route names, or functions that test route\nnames. Best illustrated by example:</p>\n\n'),a.buffer.push(u((o=i["code-snippet"]||t&&t["code-snippet"],r={hash:{name:"route-match-examples.js"},hashTypes:{name:"STRING"},hashContexts:{name:t},contexts:[],types:[],data:a},o?o.call(t,r):h.call(t,"code-snippet",r)))),a.buffer.push("\n"),l})}),define("liquid-fire/views/application",["ember","exports"],function(e,t){"use strict";function n(e,t){var n=o(document).height()/e;i();for(var s=0;n>s;s++)o("body").append("<div class='grid' id='vgrid"+s+"'></div>"),o("#vgrid"+s).css({height:""+e+"px",width:"100%",position:"absolute",top:""+(e*s-1+t)+"px",left:"0px",borderTop:"1px solid black",zIndex:2e3,"pointer-events":"none",opacity:.2,"background-color":"transparent"})}function i(){o(".grid").remove()}function s(e,t){return null==t&&(t=0),o("#vgrid0").length>0?i():n(e,t)}var a=e["default"],o=a.$;t["default"]=a.View.extend({didInsertElement:function(){o(document).bind("keydown",function(e){e.ctrlKey&&e.altKey&&71===e.keyCode&&s(22)})}})}),define("liquid-fire/views/liquid-bind",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.View.extend(n._Metamorph,{templateName:"liquid-bind"})}),define("liquid-fire/views/liquid-child",["ember","exports"],function(e,t){"use strict";var n=e["default"];t["default"]=n.ContainerView.extend({classNames:["liquid-child"],resolveInsertionPromise:function(){this.$().hide(),this._resolveInsertion&&this._resolveInsertion(this)}.on("didInsertElement")})}),define("liquid-fire/views/liquid-if",["liquid-fire/views/liquid-outlet","ember","exports"],function(e,t,n){"use strict";var i=e["default"],s=t["default"];n["default"]=i.extend({liquidUpdate:s.observer("showFirst",function(){var e=this.get((this.get("showFirst")?"first":"second")+"Template"),t=s._MetamorphView.create({container:this.container,template:e,liquidParent:this,contextBinding:"liquidParent.context",liquidContext:this.get("showFirst"),hasLiquidContext:!0});this.set("currentView",t)}).on("init")})}),define("liquid-fire/views/liquid-outlet",["ember","liquid-fire/libs/liquid-fire","exports"],function(e,t,n){"use strict";var i=e["default"],s=t.Promise;n["default"]=i.ContainerView.extend(i._Metamorph,{init:function(){this._super(),this._childViews.clear()},_currentViewWillChange:i.beforeObserver("currentView",function(){}),_currentViewDidChange:i.observer("currentView",function(){var e=this.get("childViews.lastObject"),t=this.get("currentView");if(!(!e&&!t||e&&e.get("currentView")===t||this._runningTransition&&this._runningTransition.oldView===e&&this._runningTransition.newContent===t)){var n=this.get("transitions").transitionFor(this,e,t);this._runningTransition&&this._runningTransition.interrupt(),this._runningTransition=n,n.run()}}).on("init"),_liquidChildFor:function(e){e&&!e.get("hasLiquidContext")&&e.set("liquidContext",e.get("context"));var t=this.container.lookupFactory("view:liquid-child");return t.create({currentView:e,classNames:this.get("classNames"),classNameBindings:this.get("classNameBindings")})},_pushNewView:function(e){var t=this._liquidChildFor(e),n=new s(function(e){t._resolveInsertion=e});return this.pushObject(t),n}})}),define("liquid-fire/views/liquid-with",["liquid-fire/views/liquid-outlet","ember","exports"],function(e,t,n){"use strict";var i=e["default"],s=t["default"];n["default"]=i.extend({liquidUpdate:s.observer("boundContext",function(){var e=s._MetamorphView.create({container:this.container,templateName:"liquid-with",boundContext:this.get("boundContext"),liquidWithParent:this,liquidContext:this.get("boundContext"),hasLiquidContext:!0});this.set("currentView",e)}).on("init")})});