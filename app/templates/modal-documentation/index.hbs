<h2>Modal Dialogs</h2>

<p>Since  {{#link-to (query-params person="Tomster"
salutation="Hi")}}modals{{/link-to}} don't necessarily live <em>inside</em> any other view,
they don't belong inside your other templates and so we don't offer a
template helper for creating them. Instead, we offer conventions for
defining your modals as Ember components and tying them to properties
on your controllers.</p>

<p>A modal dialog is controlled by two key things: the scope in which
it's valid, and the list of parameters it observes.</p>

{{code-snippet name="sample-modal-routes.js"}}

<p>Modal dialogs can be scoped to any part of your
application. {{#link-to (query-params person="Tomhuda Katzdale"
salutation="Hola")}}This one{{/link-to}} is scoped within the "Modal
Dialogs" resource you're currently viewing, including all its child
routes. {{#link-to (query-params warn=1)}}But this one{{/link-to}} is
scoped to the whole application. You can experiment with the
difference by changing the URL.</p>

<p>In both of the demo popups from the preceeding paragraph, I'm
exposing the controller properties as <code>queryParams</code>. This
is a generally good thing to do, because it makes your modal state
part of the URL, and lets people dismiss the popup with the back
button. But this is optional.</p>

<h3>Modal dialog basics</h3>

<ol>
  <li><p>Insert the <code>\{{liquid-modal}}</code> component in
  your <code>application.hbs</code> template. You only need to do this
  once &mdash; it will manage all the modals in your application. It
  doesn't take any arguments.</p>

  <li>Create an Ember component the usual way. For example, here
  is <code>app/templates/components/hello-modal.hbs</code>:

    {{code-snippet name="hello-modal.hbs"}}

    And <code>app/components/hello-modal.js</code>:
    {{code-snippet name="hello-modal.js"}}

  <li>Call {{#link-to "modal-documentation.modal"}}modal(){{/link-to}}
  within your router map, at whichever scope you choose:

    {{code-snippet name="hello-modal-map.js"}}

  <li>You can launch your modal by setting the relevant properties on
  your controller. If the properties are also query params, you can just <code>link-to</code>. 
  In this example we will define them in our application controller. 
  You will need to define the relevant properties that trigger the modal in the specific 
  route/controller that where the modal dialog is loaded from.



    {{code-snippet name="application.js"}}
    <div id="basic-modal-demo">
    {{!- BEGIN-SNIPPET hello-tomster -}}
      // app/controllers/application.js
      import Ember from 'ember';

      export default Ember.Controller.extend({
        queryParams: ['salutation', 'person']
      });
    {{!- END-SNIPPET }}
    </div>


    {{code-snippet name="hello-tomster.hbs"}}
    <div id="basic-modal-demo">
    {{!- BEGIN-SNIPPET hello-tomster -}}
    {{#link-to (query-params salutation="Guten tag" person="Stef") tagName="button"}}
      Try It
    {{/link-to}}
    {{!- END-SNIPPET }}
    </div>
</ol>

